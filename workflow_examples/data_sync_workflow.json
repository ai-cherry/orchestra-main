[
  {
    "type": "comment",
    "content": "IMPORTANT: This workflow is designed for the roo_workflow_manager.py utility, which is completely separate from the main Project cherry_ai implementation."
  },
  {
    "type": "mode",
    "mode": "architect",
    "task": "Design a data synchronization system for our multi-agent AI system that securely transfers data between Lambda services and our application using containers as the coordination layer. Consider our existing infrastructure using Pulumi modules and the current GitHub-Lambda integration workflow."
  },
  {
    "type": "mode",
    "mode": "code",
    "task": "Implement a Python module that handles the data synchronization logic. Include error handling, logging, and authentication against Lambda services."
  },
  {
    "type": "vs_code_task",
    "task_id": "github_gcp_init",
    "inputs": {}
  },
  {
    "type": "mode",
    "mode": "reviewer",
    "task": "Review the implemented data synchronization code for security vulnerabilities, focusing on authentication handling, data encryption, and secure Lambda access patterns."
  },
  {
    "type": "mode",
    "mode": "code",
    "task": "Fix any security issues identified in the review and implement proper unit tests for the data synchronization module."
  },
  {
    "type": "pulumi",
    "operation": "up",
    "working_dir": "infra",
    "parameters": {
      "stack": "data-sync"
    }
  },
  {
    "type": "github",
    "operation": "create_branch",
    "parameters": {
      "branch_name": "feature/data-sync-service",
      "base_branch": "main"
    }
  },
  {
    "type": "github",
    "operation": "commit_changes",
    "parameters": {
      "message": "Add data synchronization service with secure Lambda integration",
      "files": [
        "src/data_sync_service.py",
        "tests/test_data_sync_service.py",
        "infra/data_sync_resources.py"
      ]
    }
  },
  {
    "type": "Lambda",
    "operation": "container_build",
    "parameters": {
      "config_path": "container_build_data_sync.yaml"
    }
  },
  {
    "type": "mode",
    "mode": "creative",
    "task": "Create comprehensive documentation for the data synchronization service, including architecture diagrams, setup instructions, security considerations, and usage examples."
  },
  {
    "type": "github",
    "operation": "create_pr",
    "parameters": {
      "title": "Data Synchronization Service Implementation",
      "body": "This PR adds a secure data synchronization service that transfers data between Lambda services and our application using containers. Includes Pulumi configuration, Python implementation, tests, and documentation.",
      "base_branch": "main"
    }
  }
]
