51:        spanner_instance_id: str,
52:        spanner_database_id: str,
62:            spanner_instance_id: Cloud Spanner instance ID
63:            spanner_database_id: Cloud Spanner database ID
69:        self.spanner_instance_id = spanner_instance_id
70:        self.spanner_database_id = spanner_database_id
77:            self.spanner_client = spanner.Client(project=project_id)
78:            self.instance = self.spanner_client.instance(spanner_instance_id)
79:            self.database = self.instance.database(spanner_database_id)
82:            self.async_spanner_client = None
85:                self.async_spanner_client = (
86:                    spanner_v1.services.spanner.SpannerAsyncClient()
119:        self._load_routing_data_from_spanner()
122:    def _load_routing_data_from_spanner(self) -> None:
169:        if not self.use_async_db or not self.async_spanner_client:
171:            self._load_routing_data_from_spanner()
179:            await loop.run_in_executor(None, self._load_routing_data_from_spanner)
278:        if not self.async_spanner_client:
458:            if self.use_async_db and self.async_spanner_client:
497:            if self.use_async_db and self.async_spanner_client:
544:                if self.use_async_db and self.async_spanner_client:
567:                keyset=spanner.KeySet(keys=[[production_agent_id]]),
609:            if self.use_async_db and self.async_spanner_client:
