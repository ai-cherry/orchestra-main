"""
Domain model definitions for the AI Orchestration System.

This module contains Pydantic models representing various business entities
used throughout the application.
"""

from datetime import datetime
from typing import Dict, Any, Optional

# Note: Pydantic might need to be installed if not present
try:
    from pydantic import BaseModel, Field
except ImportError:
    # Fallback to dataclasses if pydantic is not available
    from dataclasses import dataclass, field

    BaseModel = object

    def Field(*args, **kwargs):
        return field(default=None)


class UserRequest(BaseModel):
    """
    Represents incoming requests to the API.

    This model captures all relevant information about a user's request
    to the system, including metadata about the source and current status.

    Attributes:
        request_id: Unique identifier for the request
        user_id: Identifier for the user making the request
        query: The primary question or command from the user
        source: The channel or platform where the request originated
        content: Additional content or context for the request
        status: Current processing status of the request
        timestamp: When the request was received
    """

    request_id: str = Field(description="Unique identifier for the request")
    user_id: str = Field(description="Identifier for the user making the request")
    query: str = Field(description="The primary question or command from the user")
    source: str = Field(description="The channel or platform where the request originated")
    content: str = Field(description="Additional content or context for the request")
    status: str = Field(default="pending", description="Current processing status of the request")
    timestamp: datetime = Field(default_factory=datetime.utcnow, description="When the request was received")


class AgentResponse(BaseModel):
    """
    Represents the standard output from agents.

    This model captures the response generated by an agent in the system,
    along with metadata about which request it's responding to and its status.

    Attributes:
        response_id: Unique identifier for this response
        request_id: Identifier linking back to the original request
        agent_id: Identifier for the agent that generated this response
        content: The actual response content
        status: Processing status of the response
        timestamp: When the response was generated
    """

    response_id: str = Field(description="Unique identifier for this response")
    request_id: str = Field(description="Identifier linking back to the original request")
    agent_id: str = Field(description="Identifier for the agent that generated this response")
    content: str = Field(description="The actual response content")
    status: str = Field(default="completed", description="Processing status of the response")
    timestamp: datetime = Field(default_factory=datetime.utcnow, description="When the response was generated")


class MemoryRecord(BaseModel):
    """
    Represents data stored in Firestore/Pinecone.

    This model describes the structure of records stored in memory systems
    like Firestore or vector databases like Pinecone, facilitating storage
    and retrieval of contextual information.

    Attributes:
        record_id: Unique identifier for the memory record
        context: Contextual information about where/how this memory was formed
        persona: The persona associated with this memory (if applicable)
        content: The actual content of the memory
        timestamp: When the memory was created or last updated
        metadata: Additional structured data about the memory
    """

    record_id: str = Field(description="Unique identifier for the memory record")
    context: str = Field(description="Contextual information about where/how this memory was formed")
    persona: str = Field(description="The persona associated with this memory (if applicable)")
    content: str = Field(description="The actual content of the memory")
    timestamp: datetime = Field(
        default_factory=datetime.utcnow,
        description="When the memory was created or last updated",
    )
    metadata: Dict[str, Any] = Field(default_factory=dict, description="Additional structured data about the memory")


class WorkflowState(BaseModel):
    """
    Represents data passed between Temporal activities/workflows.

    This model captures the state of workflows in the system,
    facilitating communication between different workflow steps
    and enabling workflow monitoring and management.

    Attributes:
        workflow_id: Unique identifier for the workflow instance
        state: Current state descriptor for the workflow
        data: State data being passed between workflow steps
        timestamp: When this workflow state was last updated
    """

    workflow_id: str = Field(description="Unique identifier for the workflow instance")
    state: str = Field(description="Current state descriptor for the workflow")
    data: Dict[str, Any] = Field(
        default_factory=dict,
        description="State data being passed between workflow steps",
    )
    timestamp: datetime = Field(
        default_factory=datetime.utcnow,
        description="When this workflow state was last updated",
    )


class PayReadyContact(BaseModel):
    """
    Represents contacts in the PayReady system.

    This model represents contacts in the PayReady system, typically
    integrated with external systems like Salesforce. It contains
    standard contact information fields.

    Attributes:
        contact_id: Unique identifier for the contact
        name: Full name of the contact
        email: Email address of the contact
        phone: Phone number of the contact
        address: Physical address of the contact
        company: Associated company name
        timestamp: When this contact record was created or updated
    """

    contact_id: str = Field(description="Unique identifier for the contact")
    name: str = Field(description="Full name of the contact")
    email: str = Field(description="Email address of the contact")
    phone: str = Field(description="Phone number of the contact")
    address: str = Field(description="Physical address of the contact")
    company: str = Field(description="Associated company name")
    timestamp: datetime = Field(
        default_factory=datetime.utcnow,
        description="When this contact record was created or updated",
    )


class PayReadyLead(BaseModel):
    """
    Represents leads in the PayReady system.

    This model stores information about sales leads in the PayReady system,
    capturing essential contact details and the current status of the lead.

    Attributes:
        lead_id: Unique identifier for the lead
        name: Full name of the lead
        email: Email address of the lead
        phone: Phone number of the lead
        status: Current status of the lead in the sales pipeline
        timestamp: When this lead record was created or updated
    """

    lead_id: str = Field(description="Unique identifier for the lead")
    name: str = Field(description="Full name of the lead")
    email: str = Field(description="Email address of the lead")
    phone: str = Field(description="Phone number of the lead")
    status: str = Field(default="new", description="Current status of the lead in the sales pipeline")
    timestamp: datetime = Field(
        default_factory=datetime.utcnow,
        description="When this lead record was created or updated",
    )


class Configuration(BaseModel):
    """
    Represents system configuration settings.

    This model stores configuration settings for the system,
    enabling dynamic configuration management and persistence.

    Attributes:
        config_id: Unique identifier for this configuration entry
        key: The configuration parameter name
        value: The configuration parameter value
        timestamp: When this configuration was last updated
    """

    config_id: str = Field(description="Unique identifier for this configuration entry")
    key: str = Field(description="The configuration parameter name")
    value: str = Field(description="The configuration parameter value")
    timestamp: datetime = Field(
        default_factory=datetime.utcnow,
        description="When this configuration was last updated",
    )
