{
  "timestamp": "2025-06-03T17:26:20.989786",
  "summary": {
    "total_files": 825,
    "files_with_broken_imports": 135,
    "broken_import_count": 361,
    "circular_dependency_count": 6,
    "unused_function_count": 526,
    "unused_class_count": 1461,
    "duplicate_function_count": 312,
    "duplicate_class_count": 151,
    "import_style_issue_count": 76
  },
  "broken_imports": [
    {
      "file": "/root/cherry_ai-main/dragonfly_config.py",
      "line": 14,
      "module": "dragonfly_secrets",
      "item": "DRAGONFLY_CONNECTION_URI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/dragonfly_config.py",
      "line": 14,
      "module": "dragonfly_secrets",
      "item": "DRAGONFLY_DB_INDEX",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/dragonfly_config.py",
      "line": 14,
      "module": "dragonfly_secrets",
      "item": "DRAGONFLY_HOST",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/dragonfly_config.py",
      "line": 14,
      "module": "dragonfly_secrets",
      "item": "DRAGONFLY_PASSWORD",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/dragonfly_config.py",
      "line": 14,
      "module": "dragonfly_secrets",
      "item": "DRAGONFLY_PORT",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "line": 23,
      "module": "bs4",
      "item": "BeautifulSoup",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "line": 26,
      "module": "playwright.async_api",
      "item": "Page",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "line": 26,
      "module": "playwright.async_api",
      "item": "async_playwright",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "line": 27,
      "module": "sentence_transformers",
      "item": "SentenceTransformer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
      "line": 25,
      "module": "langchain_google_genai",
      "item": "GoogleGenerativeAIEmbeddings",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
      "line": 26,
      "module": "langchain_redis.cache",
      "item": "RedisSemanticCache",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
      "line": 27,
      "module": "redisvl",
      "item": "SemanticCacher",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
      "line": 29,
      "module": "packages.shared.src.memory.redis_semantic_cacher",
      "item": "RedisSemanticCacheProvider",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 45,
      "module": "bs4",
      "item": "BeautifulSoup",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 46,
      "module": "colorama",
      "item": "Fore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 46,
      "module": "colorama",
      "item": "Style",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 46,
      "module": "colorama",
      "item": "init",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 47,
      "module": "tabulate",
      "item": "tabulate",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 416,
      "module": "selenium",
      "item": "webdriver",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 417,
      "module": "selenium.webdriver.chrome.service",
      "item": "Service",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 418,
      "module": "selenium.webdriver.chrome.options",
      "item": "Options",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "line": 419,
      "module": "webdriver_manager.chrome",
      "item": "ChromeDriverManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
      "line": 14,
      "module": "enhanced_vector_memory_system",
      "item": "EnhancedVectorMemorySystem",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 62,
      "module": "docopt",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 41,
      "module": "cline_integration",
      "item": "CLINE_MODE_MAP",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "UNIFIED_WORKFLOWS",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "AITool",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "MCPServerManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "MemoryScope",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "UnifiedMemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "UnifiedModeManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "line": 42,
      "module": "unified_mcp_conductor",
      "item": "UnifiedWorkflowconductor",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 9,
      "module": "mongodb",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 15,
      "module": "secretmanager",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 21,
      "module": "monitoring_v3",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 27,
      "module": "cloud_logging",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 33,
      "module": "tasks_v2",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/optional_integrations.py",
      "line": 39,
      "module": "storage",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "line": 15,
      "module": "enhanced_vector_memory_system",
      "item": "ContextualMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "line": 15,
      "module": "enhanced_vector_memory_system",
      "item": "ConversationContext",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "line": 15,
      "module": "enhanced_vector_memory_system",
      "item": "EnhancedVectorMemorySystem",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "line": 21,
      "module": "google.api_core.exceptions",
      "item": "GoogleAPIError",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "line": 23,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryHealth",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "line": 23,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
      "line": 23,
      "module": "mcp_server.config.dragonfly_config",
      "item": "log_dragonfly_config",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
      "line": 23,
      "module": "mcp_server.config.dragonfly_config",
      "item": "validate_dragonfly_config",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
      "line": 25,
      "module": "mcp_server.memory.dragonfly_cache",
      "item": "DragonflyCache",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "line": 16,
      "module": "enhanced_vector_memory_system",
      "item": "EnhancedVectorMemorySystem",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/simple_mcp.py",
      "line": 18,
      "module": "flask_cors",
      "item": "CORS",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
      "line": 5,
      "module": "phidata.utils.log",
      "item": "logger",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "line": 14,
      "module": "packages.llm.src.portkey_client",
      "item": "PortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "line": 15,
      "module": "packages.memory.src.base",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "line": 16,
      "module": "packages.phidata.src.cloudsql_pgvector",
      "item": "get_pg_agent_storage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "line": 16,
      "module": "packages.phidata.src.cloudsql_pgvector",
      "item": "get_pgvector_memory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "line": 17,
      "module": "packages.tools.src.base",
      "item": "ToolRegistry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "line": 14,
      "module": "packages.shared.src.memory.context_pruner",
      "item": "ContextPruner",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "line": 15,
      "module": "packages.shared.src.memory.memory_interface",
      "item": "MemoryInterface",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "line": 16,
      "module": "packages.shared.src.memory.memory_profiler",
      "item": "MemoryProfiler",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "line": 17,
      "module": "packages.shared.src.memory.redis_lru_cache",
      "item": "RedisLRUCache",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "line": 18,
      "module": "packages.shared.src.memory.tiered_storage",
      "item": "TieredStorageManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/portkey_virtual_keys_demo.py",
      "line": 27,
      "module": "packages.shared.src.llm_client.portkey_client",
      "item": "PortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/litellm_integration.py",
      "line": 41,
      "module": "nest_asyncio",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "FirestoreConfig",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "MemoryBackendType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "MemoryConfig",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "TelemetryConfig",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "VectorSearchConfig",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 18,
      "module": "packages.shared.src.memory.config",
      "item": "VectorSearchType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 26,
      "module": "packages.shared.src.memory.factory",
      "item": "MemoryManagerFactory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 27,
      "module": "packages.shared.src.memory.telemetry",
      "item": "configure_telemetry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 27,
      "module": "packages.shared.src.memory.telemetry",
      "item": "log_operation",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_example.py",
      "line": 27,
      "module": "packages.shared.src.memory.telemetry",
      "item": "trace_operation",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/cherry_ai_vultr_stack.py",
      "line": 7,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/vultr_deployment.py",
      "line": 7,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/__main__.py",
      "line": 7,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/__main__.py",
      "line": 8,
      "module": "pulumi_postgresql",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/domain_separation.py",
      "line": 7,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/health_monitor.py",
      "line": 228,
      "module": "core.cache_manager",
      "item": "get_cache_manager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "line": 15,
      "module": "semantic_version",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "line": 16,
      "module": "networkx",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
      "line": 60,
      "module": "pymongo",
      "item": "MongoClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
      "line": 35,
      "module": "sentence_transformers",
      "item": "SentenceTransformer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "line": 23,
      "module": "schedule",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "line": 544,
      "module": "daemon",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/validate_integration.py",
      "line": 45,
      "module": "shared.weaviate_client",
      "item": "WeaviateClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
      "line": 27,
      "module": "shared.database.unified_db_v2",
      "item": "get_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
      "line": 402,
      "module": "shared.database.unified_db_v2",
      "item": "close_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
      "line": 166,
      "module": "ai_components.cursor_ai.cursor_integration",
      "item": "CursorAIClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
      "line": 189,
      "module": "ai_components.roo_code.roo_integration",
      "item": "RooCodeClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/initialize_enhanced_system.py",
      "line": 17,
      "module": "shared.database.unified_db_v2",
      "item": "get_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
      "line": 21,
      "module": "core.llm_router",
      "item": "UseCase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
      "line": 21,
      "module": "core.llm_router",
      "item": "ModelTier",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
      "line": 21,
      "module": "core.llm_router",
      "item": "UnifiedLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
      "line": 16,
      "module": "pexpect",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "line": 23,
      "module": "shared.database.unified_db_v2",
      "item": "get_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "line": 23,
      "module": "shared.database.unified_db_v2",
      "item": "close_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "line": 10,
      "module": "core.llm_intelligent_router",
      "item": "IntelligentLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "line": 10,
      "module": "core.llm_intelligent_router",
      "item": "QueryClassifier",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "line": 10,
      "module": "core.llm_intelligent_router",
      "item": "QueryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "line": 10,
      "module": "core.llm_intelligent_router",
      "item": "ModelProfile",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "line": 10,
      "module": "core.llm_intelligent_router",
      "item": "RoutingDecision",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "line": 21,
      "module": "enhanced_vector_memory_system",
      "item": "ContextualMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "line": 21,
      "module": "enhanced_vector_memory_system",
      "item": "EnhancedVectorMemorySystem",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "line": 14,
      "module": "core.cache_manager",
      "item": "CacheManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "line": 17,
      "module": "core.llm_router_enhanced",
      "item": "UnifiedLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/test_api_integration.py",
      "line": 14,
      "module": "core.llm_intelligent_router",
      "item": "QueryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/vultr_deployment.py",
      "line": 6,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
      "line": 25,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
      "line": 26,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
      "line": 27,
      "module": "components.postgres_component",
      "item": "PostgresComponent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
      "line": 30,
      "module": "components.vector_droplet_component",
      "item": "VectorDropletComponent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/__main__.py",
      "line": 5,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/vultr_single_node_stack.py",
      "line": 3,
      "module": "components.vultr_server_component",
      "item": "VultrServerComponent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
      "line": 16,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
      "line": 17,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/core_stack.py",
      "line": 9,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/deploy/superagi_config.py",
      "line": 10,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "CompressionLevel",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "InMemoryStorage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "MemoryEntry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "MemoryMetadata",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "MemoryScope",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "MemorySyncEngine",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "MemoryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "line": 18,
      "module": "memory_sync_engine",
      "item": "ToolType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "line": 17,
      "module": "aiocache",
      "item": "Cache",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "line": 18,
      "module": "aiocache.serializers",
      "item": "PickleSerializer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 15,
      "module": "prefect",
      "item": "flow",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 15,
      "module": "prefect",
      "item": "task",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 15,
      "module": "prefect",
      "item": "get_run_logger",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 16,
      "module": "prefect.task_runners",
      "item": "ConcurrentTaskRunner",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 17,
      "module": "prefect.artifacts",
      "item": "create_markdown_artifact",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
      "line": 18,
      "module": "prefect.context",
      "item": "get_run_context",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
      "line": 23,
      "module": "shared.database.unified_db_v2",
      "item": "get_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
      "line": 549,
      "module": "shared.database.unified_db_v2",
      "item": "close_unified_database",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
      "line": 22,
      "module": "coordination.ai_conductor",
      "item": "Workflowconductor",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
      "line": 22,
      "module": "coordination.ai_conductor",
      "item": "TaskDefinition",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
      "line": 22,
      "module": "coordination.ai_conductor",
      "item": "AgentRole",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
      "line": 686,
      "module": "ai_conductor",
      "item": "DatabaseLogger",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
      "line": 20,
      "module": "colorama",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
      "line": 22,
      "module": "colorama",
      "item": "Fore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
      "line": 22,
      "module": "colorama",
      "item": "Style",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_switcher.py",
      "line": 25,
      "module": "colorama",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_switcher.py",
      "line": 26,
      "module": "colorama",
      "item": "Fore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/mode_switcher.py",
      "line": 26,
      "module": "colorama",
      "item": "Style",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "line": 171,
      "module": "roo.hooks",
      "item": "register_hook",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/__main__.py",
      "line": 5,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/__main__.py",
      "line": 6,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/__init__.py",
      "line": 9,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
      "line": 9,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
      "line": 10,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
      "line": 9,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
      "line": 10,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/pinecone_adapter.py",
      "line": 13,
      "module": "pinecone",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/agents/retriever_agent.py",
      "line": 3,
      "module": "llama_index.agent",
      "item": "RetrieverAgent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/agents/retriever_agent.py",
      "line": 4,
      "module": "llama_index",
      "item": "VectorStoreIndex",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
      "line": 11,
      "module": "lz4.frame",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "line": 12,
      "module": "lz4.frame",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
      "line": 10,
      "module": "motor.motor_asyncio",
      "item": "AsyncIOMotorClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
      "line": 11,
      "module": "pymongo.errors",
      "item": "ConnectionFailure",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
      "line": 11,
      "module": "pymongo.errors",
      "item": "ServerSelectionTimeoutError",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
      "line": 21,
      "module": "config.os.environ",
      "item": "get_secret",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
      "line": 21,
      "module": "config.os.environ",
      "item": "secrets",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
      "line": 15,
      "module": "core.conductor.src.memory.models",
      "item": "MemoryEntry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
      "line": 15,
      "module": "core.conductor.src.memory.models",
      "item": "MemorySearchResult",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
      "line": 15,
      "module": "core.conductor.src.memory.models",
      "item": "MemoryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "line": 70,
      "module": "pymongo",
      "item": "MongoClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
      "line": 11,
      "module": "core.conductor.src.agents.unified_agent_registry",
      "item": "AgentContext",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
      "line": 11,
      "module": "core.conductor.src.agents.unified_agent_registry",
      "item": "AgentRegistry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
      "line": 11,
      "module": "core.conductor.src.memory.backends.mongodb_memory",
      "item": "MongoDBMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
      "line": 13,
      "module": "core.conductor.src.memory.backends.vertex_memory",
      "item": "VertexMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py",
      "line": 15,
      "module": "opentelemetry.exporter.cloud_trace",
      "item": "CloudTraceSpanExporter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
      "line": 221,
      "module": "agent.core.vertex_operations",
      "item": "VertexAgent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 13,
      "module": "langchain.callbacks.manager",
      "item": "CallbackManagerForLLMRun",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 14,
      "module": "langchain.chat_models.base",
      "item": "BaseChatModel",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 15,
      "module": "langchain.llms.base",
      "item": "BaseLLM",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 16,
      "module": "langchain.schema",
      "item": "BaseMessage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 16,
      "module": "langchain.schema",
      "item": "ChatGeneration",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 16,
      "module": "langchain.schema",
      "item": "ChatMessage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "line": 16,
      "module": "langchain.schema",
      "item": "LLMResult",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py",
      "line": 15,
      "module": "core.conductor.src.services.pubsub_client",
      "item": "get_pubsub_client",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
      "line": 13,
      "module": "packages.shared.src.llm_client.interface",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
      "line": 14,
      "module": "packages.shared.src.memory.services.memory_service",
      "item": "MemoryService",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
      "line": 13,
      "module": "core.conductor.src.agents.unified_agent_registry",
      "item": "AgentCapability",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
      "line": 13,
      "module": "core.conductor.src.agents.unified_agent_registry",
      "item": "get_agent_registry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 65,
      "module": "packages.shared.src.llm_client.portkey_client",
      "item": "PortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 75,
      "module": "packages.shared.src.llm_client.mock_portkey_client",
      "item": "MockPortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 84,
      "module": "packages.shared.src.llm_client.mock_portkey_client",
      "item": "MockPortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 128,
      "module": "packages.llm.src.models.openai",
      "item": "create_openai_model",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 154,
      "module": "packages.shared.src.llm_client.portkey_client",
      "item": "PortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 133,
      "module": "packages.llm.src.models.anthropic",
      "item": "create_anthropic_model",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 138,
      "module": "packages.llm.src.models.openrouter",
      "item": "create_openrouter_model",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
      "line": 145,
      "module": "packages.llm.src.models.openrouter",
      "item": "create_openrouter_model",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
      "line": 19,
      "module": "packages.shared.src.cache.redis_client",
      "item": "RedisCache",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
      "line": 15,
      "module": "packages.shared.src.prompt_builder",
      "item": "PromptBuilder",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
      "line": 15,
      "module": "packages.shared.src.prompt_builder",
      "item": "PromptFormat",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 41,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "InMemoryMemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 41,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 84,
      "module": "packages.shared.src.memory.adapters.mongodb_adapter",
      "item": "MongoDBStorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 85,
      "module": "packages.shared.src.memory.adapters.postgres_adapter",
      "item": "PostgresStorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 86,
      "module": "packages.shared.src.memory.services.memory_service",
      "item": "MemoryService",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 87,
      "module": "packages.shared.src.memory.services.memory_service_factory",
      "item": "MemoryServiceFactory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 50,
      "module": "packages.shared.src.memory.mongodb_adapter",
      "item": "MongoDBMemoryAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
      "line": 69,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
      "line": 20,
      "module": "packages.shared.src.llm_client.interface",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
      "line": 21,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "line": 20,
      "module": "packages.ingestion.src.api.chat_integration",
      "item": "IngestionChatMiddleware",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "line": 20,
      "module": "packages.ingestion.src.api.chat_integration",
      "item": "get_ingestion_middleware",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "line": 20,
      "module": "packages.ingestion.src.api.chat_integration",
      "item": "process_phidata_message",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "line": 25,
      "module": "packages.shared.src.llm_client.interface",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "line": 26,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 11,
      "module": "pymongo",
      "item": "ASCENDING",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 11,
      "module": "pymongo",
      "item": "DESCENDING",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 11,
      "module": "pymongo",
      "item": "MongoClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 12,
      "module": "pymongo.errors",
      "item": "ConnectionFailure",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 12,
      "module": "pymongo.errors",
      "item": "OperationFailure",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 139,
      "module": "bson",
      "item": "ObjectId",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "line": 162,
      "module": "bson",
      "item": "ObjectId",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "line": 116,
      "module": "core.conductor.src.agents.memory.in_memory",
      "item": "InMemoryStore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "line": 120,
      "module": "core.conductor.src.agents.memory.pgvector",
      "item": "PGVectorStore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "line": 124,
      "module": "core.conductor.src.agents.memory.vertex",
      "item": "VertexVectorMemoryStore",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
      "line": 268,
      "module": "core.conductor.src.services.llm.secret_manager",
      "item": "get_secret_manager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/mocks/memory_fixtures.py",
      "line": 12,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
      "line": 18,
      "module": "packages.shared.src.memory.concrete_memory_manager",
      "item": "FirestoreV1MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
      "line": 20,
      "module": "packages.shared.src.storage.postgresql.firestore_memory",
      "item": "FirestoreMemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
      "line": 21,
      "module": "packages.shared.src.storage.postgresql.v2",
      "item": "FirestoreMemoryManagerV2",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
      "line": 29,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
      "line": 30,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
      "line": 2,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
      "line": 3,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/weaviate_component.py",
      "line": 24,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/database_component.py",
      "line": 7,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/litellm_component.py",
      "line": 9,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/ingress_component.py",
      "line": 9,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/secret_helper.py",
      "line": 22,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/monitoring_component.py",
      "line": 9,
      "module": "pulumi_kubernetes",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
      "line": 29,
      "module": "pulumi_digitalocean",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
      "line": 30,
      "module": "pulumi_command",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "line": 322,
      "module": "packages.shared.src.version",
      "item": "VERSION",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
      "line": 13,
      "module": "packages.shared.src.llm_client.portkey_client",
      "item": "PortkeyClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
      "line": 16,
      "module": "packages.shared.src.memory.memory_manager",
      "item": "MemoryManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
      "line": 20,
      "module": "packages.shared.src.storage.base",
      "item": "ToolRegistry",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
      "line": 10,
      "module": "packages.core.src.models",
      "item": "AgentInput",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
      "line": 10,
      "module": "packages.core.src.models",
      "item": "AgentOutput",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
      "line": 13,
      "module": "packages.agents.src.phidata.wrapper",
      "item": "PhidataAgentWrapper",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
      "line": 18,
      "module": "packages.phidata.src.cloudsql_pgvector",
      "item": "get_pg_agent_storage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
      "line": 18,
      "module": "packages.phidata.src.cloudsql_pgvector",
      "item": "get_pgvector_memory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
      "line": 67,
      "module": "core.conductor.src.core.config",
      "item": "get_agent_config",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 14,
      "module": "langchain.memory.chat_memory",
      "item": "BaseChatMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 15,
      "module": "langchain.memory.chat_message_histories",
      "item": "ChatMessageHistory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 16,
      "module": "langchain.memory.summary_buffer",
      "item": "ConversationSummaryBufferMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 17,
      "module": "langchain.memory.utils",
      "item": "get_prompt_input_key",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 18,
      "module": "langchain.schema",
      "item": "AIMessage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 18,
      "module": "langchain.schema",
      "item": "BaseMemory",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 18,
      "module": "langchain.schema",
      "item": "BaseMessage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "line": 18,
      "module": "langchain.schema",
      "item": "HumanMessage",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "line": 22,
      "module": "neo4j",
      "item": "Driver",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "line": 22,
      "module": "neo4j",
      "item": "GraphDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "line": 25,
      "module": "sentence_transformers",
      "item": "SentenceTransformer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "line": 20,
      "module": "motor.motor_asyncio",
      "item": "AsyncIOMotorClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
      "line": 185,
      "module": "factory_ai",
      "item": "FactoryAI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
      "line": 174,
      "module": "factory_ai",
      "item": "FactoryAI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
      "line": 142,
      "module": "factory_ai",
      "item": "FactoryAI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
      "line": 166,
      "module": "factory_ai",
      "item": "FactoryAI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
      "line": 168,
      "module": "factory_ai",
      "item": "FactoryAI",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
      "line": 126,
      "module": "cline_integration",
      "item": "ClineModeManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
      "line": 17,
      "module": "PIL",
      "item": "Image",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
      "line": 20,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
      "line": 21,
      "module": "src.shared.storage_adapter",
      "item": "StorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
      "line": 22,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
      "line": 18,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
      "line": 19,
      "module": "src.shared.storage_adapter",
      "item": "StorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
      "line": 20,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
      "line": 17,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
      "line": 18,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
      "line": 13,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
      "line": 14,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
      "line": 15,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
      "line": 14,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
      "line": 15,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
      "line": 16,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
      "line": 12,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
      "line": 13,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
      "line": 14,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
      "line": 15,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
      "line": 16,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
      "line": 17,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
      "line": 14,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
      "line": 15,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
      "line": 16,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
      "line": 16,
      "module": "cv2",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
      "line": 19,
      "module": "imagehash",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
      "line": 18,
      "module": "PIL",
      "item": "Image",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
      "line": 22,
      "module": "src.shared.storage_adapter",
      "item": "StorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "line": 16,
      "module": "PyPDF2",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "line": 17,
      "module": "docx",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "line": 18,
      "module": "openpyxl",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "line": 19,
      "module": "markdown",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "line": 20,
      "module": "chardet",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
      "line": 18,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
      "line": 19,
      "module": "src.shared.weaviate_adapter",
      "item": "WeaviateAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
      "line": 20,
      "module": "src.shared.storage_adapter",
      "item": "StorageAdapter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "line": 18,
      "module": "whisper",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "line": 19,
      "module": "librosa",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "line": 20,
      "module": "soundfile",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "line": 22,
      "module": "pydub",
      "item": "AudioSegment",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "line": 23,
      "module": "pydub.silence",
      "item": "split_on_silence",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
      "line": 18,
      "module": "src.shared.llm_client",
      "item": "LLMClient",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
      "line": 19,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
      "line": 17,
      "module": "src.shared.database",
      "item": "UnifiedDatabase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/src/infrastructure/pulumi/advanced_system_stack.py",
      "line": 7,
      "module": "pulumi_vultr",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
      "line": 13,
      "module": "core.llm_router_base",
      "item": "BaseLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
      "line": 98,
      "module": "core.llm_router",
      "item": "UnifiedLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
      "line": 104,
      "module": "core.llm_router_dynamic",
      "item": "DynamicLLMRouter",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "line": 12,
      "module": "watchdog.observers",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "line": 13,
      "module": "watchdog.events",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 17,
      "module": "coordination.coding_activity_monitor",
      "item": "CodingActivityMonitor",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 17,
      "module": "coordination.coding_activity_monitor",
      "item": "ScheduledAutomation",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 18,
      "module": "coordination.mcp_integration",
      "item": "MCPCoordinator",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 18,
      "module": "coordination.mcp_integration",
      "item": "MCPContextManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 18,
      "module": "coordination.mcp_integration",
      "item": "MCPWebSocketServer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 18,
      "module": "coordination.mcp_integration",
      "item": "RooAgent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 18,
      "module": "coordination.mcp_integration",
      "item": "FactoryAIAgent",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 22,
      "module": "coordination.cursor_integration",
      "item": "CursorIntegrationServer",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 23,
      "module": "coordination.vultr_autoscaling",
      "item": "Vultrconductor",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "line": 24,
      "module": "coordination.ai_conductor",
      "item": "AICoordinator",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "Workflowconductor",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "TaskDefinition",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "AgentRole",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "TaskStatus",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "WorkflowContext",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "AgentCoordinator",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "DatabaseLogger",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "WeaviateManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "line": 18,
      "module": "coordination.ai_conductor",
      "item": "MCPContextManager",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "line": 9,
      "module": "core.llm_router_dynamic",
      "item": "get_dynamic_llm_router",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "line": 9,
      "module": "core.llm_router_dynamic",
      "item": "UseCase",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "line": 9,
      "module": "core.llm_router_dynamic",
      "item": "ModelTier",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "line": 9,
      "module": "core.llm_router_dynamic",
      "item": "RouterConfig",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "line": 14,
      "module": "aiofiles",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "line": 13,
      "module": "core.llm_router_dynamic",
      "item": "get_dynamic_llm_router",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "line": 22,
      "module": "agent.app.core.database",
      "item": "get_db",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "line": 17,
      "module": "agent.app.core.database",
      "item": "get_db",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "line": 18,
      "module": "core.llm_intelligent_router",
      "item": "get_intelligent_llm_router",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "line": 18,
      "module": "core.llm_intelligent_router",
      "item": "QueryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "line": 26,
      "module": "core.llm_intelligent_router",
      "item": "get_intelligent_llm_router",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "line": 26,
      "module": "core.llm_intelligent_router",
      "item": "QueryType",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "line": 27,
      "module": "agent.app.core.database",
      "item": "get_db",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "line": 21,
      "module": "networkx",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "line": 32,
      "module": "core.llm_intelligent_router",
      "item": "get_intelligent_llm_router",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "line": 33,
      "module": "agent.app.core.database",
      "item": "get_db",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "line": 111,
      "module": "openrouter",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "line": 139,
      "module": "deepseek",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
      "line": 8,
      "module": "mlflow",
      "type": "standard",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "line": 18,
      "module": "prefect",
      "item": "task",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "line": 18,
      "module": "prefect",
      "item": "flow",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "line": 19,
      "module": "prefect.task_runners",
      "item": "ConcurrentTaskRunner",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
      "line": 16,
      "module": "rapidfuzz",
      "item": "fuzz",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
      "line": 16,
      "module": "rapidfuzz",
      "item": "process",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
      "line": 17,
      "module": "email_validator",
      "item": "validate_email",
      "type": "from",
      "issue": "Module not found"
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
      "line": 17,
      "module": "email_validator",
      "item": "EmailNotValidError",
      "type": "from",
      "issue": "Module not found"
    }
  ],
  "circular_dependencies": [
    [
      "core.conductor.src.agents.simplified_agent_registry",
      "core.conductor.src.agents.simplified_agent_registry",
      "packages.agents.src.phidata_agent",
      "core.conductor.src.main"
    ],
    [
      "core.conductor.src.agents.simplified_agent_registry",
      "packages.agents.src.phidata_agent",
      "core.conductor.src.main",
      "core.conductor.src.main"
    ],
    [
      "mcp_server.main",
      "mcp_server.main"
    ],
    [
      "core.conductor.src.agents.simplified_agent_registry",
      "packages.agents.src.phidata_agent",
      "packages.agents.src.phidata_agent",
      "core.conductor.src.main"
    ],
    [
      "packages.agents.src.phidata.team_wrapper",
      "packages.agents.src.registry",
      "packages.agents.src.registry"
    ],
    [
      "packages.agents.src.phidata.team_wrapper",
      "packages.agents.src.phidata.team_wrapper",
      "packages.agents.src.registry"
    ]
  ],
  "unused_functions": [
    {
      "file": "/root/cherry_ai-main/find_critical_lint_issues.py",
      "name": "parse_ruff_json_output",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/scan_github_workflows.py",
      "name": "scan_action_versions",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/scan_github_workflows.py",
      "name": "scan_hardcoded_values",
      "line": 88
    },
    {
      "file": "/root/cherry_ai-main/scan_github_workflows.py",
      "name": "scan_authentication_methods",
      "line": 154
    },
    {
      "file": "/root/cherry_ai-main/scan_github_workflows.py",
      "name": "scan_python_versions",
      "line": 199
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "handle_async_exception",
      "line": 178
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "map_exception",
      "line": 546
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "decorator",
      "line": 123
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "decorator",
      "line": 201
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "decorator",
      "line": 427
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "decorator",
      "line": 503
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "parse_json",
      "line": 633
    },
    {
      "file": "/root/cherry_ai-main/mcp_cli.py",
      "name": "format_output",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_Import",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_ImportFrom",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_Name",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_FunctionDef",
      "line": 141
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_ClassDef",
      "line": 198
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_If",
      "line": 226
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_For",
      "line": 230
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_While",
      "line": 234
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_Try",
      "line": 238
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_ExceptHandler",
      "line": 242
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "visit_BoolOp",
      "line": 246
    },
    {
      "file": "/root/cherry_ai-main/test_mcp_system.py",
      "name": "decorator",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "get_active_conversations",
      "line": 582
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "handle_storage_errors",
      "line": 108
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "decorator",
      "line": 161
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "get_production_readiness_report",
      "line": 629
    },
    {
      "file": "/root/cherry_ai-main/utils.py",
      "name": "load_env_file",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/utils.py",
      "name": "decorator",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/utils.py",
      "name": "get_key",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/utils.py",
      "name": "has_key",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "phase_1_foundation_cleanup",
      "line": 115
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "phase_2_core_consolidation",
      "line": 266
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "phase_3_architecture_enhancement",
      "line": 339
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "phase_4_performance_optimization",
      "line": 364
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "phase_5_script_automation",
      "line": 389
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "remove_poetry_config",
      "line": 120
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "consolidate_requirements",
      "line": 153
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "deploy_unified_config",
      "line": 240
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "deploy_unified_llm_router",
      "line": 271
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "deploy_unified_database",
      "line": 285
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "migrate_imports",
      "line": 299
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "reorganize_core_directory",
      "line": 344
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "enhance_conductor",
      "line": 349
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "optimize_async_patterns",
      "line": 369
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "implement_monitoring",
      "line": 374
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "consolidate_scripts",
      "line": 394
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "improve_cli",
      "line": 399
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "decorator",
      "line": 211
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "register_breaker",
      "line": 251
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "get_all_metrics",
      "line": 280
    },
    {
      "file": "/root/cherry_ai-main/shared/retry_utils.py",
      "name": "decorator",
      "line": 7
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "get_model_for_current_mode",
      "line": 397
    },
    {
      "file": "/root/cherry_ai-main/core/config.py",
      "name": "get_router_config",
      "line": 123
    },
    {
      "file": "/root/cherry_ai-main/core/main.py",
      "name": "signal_handler",
      "line": 226
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "is_compatible_with",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "get_update_order",
      "line": 331
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_1_fix_dependencies",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_2_setup_database",
      "line": 159
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_3_start_services",
      "line": 173
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_4_test_api_connections",
      "line": 237
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_5_implement_enhancements",
      "line": 302
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "step_6_run_tests",
      "line": 432
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "generate_proof_of_functionality",
      "line": 579
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "run_async_test",
      "line": 122
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_nginx_config_exists",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_circuit_breaker_imported",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_rate_limits_configured",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_enhanced_provisioning_exists",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_rollback_script_exists",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_ai_monitor_exists",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_all_domains_configured",
      "line": 96
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "test_github_workflow_updated",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
      "name": "get_required",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
      "name": "log_execution",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
      "name": "get_mode_stats",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
      "name": "check_docker_compose",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "verify_file_structure",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "verify_python_environment",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "verify_mcp_servers",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "verify_configurations",
      "line": 167
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "test_basic_functionality",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "affects_version",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "get_component_type",
      "line": 190
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "get_component_type",
      "line": 297
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "get_component_type",
      "line": 351
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "create_security_groups",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "create_postgres",
      "line": 169
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "create_weaviate_clusters",
      "line": 182
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "deploy_services",
      "line": 199
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "signal_handler",
      "line": 479
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "check_and_run",
      "line": 384
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "demo_1_mode_selection",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "demo_2_parallel_execution",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "demo_3_mcp_integration",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "demo_4_database_operations",
      "line": 195
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "demo_5_workflow_coordination",
      "line": 259
    },
    {
      "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
      "name": "create_secure_env",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "get_available_tools",
      "line": 408
    },
    {
      "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
      "name": "add_type_annotations",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
      "name": "get_python_files",
      "line": 89
    },
    {
      "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
      "name": "replace_f_string",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/scripts/metrics_pipeline.py",
      "name": "add_processor",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/scripts/metrics_pipeline.py",
      "name": "add_sink",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_pulumi_stack",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_kubernetes_connection",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_namespace_resources",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_pod_status",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_services",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
      "name": "test_pulumi_outputs",
      "line": 132
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
      "name": "signal_handler",
      "line": 251
    },
    {
      "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
      "name": "transient_file",
      "line": 406
    },
    {
      "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
      "name": "decorator",
      "line": 431
    },
    {
      "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
      "name": "safety_score",
      "line": 302
    },
    {
      "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
      "name": "test_mcp_server_health",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
      "name": "test_mcp_task_creation",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
      "name": "test_conductor_service",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
      "name": "test_monitoring_stack",
      "line": 137
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_runtime_errors",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_mcp_servers",
      "line": 236
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_dependencies",
      "line": 312
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "consolidate_duplicates",
      "line": 379
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_configurations",
      "line": 498
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_version_conflicts",
      "line": 630
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_api_contracts",
      "line": 701
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "fix_error_handling",
      "line": 754
    },
    {
      "file": "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
      "name": "timeout_handler",
      "line": 233
    },
    {
      "file": "/root/cherry_ai-main/scripts/simple_mcp_server.py",
      "name": "do_GET",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/scripts/simple_mcp_server.py",
      "name": "do_POST",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/tests/test_example.py",
      "name": "test_simple_assertion",
      "line": 4
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_enhanced_vector_memory_system_import",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_data_source_integrations_import",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_enhanced_natural_language_interface_import",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_mvp_cherry_ai_ai_import",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_conversation_mode_enum",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "test_data_source_config_creation",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "test_settings_defaults",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "test_environment_detection",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "test_event_history",
      "line": 147
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "test_statistics",
      "line": 161
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "test_circuit_breaker_state",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "test_custom_mapping",
      "line": 240
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "test_circuit_breaker_initial_state",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "test_circuit_breaker_opens_after_threshold",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "test_circuit_breaker_resets_on_success",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "test_circuit_breaker_recovery_timeout",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "test_task_creation",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/__init__.py",
      "name": "setup_factory_integration",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/.factory/context.py",
      "name": "get_active_context",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/.factory/context.py",
      "name": "import_context",
      "line": 241
    },
    {
      "file": "/root/cherry_ai-main/.factory/context.py",
      "name": "cleanup_old_contexts",
      "line": 259
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "add_entry",
      "line": 290
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "remove_entry",
      "line": 299
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "optimize_for_tool",
      "line": 311
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
      "name": "close_file",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
      "name": "on_selection_changed",
      "line": 130
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/health_check.py",
      "name": "register_health_endpoints",
      "line": 8
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "name": "get_memory_count",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "cached",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "rate_limited",
      "line": 96
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "timed",
      "line": 122
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "optimize_app",
      "line": 262
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "decorator",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "decorator",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "decorator",
      "line": 125
    },
    {
      "file": "/root/cherry_ai-main/services/weaviate_service.py",
      "name": "create_schema",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "on_mode_enter",
      "line": 129
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "on_mode_exit",
      "line": 140
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "on_request_process",
      "line": 146
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "is_cherry_ai_available",
      "line": 205
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "get_cherry_ai_status",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
      "name": "do_query",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
      "name": "do_delete",
      "line": 123
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/performance.py",
      "name": "benchmark",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/performance.py",
      "name": "record_metric",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/performance.py",
      "name": "get_average",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/performance.py",
      "name": "clear_metrics",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
      "name": "handle_errors",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "list_domains",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "get_agent_with_memory",
      "line": 85
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "update_agent_and_log",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "delete_agent_complete",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "create_workflow_with_context",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "get_workflow_with_documents",
      "line": 230
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "update_session_activity",
      "line": 306
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "get_agent_activity_report",
      "line": 344
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "clear_cache",
      "line": 373
    },
    {
      "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
      "name": "batch_creation_sync",
      "line": 481
    },
    {
      "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
      "name": "save_memory_snapshot",
      "line": 218
    },
    {
      "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
      "name": "get_memory_snapshots",
      "line": 243
    },
    {
      "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
      "name": "cleanup_expired_sessions",
      "line": 364
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "supported_formats",
      "line": 195
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "supported_formats",
      "line": 446
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "register_processor",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "set_enrichment_fn",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "set_validation_fn",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "set_error_handler",
      "line": 89
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "set_progress_cb",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "set_config",
      "line": 466
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "reset_config",
      "line": 472
    },
    {
      "file": "/root/cherry_ai-main/core/shared/error_handler.py",
      "name": "with_error_handling",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/shared/main_utils.py",
      "name": "run_main",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/shared/utils.py",
      "name": "get_env_var",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/shared/utils.py",
      "name": "format_error",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "unregister_from_cleanup",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "transient_file",
      "line": 129
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "managed_temp_directory",
      "line": 202
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "decorator",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "cleanup_on_exit_handler",
      "line": 187
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "validate_max_tokens",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "format_validation_errors",
      "line": 130
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "get_summary",
      "line": 198
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "validate_item_cached",
      "line": 317
    },
    {
      "file": "/root/cherry_ai-main/core/api/router_registry.py",
      "name": "register_endpoint",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/security/postgresql_secrets.py",
      "name": "set_secret",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/core/security/postgresql_secrets.py",
      "name": "delete_secret",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/core/security/postgresql_secrets.py",
      "name": "list_secrets",
      "line": 69
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_trait_creation",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_numeric_value_validation",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_string_and_bool_values",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_weight_validation",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_response_style",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_level_validations",
      "line": 101
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_knowledge_domain",
      "line": 134
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_list_validation",
      "line": 149
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_behavior_rule",
      "line": 174
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_priority_validation",
      "line": 188
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_memory_config",
      "line": 211
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_token_limits",
      "line": 224
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_voice_config",
      "line": 241
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_rate_and_pitch_validation",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_template",
      "line": 274
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_timestamp_defaults",
      "line": 297
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_metrics",
      "line": 311
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_token_calculation",
      "line": 326
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_satisfaction_score_validation",
      "line": 334
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_valid_persona_configuration",
      "line": 353
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_slug_validation",
      "line": 384
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_model_preferences_validation",
      "line": 418
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_relationship_validation",
      "line": 455
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_serialization",
      "line": 479
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_persona_status_enum",
      "line": 509
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_trait_category_enum",
      "line": 516
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_response_style_type_enum",
      "line": 524
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_interaction_mode_enum",
      "line": 533
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_full_persona_with_all_features",
      "line": 544
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "test_minimal_persona_configuration",
      "line": 674
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_init_with_invalid_directory",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_init_with_valid_directory",
      "line": 85
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_persona_from_file",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_persona_from_nonexistent_file",
      "line": 108
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_persona_with_invalid_yaml",
      "line": 115
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_persona_with_empty_file",
      "line": 126
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_persona_with_invalid_data",
      "line": 136
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_all_personas",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_all_personas_empty_directory",
      "line": 166
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_all_personas_with_errors",
      "line": 173
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_get_persona",
      "line": 191
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_get_persona_not_found",
      "line": 197
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_list_personas",
      "line": 202
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_list_personas_with_status_filter",
      "line": 208
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_list_personas_with_tag_filter",
      "line": 227
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_reload_persona",
      "line": 250
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_check_for_updates",
      "line": 268
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_validate_all",
      "line": 293
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_export_persona",
      "line": 317
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_export_persona_not_found",
      "line": 331
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "test_load_detailed_personas",
      "line": 338
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "reload_config",
      "line": 361
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "save_config_to_file",
      "line": 390
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "get_api_config",
      "line": 443
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "get_monitoring_config",
      "line": 447
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "get_memory_config",
      "line": 451
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "get_coordination_config",
      "line": 455
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "validate_all_configs",
      "line": 309
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "get_config_summary",
      "line": 321
    },
    {
      "file": "/root/cherry_ai-main/core/config/settings_vultr.py",
      "name": "get_credentials_path",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/core/config/__init__.py",
      "name": "get_router_config",
      "line": 129
    },
    {
      "file": "/root/cherry_ai-main/core/auth/simple_auth.py",
      "name": "verify_api_key",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/auth/simple_auth.py",
      "name": "require_auth",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "test_memory_item_creation",
      "line": 346
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "test_memory_item_expiration",
      "line": 366
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "test_operation_creation",
      "line": 404
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "test_result_creation",
      "line": 423
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "deploy_cherry_ai_stack",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "set_fallback",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "register_pool",
      "line": 163
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "reload_settings",
      "line": 198
    },
    {
      "file": "/root/cherry_ai-main/core/api/middleware/error_handler.py",
      "name": "handle_api_error",
      "line": 105
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "log_and_handle_errors",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "async_log_and_handle_errors",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
      "name": "get_app_config",
      "line": 245
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
      "name": "get_module_config",
      "line": 255
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
      "name": "convert_exceptions",
      "line": 391
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
      "name": "decorator",
      "line": 165
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
      "name": "decorator",
      "line": 268
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
      "name": "decorator",
      "line": 408
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
      "name": "get_memories_by_type",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
      "name": "create_specialized_agent",
      "line": 387
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
      "name": "create_observable_agent",
      "line": 300
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "get_styling_strategy",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "apply_style",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
      "name": "set_metrics_client",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
      "name": "force_reset",
      "line": 559
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
      "name": "get_incident_reporter",
      "line": 221
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
      "name": "report_circuit_trip",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
      "name": "report_fallback_activation",
      "line": 132
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
      "name": "report_recovery",
      "line": 171
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
      "name": "get_fallback_handler",
      "line": 348
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
      "name": "cancel_retry_tasks",
      "line": 136
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
      "name": "get_default_persona_id",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
      "name": "get_preferred_agent_type",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
      "name": "get_all_enhanced_personas",
      "line": 269
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/dependency.py",
      "name": "get_persona_by_id",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "validate_protocol_message",
      "line": 177
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/example_workflows.py",
      "name": "has_query_result",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/example_workflows.py",
      "name": "has_error",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/example_workflows.py",
      "name": "is_approved",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "get_token_limit",
      "line": 344
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/config.py",
      "name": "get_persona_configs",
      "line": 137
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/settings.py",
      "name": "get_persona_configs",
      "line": 136
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/loader.py",
      "name": "decorator",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
      "name": "get_tools_by_cost",
      "line": 273
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
      "name": "initialize_memory_service",
      "line": 102
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "unregister",
      "line": 249
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "has_service",
      "line": 278
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "get_service_count",
      "line": 514
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "get_service_names",
      "line": 523
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/registry.py",
      "name": "unregister",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/registry.py",
      "name": "get_service_count",
      "line": 136
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/registry.py",
      "name": "get_service_names",
      "line": 145
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "unregister",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "has_service",
      "line": 239
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "get_service_count",
      "line": 516
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "get_service_names",
      "line": 525
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py",
      "name": "get_service_account_info",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py",
      "name": "get_service_account_path",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py",
      "name": "get_environment",
      "line": 116
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
      "name": "get_redis_cache",
      "line": 149
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
      "name": "build_prompt_for_persona",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_loader.py",
      "name": "get_persona_configs",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "get_tool_registry",
      "line": 363
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "get_tools_by_category",
      "line": 218
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "get_all_tools",
      "line": 233
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "get_tool_names",
      "line": 242
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "add_tool",
      "line": 269
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "remove_tool",
      "line": 285
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "has_tool",
      "line": 302
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
      "name": "check_package_availability",
      "line": 170
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
      "name": "setup_header_validation",
      "line": 338
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
      "name": "get_provider_for_mode",
      "line": 839
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "set_default_persona",
      "line": 144
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "set_processor",
      "line": 155
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "process_with_persona",
      "line": 159
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "format_response_with_persona",
      "line": 176
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "load_from_directory",
      "line": 193
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "estimate_cost",
      "line": 315
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
      "name": "clear_cache",
      "line": 410
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
      "name": "get_supported_formats",
      "line": 147
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
      "name": "get_content_types",
      "line": 151
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "add_error",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "register_parser",
      "line": 235
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "get_supported_sources",
      "line": 243
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "is_initialized",
      "line": 247
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/__init__.py",
      "name": "get_parser",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/__init__.py",
      "name": "get_storage_adapter",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "get_handlers",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "clear_history",
      "line": 285
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "reset_stats",
      "line": 289
    },
    {
      "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
      "name": "test_set_get",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
      "name": "test_zip_dedup",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/tests/mocks/memory_fixtures.py",
      "name": "get_memory_manager_stub",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/tests/services/test_memory_service.py",
      "name": "test_hash_record_model",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/tests/core/conductor/test_agent_registry.py",
      "name": "test_llm_agent_is_default",
      "line": 5
    },
    {
      "file": "/root/cherry_ai-main/tests/core/conductor/test_startup.py",
      "name": "test_main_import",
      "line": 5
    },
    {
      "file": "/root/cherry_ai-main/tests/core/conductor/test_startup.py",
      "name": "test_memory_factory_default",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "test_cache_entry_creation",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "test_hit_rate_calculation",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "test_hit_rate_zero_requests",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "test_get_metrics",
      "line": 138
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
      "name": "enrich_contact",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
      "name": "validate_with_claude",
      "line": 155
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py",
      "name": "enrich_property_data",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "log_info",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "log_warning",
      "line": 137
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "log_debug",
      "line": 145
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "log_critical",
      "line": 149
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "log_exception",
      "line": 153
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "validate_dev_note_metadata",
      "line": 271
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "validate_user_data_metadata",
      "line": 286
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "add_standard_metadata_fields",
      "line": 301
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "create_virtual_key",
      "line": 125
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "list_virtual_keys",
      "line": 177
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "update_virtual_key",
      "line": 240
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "delete_virtual_key",
      "line": 295
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "rotate_virtual_key",
      "line": 315
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "create_gateway_config",
      "line": 346
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "list_gateway_configs",
      "line": 392
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "update_gateway_config",
      "line": 449
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "delete_gateway_config",
      "line": 502
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "get_usage_stats",
      "line": 524
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
      "name": "is_initialized",
      "line": 271
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
      "name": "update_health_status",
      "line": 300
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
      "name": "record_shadow_test_result",
      "line": 366
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
      "name": "get_agent_stats",
      "line": 426
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/registry.py",
      "name": "get_available_wrapper_types",
      "line": 141
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/registry.py",
      "name": "load_wrapper_class_from_path",
      "line": 157
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
      "name": "get_credentials_manager",
      "line": 374
    },
    {
      "file": "/root/cherry_ai-main/packages/llm/src/portkey_integration.py",
      "name": "configure_model_from_settings",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/packages/llm/src/config.py",
      "name": "get_model_name_for_provider",
      "line": 88
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "name": "load_memory_variables",
      "line": 154
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "name": "save_context",
      "line": 170
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "remove_rule",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "enable_rule",
      "line": 277
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "disable_rule",
      "line": 293
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "create_rule_set",
      "line": 309
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "add_to_rule_set",
      "line": 329
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "remove_from_rule_set",
      "line": 351
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "set_default_rule_set",
      "line": 372
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rule",
      "line": 443
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rules_by_category",
      "line": 454
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rules_by_severity",
      "line": 465
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rules_by_tag",
      "line": 476
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rule_set",
      "line": 487
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "get_rule_sets",
      "line": 498
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "save_rules_to_file",
      "line": 506
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
      "name": "get_recommendations",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
      "name": "decorator",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
      "name": "clear_cache",
      "line": 123
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
      "name": "get_multiple_secrets",
      "line": 143
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "create_memory_key",
      "line": 443
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "parse_memory_key",
      "line": 466
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "create_memory_key_pattern",
      "line": 477
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "with_user",
      "line": 206
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "with_session",
      "line": 224
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "with_agent",
      "line": 242
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "with_scope",
      "line": 260
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "is_parent_of",
      "line": 318
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "get_correlation_id",
      "line": 208
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "set_correlation_id",
      "line": 220
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "with_correlation_id",
      "line": 228
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "add_context",
      "line": 332
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "remove_context",
      "line": 343
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "clear_context",
      "line": 354
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "name": "add_entry",
      "line": 108
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "name": "remove_entry",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "name": "reset_usage",
      "line": 157
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "name": "get_usage_stats",
      "line": 173
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "configure_idempotency",
      "line": 463
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "default_idempotent",
      "line": 485
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "decorator",
      "line": 433
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "name": "with_token_counting",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "name": "decorator",
      "line": 268
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "name": "estimate_memory_entry",
      "line": 324
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "name": "clear_cache",
      "line": 335
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
      "name": "optimize_batch_size",
      "line": 280
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
      "name": "monitor_resources",
      "line": 106
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
      "name": "decorator",
      "line": 157
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
      "name": "decorator",
      "line": 193
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "name": "add_entry",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "name": "remove_entry",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "get_all_modes",
      "line": 204
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "get_mode_names",
      "line": 212
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "update_mode_context",
      "line": 241
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "clear_mode_context",
      "line": 261
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "save_to_file",
      "line": 279
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "test_metrics_calculation",
      "line": 134
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "get_constraints_text",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "has_required_context",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "missing_context",
      "line": 107
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "track_request",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "decorator",
      "line": 136
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
      "name": "draw_dashboard",
      "line": 184
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard.py",
      "name": "create_health_table",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
      "name": "enable_auto_mode",
      "line": 335
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
      "name": "disable_auto_mode",
      "line": 340
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "get_rules_by_intent",
      "line": 187
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "get_rules_by_type",
      "line": 199
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
      "name": "cleanup_task",
      "line": 81
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
      "name": "get_archive_info",
      "line": 333
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
      "name": "decorator",
      "line": 664
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "name": "on_modified",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "name": "on_created",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "name": "signal_handler",
      "line": 354
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "prune_context",
      "line": 220
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "get_transition_patterns",
      "line": 471
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "test_log_action",
      "line": 334
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "test_store_context",
      "line": 377
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "test_circuit_breaker_functionality",
      "line": 154
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "test_retry_strategy",
      "line": 176
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "test_preserve_context",
      "line": 307
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_example.py",
      "name": "test_example",
      "line": 2
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_list_personas_success",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_list_personas_with_filters",
      "line": 109
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_list_personas_unauthorized",
      "line": 119
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_get_persona_success",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_get_persona_not_found",
      "line": 138
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_update_persona_success",
      "line": 149
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_update_persona_validation_error",
      "line": 161
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_reload_persona_success",
      "line": 169
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_validate_all_personas_success",
      "line": 180
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_validate_all_personas_with_issues",
      "line": 190
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_export_persona_success",
      "line": 206
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_check_for_updates_success",
      "line": 224
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_health_check_success",
      "line": 238
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "test_manager_initialization_error",
      "line": 248
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
      "name": "verify_api_key",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "verify_api_key",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
      "name": "verify_password",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
      "name": "get_password_hash",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/agent/app/core/config.py",
      "name": "is_production",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/agent/app/core/config.py",
      "name": "is_development",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
      "name": "approve_task",
      "line": 254
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "save_results",
      "line": 457
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
      "name": "batch_predict",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
      "name": "list_models",
      "line": 133
    }
  ],
  "unused_classes": [
    {
      "file": "/root/cherry_ai-main/quick_check.py",
      "name": "Colors",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "AgentType",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "ScrapingStrategy",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "TaskPriority",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "ScrapingTask",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "ScrapingResult",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "WebScrapingAgent",
      "line": 94
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "SearchSpecialistAgent",
      "line": 160
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "ScraperSpecialistAgent",
      "line": 308
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "ContentAnalyzerAgent",
      "line": 567
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "WebScrapingconductor",
      "line": 721
    },
    {
      "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
      "name": "WebScrapingMCPServer",
      "line": 912
    },
    {
      "file": "/root/cherry_ai-main/scan_github_workflows.py",
      "name": "WorkflowIssue",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "ErrorSeverity",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "BaseError",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "ConfigError",
      "line": 576
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "DataProcessingError",
      "line": 579
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "NetworkError",
      "line": 582
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "DatabaseError",
      "line": 585
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "ValidationError",
      "line": 588
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "AuthenticationError",
      "line": 591
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "AuthorizationError",
      "line": 594
    },
    {
      "file": "/root/cherry_ai-main/error_handling_consolidation.py",
      "name": "ResourceNotFoundError",
      "line": 597
    },
    {
      "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
      "name": "AdminUIVerifier",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
      "name": "cherry_aiAIMVP",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/webscraping_app.py",
      "name": "SearchRequest",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/webscraping_app.py",
      "name": "ScrapeRequest",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/webscraping_app.py",
      "name": "AnalyzeRequest",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/webscraping_app.py",
      "name": "BulkScrapeRequest",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "Issue",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "CodeVisitor",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/code_analysis.py",
      "name": "ComplexityVisitor",
      "line": 222
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "ConversationMode",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "ConversationMessage",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "ConversationSession",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "IntentClassifier",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "ContextualResponseGenerator",
      "line": 101
    },
    {
      "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
      "name": "EnhancedNaturalLanguageInterface",
      "line": 283
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "ThreadPoolManager",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "StorageError",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "ValidationError",
      "line": 102
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "ConnectionError",
      "line": 105
    },
    {
      "file": "/root/cherry_ai-main/memory_management_improvements.py",
      "name": "ImprovedFirestoreMemoryAdapter",
      "line": 442
    },
    {
      "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
      "name": "DragonflyConnectionTest",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/service_management_consolidation.py",
      "name": "ServiceStatus",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/service_management_consolidation.py",
      "name": "ServiceLifecycleEvent",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/service_management_consolidation.py",
      "name": "ServiceInstance",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/service_management_consolidation.py",
      "name": "ServiceHealthCheck",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/service_management_consolidation.py",
      "name": "UnifiedServiceManager",
      "line": 85
    },
    {
      "file": "/root/cherry_ai-main/scan_for_hardcoded_values.py",
      "name": "HardcodedPattern",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "DataSourceConfig",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "BaseDataSourceIntegration",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "GongIntegration",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "SalesforceIntegration",
      "line": 173
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "HubSpotIntegration",
      "line": 336
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "SlackIntegration",
      "line": 412
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "LookerIntegration",
      "line": 526
    },
    {
      "file": "/root/cherry_ai-main/data_source_integrations.py",
      "name": "DataAggregationconductor",
      "line": 627
    },
    {
      "file": "/root/cherry_ai-main/utils.py",
      "name": "APIKeyManager",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/migration_conductor.py",
      "name": "Migrationconductor",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/simple_mcp.py",
      "name": "SimpleMemoryStore",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/simple_mcp.py",
      "name": "SimpleMCPServer",
      "line": 112
    },
    {
      "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
      "name": "MemoryManager",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
      "name": "PortkeyClient",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
      "name": "ToolRegistry",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
      "name": "PhidataAgentWrapper",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/examples/simplified_agent_example.py",
      "name": "SimpleAgent",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/examples/simplified_agent_example.py",
      "name": "CodeAgent",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
      "name": "BaseMemoryManager",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/shared/circuit_breaker.py",
      "name": "CircuitBreaker",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "CircuitState",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "CircuitBreakerError",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "EnhancedCircuitBreaker",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
      "name": "CircuitBreakerManager",
      "line": 237
    },
    {
      "file": "/root/cherry_ai-main/shared/database.py",
      "name": "UnifiedDatabase",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/env_config.py",
      "name": "cherry_aiSettings",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/core/env_config.py",
      "name": "Config",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/core/health_monitor.py",
      "name": "HealthStatus",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/health_monitor.py",
      "name": "ComponentHealth",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/health_monitor.py",
      "name": "HealthMonitor",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "FileAccessError",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "WorkflowError",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "Mode",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "WorkflowStep",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "Workflow",
      "line": 105
    },
    {
      "file": "/root/cherry_ai-main/core/mode_manager.py",
      "name": "ModeManager",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/core/config.py",
      "name": "Settings",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/core/config.py",
      "name": "Config",
      "line": 105
    },
    {
      "file": "/root/cherry_ai-main/core/main.py",
      "name": "cherry_aiCore",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/connection_manager.py",
      "name": "CircuitBreakerState",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/connection_manager.py",
      "name": "ConnectionManager",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/logging_config.py",
      "name": "JSONFormatter",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "UseCase",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "ModelTier",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "RouterConfig",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "ModelMapping",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "LLMRequest",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "LLMResponse",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "ProviderStatus",
      "line": 103
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "RouterHealth",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "Config",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/core/llm_types.py",
      "name": "Config",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "ComponentType",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "Version",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "Component",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "VersionScanner",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "DependencyGraph",
      "line": 275
    },
    {
      "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
      "name": "VersionManager",
      "line": 340
    },
    {
      "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
      "name": "RooIntegrationSetup",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "TestAPIGateway",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "TestProvisioning",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "TestMonitoring",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
      "name": "TestIntegration",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_cherry_ai_final.py",
      "name": "cherry_aiFinalTest",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
      "name": "cherry_aiDeployment",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
      "name": "SecretsManager",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_code_assistant.py",
      "name": "AICodeAssistant",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
      "name": "StandaloneRooIntegration",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
      "name": "MCPIntegrationChecker",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_api_keys.py",
      "name": "SimpleSecretsManager",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/scripts/architecture_analyzer.py",
      "name": "ArchitectureAnalyzer",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
      "name": "DomainInfrastructureValidator",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
      "name": "cherry_aiServiceManager",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
      "name": "ComprehensiveProductionDeploy",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
      "name": "cherry_aiVerification",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/scripts/health_monitor.py",
      "name": "HealthMonitor",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py",
      "name": "cherry_aiSetup",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
      "name": "cherry_aiCLI",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
      "name": "Phase",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
      "name": "TaskStatus",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
      "name": "Task",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
      "name": "MigrationState",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
      "name": "Refactoringconductor",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
      "name": "InfrastructureOptimizer",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/scripts/final_cleanup.py",
      "name": "FinalCleanup",
      "line": 8
    },
    {
      "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
      "name": "NextPhaseconductor",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
      "name": "TechnicalRoadmapGenerator",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/scripts/deep_cleanup.py",
      "name": "DeepCleanup",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
      "name": "UIIntegrationSpec",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "HealthStatus",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "AlertLevel",
      "line": 78
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "HealthCheck",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "Alert",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "VersionMonitor",
      "line": 106
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_monitor.py",
      "name": "HealthCheckAPI",
      "line": 602
    },
    {
      "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
      "name": "ModelVersion",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
      "name": "MLModelRegistry",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/scripts/performance_analyzer.py",
      "name": "PerformanceAnalyzer",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/scripts/system_validation.py",
      "name": "SystemValidator",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
      "name": "EnhancedSystemDeployer",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_design_automation.py",
      "name": "DesignAutomationDeployment",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
      "name": "SecretAnalyzer",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "ComponentType",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "Severity",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "Version",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "Vulnerability",
      "line": 111
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "Dependency",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "DependencyScanner",
      "line": 174
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "PythonScanner",
      "line": 187
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "JavaScriptScanner",
      "line": 294
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "DockerScanner",
      "line": 348
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_manager.py",
      "name": "VersionRegistry",
      "line": 413
    },
    {
      "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
      "name": "EigenCodeInstaller",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "ProvisioningState",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
      "name": "EnhancedProvisioner",
      "line": 69
    },
    {
      "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
      "name": "UIUXDesignSystemMaintainer",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "TaskStatus",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "TaskResult",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "Task",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
      "name": "Symphonyconductor",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
      "name": "RooconductorInterface",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_infrastructure_monitor.py",
      "name": "AIInfrastructureMonitor",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_ai_system.py",
      "name": "AISystemDeployer",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/scripts/performance_test.py",
      "name": "TestResult",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/scripts/performance_test.py",
      "name": "PerformanceTester",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
      "name": "InfrastructureImprovementconductor",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
      "name": "LiveIntegrationDemo",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
      "name": "InfrastructureRollback",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
      "name": "AICodeReviewer",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
      "name": "UnifiedPostgreSQLMigration",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
      "name": "cherry_aiSetupWizard",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
      "name": "cherry_aiDeploymentSummary",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
      "name": "cherry_aiAutoStarter",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/scripts/initialize_unified_postgresql.py",
      "name": "UnifiedPostgreSQLInitializer",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
      "name": "HealthMetric",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
      "name": "AgentHealthMonitor",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/scripts/quick_start_design_system.py",
      "name": "DesignSystemQuickStart",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
      "name": "CodebaseAuditor",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
      "name": "EnhancedSystemDeploymentTester",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "TaskType",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "AITool",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "TaskRequest",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "TaskResult",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
      "name": "AISystemconductor",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
      "name": "PersonaTrait",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
      "name": "PersonaConfig",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
      "name": "PersonaConfigManager",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
      "name": "AirbyteConfigurer",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
      "name": "SystemValidator",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
      "name": "cherry_aiIntegrationTest",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
      "name": "DomainSeparationAnalyzer",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
      "name": "EigenCodeMonitor",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/integration_plan.py",
      "name": "IntegrationPlan",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/parallel_mode_executor.py",
      "name": "ParallelModeExecutor",
      "line": 8
    },
    {
      "file": "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py",
      "name": "InfrastructurePurger",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_integration_complete.py",
      "name": "IntegrationTester",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/scripts/mobile_app_integration.py",
      "name": "MobileIntegration",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
      "name": "DomainInfrastructureconductor",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/scripts/auto_mode_selector.py",
      "name": "AutoModeSelector",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
      "name": "AgentState",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
      "name": "Agent",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
      "name": "AgentLifecycleManager",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
      "name": "MLInfrastructurePrep",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_roo_integration.py",
      "name": "IntegrationTester",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/scripts/metrics_pipeline.py",
      "name": "Metric",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/metrics_pipeline.py",
      "name": "MetricsPipeline",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/scripts/setup_advanced_caching.py",
      "name": "AdvancedCachingSetup",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
      "name": "EnhancedCLIWorkflowRunner",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
      "name": "conductorAutomation",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_updater.py",
      "name": "UpdateStrategy",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_updater.py",
      "name": "UpdateStatus",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_updater.py",
      "name": "UpdateCandidate",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_updater.py",
      "name": "UpdateResult",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/scripts/version_updater.py",
      "name": "DependencyUpdater",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
      "name": "AISystemValidator",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/scripts/system_preparedness.py",
      "name": "SystemPreparednessChecker",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
      "name": "LocalDeploymentVerifier",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
      "name": "IntelligentCleanup",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
      "name": "SmokeTestRunner",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
      "name": "cherry_aiSystemTest",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
      "name": "cherry_aitedCodebaseFix",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
      "name": "cherry_aiCompleteSetup",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
      "name": "ImplementationStatus",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
      "name": "InfrastructureRobustnessAnalyzer",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
      "name": "MCPConfig",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
      "name": "MCPIntegration",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
      "name": "MCPAgentInterface",
      "line": 208
    },
    {
      "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
      "name": "MonitoringEnhancer",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
      "name": "PythonCodebaseAnalyzer",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_nl_and_agent.py",
      "name": "SimpleAgent",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
      "name": "RapidProductionDeploy",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py",
      "name": "RooEnhancedLauncher",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
      "name": "AdvancedSystemArchitect",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/scripts/security_audit.py",
      "name": "SecurityAuditor",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_new_setup.py",
      "name": "SetupTester",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "RetryStrategy",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "RetryConfig",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "CircuitBreakerConfig",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "CircuitBreakerState",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "EnhancedCircuitBreaker",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "EnhancedRetryHandler",
      "line": 156
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "GracefulDegradationHandler",
      "line": 275
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "EnhancedLoggingHandler",
      "line": 376
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "ErrorRecoveryconductor",
      "line": 510
    },
    {
      "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
      "name": "EnhancedWorkflowconductor",
      "line": 623
    },
    {
      "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py",
      "name": "cherry_aiDeployer",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_design_system.py",
      "name": "SimpleDesignSystemTest",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/scripts/simple_mcp_server.py",
      "name": "MCPHandler",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
      "name": "conductorMCPVerifier",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
      "name": "SystemOptimizer",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
      "name": "OptimizedWorkflowExecutor",
      "line": 639
    },
    {
      "file": "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py",
      "name": "cherry_aiConnectionTester",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/tests/test_specialized_agents.py",
      "name": "TestPersonalAgent",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/tests/test_specialized_agents.py",
      "name": "TestPayReadyAgent",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/tests/test_specialized_agents.py",
      "name": "TestParagonMedicalResearchAgent",
      "line": 213
    },
    {
      "file": "/root/cherry_ai-main/tests/test_specialized_agents.py",
      "name": "TestAgentRegistry",
      "line": 328
    },
    {
      "file": "/root/cherry_ai-main/tests/test_example.py",
      "name": "TestExample",
      "line": 3
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "name": "TestConnectionManager",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "name": "TestUnifiedPostgreSQL",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "name": "TestUnifiedDatabase",
      "line": 308
    },
    {
      "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
      "name": "TestBackgroundTasks",
      "line": 409
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "name": "TestQueryClassifier",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
      "name": "TestIntelligentLLMRouter",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestSlackParser",
      "line": 101
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestZipHandler",
      "line": 200
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestPostgresAdapter",
      "line": 254
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestWeaviateAdapter",
      "line": 311
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestDataIngestionPipeline",
      "line": 352
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestPerformance",
      "line": 400
    },
    {
      "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
      "name": "TestErrorHandling",
      "line": 439
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "TestMVPImports",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
      "name": "TestBasicFunctionality",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "TestConfiguration",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "TestServiceRegistry",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
      "name": "TestEventBus",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "TestCacheManager",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "TestConnectionManager",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "TestHealthMonitor",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "TestUnifiedLLMRouter",
      "line": 217
    },
    {
      "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
      "name": "TestIntegration",
      "line": 315
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "TestCircuitBreaker",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "TestWorkflowTask",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "TestAgentconductor",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
      "name": "TestWorkflowCreation",
      "line": 346
    },
    {
      "file": "/root/cherry_ai-main/tests/test_api_integration.py",
      "name": "TestLLMcoordinationAPI",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/tests/test_api_integration.py",
      "name": "TestErrorHandling",
      "line": 317
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/context_manager.py",
      "name": "ContextMetadata",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/context_manager.py",
      "name": "ContextVersion",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/context_manager.py",
      "name": "UnifiedContextManager",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "CacheEntry",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "CacheMetrics",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "L1Cache",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "L2Cache",
      "line": 168
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "L3Cache",
      "line": 299
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
      "name": "CacheManager",
      "line": 458
    },
    {
      "file": "/root/cherry_ai-main/infra/mcp_server.py",
      "name": "DatabaseCommand",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/infra/mcp_server.py",
      "name": "MCPRedisServer",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/infra/core_stack.py",
      "name": "CoreStack",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/.factory/context.py",
      "name": "DroidContext",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/.factory/context.py",
      "name": "FactoryContextManager",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/deploy/superagi_config.py",
      "name": "SuperAGIDeployment",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "StatusResponse",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "MemoryRequest",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "MemoryResponse",
      "line": 65
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "MemorySyncRequest",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "ExecuteRequest",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "ExecuteResponse",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "WorkflowRequest",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "CrossToolWorkflowRequest",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "WorkflowResponse",
      "line": 105
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "SuccessResponse",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "ErrorResponse",
      "line": 115
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "name": "AsyncMCPServer",
      "line": 122
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryType",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryScope",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "ToolType",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "CompressionLevel",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "StorageTier",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryMetadata",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryEntry",
      "line": 84
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryCompressionEngine",
      "line": 162
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "TokenBudgetManager",
      "line": 266
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemoryStorage",
      "line": 361
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "InMemoryStorage",
      "line": 384
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "SyncEvent",
      "line": 441
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "SyncOperation",
      "line": 450
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
      "name": "MemorySyncEngine",
      "line": 460
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
      "name": "LightweightIDEContext",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
      "name": "FastIDEIntegration",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
      "name": "MockToolAdapter",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/run_mcp_server.py",
      "name": "MCPApplication",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
      "name": "FastToolAdapter",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
      "name": "OptimizedMemoryManager",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MCPError",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MemoryError",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MemoryNotFoundError",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MemoryWriteError",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MemoryDeleteError",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "MemorySyncError",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ToolError",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ToolNotEnabledError",
      "line": 159
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ToolExecutionError",
      "line": 165
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ToolNotImplementedError",
      "line": 182
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowError",
      "line": 189
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowNotFoundError",
      "line": 200
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowExecutionError",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowStepTypeError",
      "line": 228
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowNoStepsError",
      "line": 242
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "WorkflowNoToolsError",
      "line": 252
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ConfigError",
      "line": 263
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ConfigFileError",
      "line": 274
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ConfigValidationError",
      "line": 286
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ServerError",
      "line": 297
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ServerStartupError",
      "line": 308
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "ServerShutdownError",
      "line": 318
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "AuthError",
      "line": 329
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "AuthTokenError",
      "line": 340
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
      "name": "AuthPermissionError",
      "line": 350
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "ConnectionPool",
      "line": 140
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
      "name": "BatchProcessor",
      "line": 175
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/gateway.py",
      "name": "ServerHealth",
      "line": 94
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/gateway.py",
      "name": "GatewayStatus",
      "line": 104
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/gateway.py",
      "name": "MCPRequest",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
      "name": "PerformanceMonitor",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/tools/cherry_ai_cli.py",
      "name": "AdapterConfig",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/services/weaviate_service.py",
      "name": "WeaviateConfig",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/services/weaviate_service.py",
      "name": "VectorSearchResult",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/services/weaviate_service.py",
      "name": "WeaviateService",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "cherry_aiEnhancedMode",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "CodeModeEnhancement",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "ArchitectModeEnhancement",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
      "name": "DebugModeEnhancement",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
      "name": "InfrastructureDeployer",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/pulumi/__init__.py",
      "name": "CherryAIInfrastructure",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
      "name": "DataIngestionInfrastructure",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/pinecone_adapter.py",
      "name": "PineconeAdapter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/stubs.py",
      "name": "PatrickMemoryManager",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/memory_manager.py",
      "name": "MemoryManager",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/memory_manager.py",
      "name": "InMemoryMemoryManager",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/memory_manager.py",
      "name": "FirestoreMemoryManager",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/memory_manager.py",
      "name": "MemoryManagerFactory",
      "line": 180
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/weaviate_session_cache.py",
      "name": "WeaviateSessionCache",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
      "name": "WeaviateAdapter",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
      "name": "EnvironmentType",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
      "name": "VertexAIBridge",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/performance.py",
      "name": "PerformanceMonitor",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
      "name": "coordinationError",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
      "name": "APIError",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
      "name": "ConfigurationError",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
      "name": "TransitionError",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/shared/sessions/postgresql_sessions.py",
      "name": "PostgreSQLSessionStore",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "DomainRequest",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "DomainResponse",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "IDomainService",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "PersonalDomainInterface",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "PayReadyDomainInterface",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "ParagonRXDomainInterface",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
      "name": "DomainRegistry",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
      "name": "MCPClient",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
      "name": "ToolRegistry",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
      "name": "PostgreSQLCache",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
      "name": "CacheManager",
      "line": 384
    },
    {
      "file": "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py",
      "name": "PostgreSQLConnectionManagerEnhanced",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "name": "UnifiedDatabase",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
      "name": "WeaviateClient",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
      "name": "MockDBConfig",
      "line": 524
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "DatabaseType",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "OperationType",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "DatabaseMetrics",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "DatabaseError",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "ConnectionError",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "QueryError",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "VectorSearchResult",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "HybridSearchResult",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/shared/database/__init__.py",
      "name": "UnifiedDatabase",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_postgresql.py",
      "name": "UnifiedPostgreSQL",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/shared/database/connection_manager.py",
      "name": "PostgreSQLConnectionManager",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "DatabaseError",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "ConnectionError",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "QueryError",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "TransactionError",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "QueryResult",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "VectorSearchResult",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "DatabaseInterface",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "PostgreSQLInterface",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "WeaviateInterface",
      "line": 247
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_database.py",
      "name": "UnifiedDatabase",
      "line": 436
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py",
      "name": "UnifiedPostgreSQLEnhanced",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
      "name": "PostgreSQLClient",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "BaseAPIConnector",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "RESTConnector",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "GraphQLConnector",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "WebSocketConnector",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "GRPCConnector",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "CustomAPIConnector",
      "line": 108
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "APIProcessor",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "RESTAPIProcessor",
      "line": 198
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "GraphQLProcessor",
      "line": 325
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
      "name": "WebSocketProcessor",
      "line": 427
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "CSVProcessor",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "JSONLProcessor",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "JSONProcessor",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "XMLProcessor",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "PDFProcessor",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "ExcelProcessor",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "ParquetProcessor",
      "line": 104
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "name": "AvroProcessor",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/base_processor.py",
      "name": "StorageAdapter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/base_processor.py",
      "name": "BaseProcessor",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/zip_processor.py",
      "name": "ZipProcessor",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "name": "IngestionPipeline",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/shared/database/extensions/pool_extensions.py",
      "name": "PoolExtensionsMixin",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/shared/database/extensions/cache_extensions.py",
      "name": "CacheExtensionsMixin",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/shared/database/extensions/memory_extensions.py",
      "name": "MemoryExtensionsMixin",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/shared/database/extensions/session_extensions.py",
      "name": "SessionExtensionsMixin",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "MemoryTier",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "MemoryItem",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "MemoryOperation",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "MemoryResult",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "IMemoryStorage",
      "line": 130
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "IMemoryOptimizer",
      "line": 266
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "IMemoryMetrics",
      "line": 352
    },
    {
      "file": "/root/cherry_ai-main/core/memory/interfaces.py",
      "name": "IMemoryManager",
      "line": 473
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "Environment",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "TierConfig",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "PostgreSQLConfig",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "WeaviateConfig",
      "line": 134
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "RedisConfig",
      "line": 166
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "OptimizationConfig",
      "line": 200
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "MetricsConfig",
      "line": 237
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "name": "MemoryConfig",
      "line": 262
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryException",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryNotFoundError",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryStorageError",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryTierError",
      "line": 102
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryOptimizationError",
      "line": 132
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryConnectionError",
      "line": 156
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemorySerializationError",
      "line": 180
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryCapacityError",
      "line": 204
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryTimeoutError",
      "line": 230
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryValidationError",
      "line": 254
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryConfigurationError",
      "line": 279
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryLockError",
      "line": 304
    },
    {
      "file": "/root/cherry_ai-main/core/memory/exceptions.py",
      "name": "MemoryExceptionHandler",
      "line": 336
    },
    {
      "file": "/root/cherry_ai-main/core/shared/error_handler.py",
      "name": "cherry_aiError",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/core/shared/error_handler.py",
      "name": "ErrorHandler",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/utils/file_management.py",
      "name": "ManagedFile",
      "line": 229
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "StrictBaseModel",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "StrictPersonaConfig",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "StrictLLMRequest",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "StrictAPICredentials",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "OptimizedModel",
      "line": 162
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "ValidationContext",
      "line": 181
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "EnhancedPersonaConfig",
      "line": 208
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "LLMRoutingConfig",
      "line": 247
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "APIResponseModel",
      "line": 276
    },
    {
      "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
      "name": "CachedValidationContext",
      "line": 309
    },
    {
      "file": "/root/cherry_ai-main/core/api/router_registry.py",
      "name": "RouterRegistry",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/core/security/credential_manager.py",
      "name": "CredentialSource",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/security/credential_manager.py",
      "name": "ServiceAccountInfo",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/security/credential_manager.py",
      "name": "CredentialManager",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/core/security/postgresql_secrets.py",
      "name": "PostgreSQLSecretManager",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "PersonaStatus",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "TraitCategory",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "ResponseStyleType",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "InteractionMode",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "PersonaTrait",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "ResponseStyle",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "KnowledgeDomain",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "BehaviorRule",
      "line": 161
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "MemoryConfiguration",
      "line": 191
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "VoiceConfiguration",
      "line": 228
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "PersonaTemplate",
      "line": 261
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "PersonaMetrics",
      "line": 297
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "PersonaConfiguration",
      "line": 341
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 177
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 216
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 247
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 284
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 328
    },
    {
      "file": "/root/cherry_ai-main/core/personas/models.py",
      "name": "Config",
      "line": 433
    },
    {
      "file": "/root/cherry_ai-main/core/personas/manager.py",
      "name": "PersonaConfigError",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/personas/manager.py",
      "name": "PersonaNotFoundError",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/personas/manager.py",
      "name": "PersonaConfigManager",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestPersonaTrait",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestResponseStyle",
      "line": 84
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestKnowledgeDomain",
      "line": 131
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestBehaviorRule",
      "line": 171
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestMemoryConfiguration",
      "line": 208
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestVoiceConfiguration",
      "line": 238
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestPersonaTemplate",
      "line": 271
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestPersonaMetrics",
      "line": 308
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestPersonaConfiguration",
      "line": 350
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestEnumValues",
      "line": 506
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_models.py",
      "name": "TestComplexScenarios",
      "line": 541
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "name": "TestPersonaConfigManager",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMProvider",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMModel",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMUseCase",
      "line": 103
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMModelAssignment",
      "line": 134
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMFallbackModel",
      "line": 174
    },
    {
      "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
      "name": "LLMMetric",
      "line": 192
    },
    {
      "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
      "name": "APICallMetrics",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
      "name": "AggregatedMetrics",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
      "name": "ClaudeMonitor",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
      "name": "CallContext",
      "line": 160
    },
    {
      "file": "/root/cherry_ai-main/core/monitoring/monitored_litellm_client.py",
      "name": "MonitoredLiteLLMClient",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "UseCase",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ModelTier",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "Provider",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ModelCapabilities",
      "line": 69
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ModelSpec",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "LLMRequest",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "LLMResponse",
      "line": 107
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "LLMError",
      "line": 119
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "RateLimitError",
      "line": 128
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ModelUnavailableError",
      "line": 134
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ConfigurationError",
      "line": 139
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "ProviderInterface",
      "line": 144
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "OpenAIProvider",
      "line": 172
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "AnthropicProvider",
      "line": 353
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "IntelligentModelSelector",
      "line": 553
    },
    {
      "file": "/root/cherry_ai-main/core/llm/unified_router.py",
      "name": "UnifiedLLMRouter",
      "line": 647
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "Environment",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "LogLevel",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "BaseConfig",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "DatabaseConfig",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "LLMConfig",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "APIConfig",
      "line": 153
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "MonitoringConfig",
      "line": 185
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "MemoryConfig",
      "line": 213
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "coordinationConfig",
      "line": 241
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "Unifiedcherry_aiConfig",
      "line": 269
    },
    {
      "file": "/root/cherry_ai-main/core/config/unified_config.py",
      "name": "Config",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/config/settings_vultr.py",
      "name": "Settings",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/core/config/__init__.py",
      "name": "Settings",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "TestUnifiedMemoryManager",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "TestMemoryItem",
      "line": 343
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "TestMemoryOperation",
      "line": 401
    },
    {
      "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
      "name": "TestMemoryResult",
      "line": 420
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "name": "AccessMetric",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "name": "OperationMetric",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "name": "TierMigrationMetric",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "name": "MetricsAggregator",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "name": "MemoryMetricsCollector",
      "line": 185
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/manager.py",
      "name": "UnifiedMemoryManager",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
      "name": "AccessPattern",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
      "name": "PrefetchPredictor",
      "line": 84
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
      "name": "MemoryOptimizer",
      "line": 133
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
      "name": "PostgreSQLStorage",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "name": "EvictionPolicy",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "name": "LRUPolicy",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "name": "LFUPolicy",
      "line": 78
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "name": "FIFOPolicy",
      "line": 118
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "name": "InMemoryStorage",
      "line": 140
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/factory.py",
      "name": "MemoryStorageFactory",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "DeploymentEnvironment",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "ResourceSize",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "DeploymentConfig",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "CloudProvider",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
      "name": "Deploymentconductor",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/dragonfly.py",
      "name": "DragonflyConnection",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
      "name": "MongoDBConnection",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "ServiceStatus",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "ServiceHealth",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "ServiceConnection",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "ConnectionPool",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "RetryableConnection",
      "line": 140
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
      "name": "ServiceRegistry",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "Environment",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "LogLevel",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "ServiceSettings",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "MongoDBSettings",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "DragonflySettings",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "WeaviateSettings",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "LLMProviderSettings",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "DeploymentSettings",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "APISettings",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "FeatureFlags",
      "line": 115
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
      "name": "Settings",
      "line": 126
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "ConversationRequest",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "WorkflowExecutionRequest",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "AgentMessageRequest",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "AgentTaskRequest",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "MemoryStoreRequest",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "MemorySearchRequest",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "PersonaCreateRequest",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "LLMCompletionRequest",
      "line": 70
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "DocumentAnalysisRequest",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/requests.py",
      "name": "ResearchRequest",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "BaseResponse",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "ConversationResponse",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "WorkflowExecutionResponse",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "AgentResponse",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "AgentListResponse",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "MemoryResponse",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "PersonaResponse",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "PersonaListResponse",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "LLMCompletionResponse",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "DocumentAnalysisResponse",
      "line": 81
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "ResearchResponse",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "HealthCheckResponse",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/core/api/models/responses.py",
      "name": "ErrorResponse",
      "line": 106
    },
    {
      "file": "/root/cherry_ai-main/core/api/middleware/error_handler.py",
      "name": "ErrorHandlerMiddleware",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
      "name": "EnhancedInteractionRequest",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
      "name": "PersonaClient",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "conductorError",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "ConfigurationError",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "DependencyError",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "MemoryError",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "MemoryConnectionError",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "MemoryOperationError",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "MemoryItemNotFoundError",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "AgentError",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "AgentNotFoundError",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "AgentExecutionError",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "ResilienceError",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "CircuitBreakerOpenError",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "FallbackError",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "LLMError",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "LLMProviderError",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "LLMRateLimitError",
      "line": 82
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "APIError",
      "line": 85
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "ValidationError",
      "line": 88
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
      "name": "ServiceUnavailableError",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
      "name": "LayeredMemoryManager",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "MemoryAdapter",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "AsyncMemoryAdapter",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "MemoryAdapterRegistry",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "MongoDBMemoryAdapter",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "WeaviateMemoryAdapter",
      "line": 96
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "DragonflyMemoryAdapter",
      "line": 138
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
      "name": "UnifiedMemoryManager",
      "line": 167
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
      "name": "MemoryEnhancedAgentContext",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
      "name": "MemoryAwareAgentRegistry",
      "line": 139
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory.py",
      "name": "LayeredMemory",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/interface.py",
      "name": "MemoryInterface",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
      "name": "MemoryFactory",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
      "name": "ConfigLoader",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "AgentContext",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "AgentResponse",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "Agent",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "SimpleTextAgent",
      "line": 89
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "PersonaAwareAgent",
      "line": 118
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
      "name": "AgentRegistry",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
      "name": "InteractionResult",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
      "name": "EventEmitter",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
      "name": "conductor",
      "line": 107
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
      "name": "InteractionRequest",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
      "name": "InteractionResponse",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
      "name": "PersonaInfo",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
      "name": "PersonaListResponse",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
      "name": "MemoryItem",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
      "name": "MemoryProvider",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
      "name": "InMemoryProvider",
      "line": 78
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
      "name": "MemoryManager",
      "line": 122
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
      "name": "PersonaConfig",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
      "name": "PersonaProcessor",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
      "name": "PersonaLoader",
      "line": 78
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
      "name": "PersonaManager",
      "line": 201
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
      "name": "PersonaAwareAgent",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
      "name": "DomainSpecificAgent",
      "line": 272
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/message_handler_mixin.py",
      "name": "MessageHandlerMixin",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
      "name": "AgentCapability",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
      "name": "SimplifiedAgentRegistry",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
      "name": "ConversationFormatter",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
      "name": "LLMAgent",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/messaging_agent.py",
      "name": "MessagingAgent",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
      "name": "AgentState",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
      "name": "StatefulAgent",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
      "name": "ConversationalAgent",
      "line": 331
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
      "name": "ObservableAgent",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
      "name": "ObservableAgentFactory",
      "line": 283
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "InteractionStylingStrategy",
      "line": 7
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "FormalStyling",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "CasualStyling",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "FriendlyStyling",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "TechnicalStyling",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "ConciseStyling",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "ElaborateStyling",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "EmpatheticStyling",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "WittyStyling",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
      "name": "ProfessionalStyling",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
      "name": "AgentContext",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
      "name": "AgentResponse",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
      "name": "Agent",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
      "name": "SimpleTextAgent",
      "line": 191
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
      "name": "CircuitState",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
      "name": "CircuitBreaker",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py",
      "name": "PrometheusClient",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
      "name": "IncidentReporter",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
      "name": "TaskQueueManager",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
      "name": "VertexAiFallbackHandler",
      "line": 188
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
      "name": "PersonaManager",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
      "name": "PersonaTemplate",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
      "name": "EnhancedPersonaConfig",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
      "name": "EnhancedPersonaManager",
      "line": 145
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "MessageType",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentQuery",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentResponse",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentNotification",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentStatus",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentError",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentTask",
      "line": 65
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "AgentResult",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "MemoryOperation",
      "line": 81
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
      "name": "WorkflowEvent",
      "line": 89
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
      "name": "WorkflowState",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
      "name": "WorkflowTransition",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
      "name": "WorkflowDefinition",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
      "name": "WorkflowInstance",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
      "name": "WorkflowEngine",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "name": "LiteLLMLangChainLLM",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
      "name": "LiteLLMLangChainChat",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "ModelProvider",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "ModelType",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "LLMMessage",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "LLMResponse",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "LLMEmbeddingResponse",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
      "name": "LiteLLMClient",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/settings_clean.py",
      "name": "Settings",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "MemoryType",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "MemoryConfig",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "ToolConfig",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "AgentCapability",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "AgentConfig",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "TeamMode",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "ControllerConfig",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "TeamConfig",
      "line": 106
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "AgentRegistry",
      "line": 117
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "LLMProvider",
      "line": 135
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "LLMConfig",
      "line": 145
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
      "name": "LLMRegistry",
      "line": 158
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/config.py",
      "name": "Settings",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/settings.py",
      "name": "Settings",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/executor.py",
      "name": "ToolExecutor",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
      "name": "ToolParameter",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
      "name": "ToolDefinition",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
      "name": "ToolRegistry",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
      "name": "HashRecord",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
      "name": "MemoryService",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "Service",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "ServiceFactory",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
      "name": "ServiceRegistry",
      "line": 103
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py",
      "name": "AgentCommunicationService",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
      "name": "InteractionService",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_agent_conductor.py",
      "name": "EnhancedAgentconductor",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py",
      "name": "ConversationState",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py",
      "name": "ConversationService",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/message_queue.py",
      "name": "AgentMessage",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/message_queue.py",
      "name": "MessageQueue",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
      "name": "Agentconductor",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
      "name": "Baseconductor",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
      "name": "SemanticRouter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
      "name": "TaskDefinition",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
      "name": "TaskInstance",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
      "name": "DistributedTaskQueue",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/registry.py",
      "name": "ServiceRegistry",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "Service",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "ServiceFactory",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
      "name": "EnhancedServiceRegistry",
      "line": 77
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
      "name": "SummaryLevel",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
      "name": "SummaryResult",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
      "name": "ProgressiveSummarizerConfig",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
      "name": "ProgressiveSummarizer",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
      "name": "ImportanceFactors",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
      "name": "ImportanceScore",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
      "name": "ImportanceScoringConfig",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
      "name": "ImportanceScorer",
      "line": 106
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
      "name": "ChunkingStrategy",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
      "name": "ChunkMetadata",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
      "name": "Chunk",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
      "name": "ChunkerConfig",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
      "name": "MemoryChunker",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py",
      "name": "RedisMemory",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
      "name": "QueryType",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
      "name": "HybridSearchConfig",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
      "name": "HybridSearchEngine",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py",
      "name": "SearchResult",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py",
      "name": "ParallelMemoryRetriever",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
      "name": "QueryType",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
      "name": "QueryFeatures",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
      "name": "QueryClassificationResult",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
      "name": "QueryClassifier",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
      "name": "RedisCache",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
      "name": "UserInput",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py",
      "name": "AgentRunRequest",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py",
      "name": "AgentRunResponse",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
      "name": "MonitoringSummaryResponse",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
      "name": "CostBreakdownResponse",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
      "name": "Agent",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
      "name": "Persona",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
      "name": "Workflow",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
      "name": "LLMRequestModel",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
      "name": "LLMResponseModel",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
      "name": "ErrorResponse",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
      "name": "ComponentHealth",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
      "name": "HealthStatus",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "name": "PhidataRequest",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
      "name": "PhidataResponse",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
      "name": "Token",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
      "name": "LoginRequest",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
      "name": "MessageInput",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
      "name": "ConversationStartInput",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
      "name": "ConversationEndInput",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py",
      "name": "MemoryServiceStorageAdapter",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_middleware.py",
      "name": "PersonaMiddleware",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
      "name": "CalculatorTool",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
      "name": "WeatherTool",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
      "name": "ExampleToolUsingAgent",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
      "name": "ExampleObservableAgent",
      "line": 194
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/pubsub_agent_example.py",
      "name": "PubSubAgent",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "MemoryType",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "MemoryItem",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "ConversationMemoryItem",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "VectorMemoryItem",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "MemorySearchResult",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
      "name": "Config",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
      "name": "MongoDBMemoryManager",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "name": "MemoryQuery",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "name": "MemoryStats",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "name": "MemoryStore",
      "line": 59
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "name": "RedisMemoryStore",
      "line": 205
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "name": "MongoDBMemoryStore",
      "line": 416
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "name": "MemoryLayer",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "name": "LayeredMemoryManager",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
      "name": "Config",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
      "name": "ExecutionStep",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
      "name": "ExecutionPlan",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
      "name": "StepResult",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
      "name": "AgentTeam",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
      "name": "TeamCoordinator",
      "line": 555
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "ToolParameter",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "ToolMetadata",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "Tool",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "ToolRegistry",
      "line": 162
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
      "name": "ToolUsingAgent",
      "line": 251
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
      "name": "CircuitState",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
      "name": "ProviderCircuitOpenError",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
      "name": "CircuitBreaker",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderError",
      "line": 8
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderConnectionError",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderAuthenticationError",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderRateLimitError",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderResourceExhaustedError",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderInvalidRequestError",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderServiceError",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderTimeoutError",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
      "name": "LLMProviderModelError",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
      "name": "LLMProviderConfig",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
      "name": "LLMProvider",
      "line": 120
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
      "name": "OpenRouterProvider",
      "line": 228
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
      "name": "PortkeyProvider",
      "line": 595
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "PersonaTrait",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "ResponseStyle",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "PersonaConfig",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "PersonaProcessor",
      "line": 100
    },
    {
      "file": "/root/cherry_ai-main/core/business/personas/base.py",
      "name": "PersonaManager",
      "line": 118
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "TaskStatus",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "TaskPriority",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "TaskResult",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "TaskDefinition",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "WorkflowContext",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "Task",
      "line": 88
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "Workflow",
      "line": 101
    },
    {
      "file": "/root/cherry_ai-main/core/business/workflows/base.py",
      "name": "WorkflowEngine",
      "line": 338
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "LLMProvider",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "CompletionMode",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "LLMRequest",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "LLMResponse",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/core/business/llm/provider.py",
      "name": "LLMService",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
      "name": "ResolutionStrategy",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
      "name": "ResolutionAction",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
      "name": "ResolutionResult",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
      "name": "DuplicateResolver",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
      "name": "DuplicateType",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
      "name": "UploadChannel",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
      "name": "DuplicateMatch",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
      "name": "DeduplicationEngine",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
      "name": "AuditEventType",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
      "name": "AuditEntry",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
      "name": "DeduplicationAuditLogger",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
      "name": "StorageType",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
      "name": "StorageResult",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
      "name": "StorageInterface",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
      "name": "ParsedData",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
      "name": "ParserInterface",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "ProcessingStatus",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "ProcessingResult",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
      "name": "ProcessorInterface",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/slack_parser.py",
      "name": "SlackParser",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py",
      "name": "ZipHandler",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/postgres_adapter.py",
      "name": "PostgresAdapter",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
      "name": "WeaviateAdapter",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "EventPriority",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "Event",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "EventHandler",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
      "name": "EventBus",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "name": "ShortTermStore",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "name": "MidTermStore",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "name": "LongTermStore",
      "line": 191
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "name": "DefaultMemoryPolicy",
      "line": 335
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "name": "UnifiedMemoryService",
      "line": 382
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "MemoryLayer",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "MemoryItem",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "SearchResult",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "MemoryStore",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "MemoryService",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/base.py",
      "name": "MemoryPolicy",
      "line": 195
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/examples.py",
      "name": "ConversationalAgent",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/examples.py",
      "name": "TaskExecutorAgent",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/examples.py",
      "name": "ResearchAgent",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/examples.py",
      "name": "CollaborativeAgent",
      "line": 247
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentStatus",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentCapability",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentMessage",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentConfig",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentState",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "Agent",
      "line": 84
    },
    {
      "file": "/root/cherry_ai-main/core/services/agents/base.py",
      "name": "AgentManager",
      "line": 330
    },
    {
      "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
      "name": "AirbyteAutomator",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
      "name": "WeaviateProvisioner",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
      "name": "DummyAdapter",
      "line": 5
    },
    {
      "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
      "name": "InMemoryAdapter",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/tests/integration/test_mcp_servers.py",
      "name": "TestMCPServers",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py",
      "name": "ConcreteMemoryManager",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
      "name": "MemoryBenchmark",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_context_manager.py",
      "name": "TestUnifiedContextManager",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestCacheEntry",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestCacheMetrics",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestL1Cache",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestL2Cache",
      "line": 148
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestL3Cache",
      "line": 249
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestCacheManager",
      "line": 338
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
      "name": "TestCreateCacheManager",
      "line": 520
    },
    {
      "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
      "name": "PostgresComponent",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
      "name": "VultrServerComponent",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/infra/components/weaviate_component.py",
      "name": "WeaviateComponent",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/infra/components/database_component.py",
      "name": "DatabaseComponent",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/infra/components/litellm_component.py",
      "name": "LiteLLMComponent",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/infra/components/ingress_component.py",
      "name": "IngressComponent",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/infra/components/monitoring_component.py",
      "name": "MonitoringComponent",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
      "name": "VectorDropletComponent",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "DroidType",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "TaskStatus",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "CircuitBreakerState",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "FactoryRequest",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "FactoryResponse",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
      "name": "FactoryBridgeGateway",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
      "name": "ContactEnrichmentAgent",
      "line": 9
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/tool_agent_example.py",
      "name": "ToolAgent",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py",
      "name": "PropertyEnrichmentAgent",
      "line": 6
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/base.py",
      "name": "BaseAgent",
      "line": 14
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "AgentRole",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "BaseAgent",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "DomainExpertAgent",
      "line": 157
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "WorkerAgent",
      "line": 379
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
      "name": "Agentconductor",
      "line": 590
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
      "name": "GatewayAdapter",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
      "name": "PortkeyGatewayAdapter",
      "line": 68
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
      "name": "KongGatewayAdapter",
      "line": 286
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
      "name": "GatewayAdapterFactory",
      "line": 345
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
      "name": "InMemoryMemoryManagerStub",
      "line": 3
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "UserRequest",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "AgentResponse",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "MemoryRecord",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "WorkflowState",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "PayReadyContact",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "PayReadyLead",
      "line": 153
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
      "name": "Configuration",
      "line": 179
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "MetadataValidationError",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "DevNoteType",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "PrivacyLevel",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "MetadataValidator",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "DevNoteMetadata",
      "line": 97
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
      "name": "UserDataMetadata",
      "line": 178
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
      "name": "PersonaConfig",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
      "name": "UserInteraction",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
      "name": "AgentData",
      "line": 63
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "MemoryItem",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "AgentMessage",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "PersonaTraits",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "PersonaConfig",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "AgentConfig",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
      "name": "AgentData",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "PortkeyAdminException",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "VirtualKey",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "GatewayConfig",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
      "name": "PortkeyAdminClient",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
      "name": "PortkeyManager",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
      "name": "PortkeyError",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
      "name": "WebScraperRuntimeAgent",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/langchain_agent.py",
      "name": "LangChainAgentWrapper",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata_agent.py",
      "name": "PhidataAgentWrapper",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
      "name": "AgentRouter",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
      "name": "cherry_aiAgentBase",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/registry.py",
      "name": "AgentRegistry",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
      "name": "AgentProtocol",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
      "name": "CredentialsManager",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
      "name": "PhidataTeamAgentWrapper",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/packages/llm/src/config.py",
      "name": "LLMProviderConfig",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "name": "LangChainMemoryWrapper",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "name": "ConversationSummaryBufferMemoryWrapper",
      "line": 388
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
      "name": "MemoryTier",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
      "name": "MemoryMetadata",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
      "name": "MemoryEntry",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
      "name": "MemorySearchResult",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
      "name": "BaseMemory",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "RuleSeverity",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "RuleCategory",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "RuleViolation",
      "line": 43
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "Rule",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "name": "RuleEngine",
      "line": 182
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
      "name": "PerformanceMonitor",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
      "name": "SecretManager",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
      "name": "MemoryCompressionEngine",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "MemoryKeyScope",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "MemoryKey",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "name": "MemoryKeyPattern",
      "line": 369
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "StructuredLogFormatter",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "StructuredLogger",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
      "name": "LogContext",
      "line": 358
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "name": "TokenBudgetManager",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "IdempotencyKey",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "InMemoryIdempotencyStore",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "RedisIdempotencyStore",
      "line": 199
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "name": "IdempotencyManager",
      "line": 297
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "name": "TokenEstimator",
      "line": 302
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
      "name": "PerformanceTuner",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
      "name": "WeaviateDirectServer",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
      "name": "MCPServerConfig",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
      "name": "HealthStatus",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
      "name": "BaseMCPServer",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
      "name": "RetryHelper",
      "line": 211
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
      "name": "ExampleMCPServer",
      "line": 243
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
      "name": "cherry_aiWebScrapingMCPServer",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "MemoryItem",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "EntityItem",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "MemoryQuery",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "DeleteMemoryArgs",
      "line": 107
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "ClearGraphArgs",
      "line": 111
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
      "name": "MCPToolDefinition",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "AgentMode",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "WorkflowStatus",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "Task",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "Workflow",
      "line": 81
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "ModeSwitch",
      "line": 95
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "WorkflowRequest",
      "line": 102
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
      "name": "MCPToolDefinition",
      "line": 109
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/deployment_server.py",
      "name": "DeploymentServer",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
      "name": "ConductorServer",
      "line": 64
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
      "name": "MemoryServer",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/tools_server.py",
      "name": "ToolsServer",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "MCPServiceRegistry",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "MemoryItemResponse",
      "line": 192
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "SearchResultResponse",
      "line": 200
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "RememberRequest",
      "line": 204
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "RememberResponse",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "RecallRequest",
      "line": 215
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "SearchMemoriesRequest",
      "line": 218
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "SearchMemoriesResponse",
      "line": 225
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "ForgetRequest",
      "line": 229
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "ForgetResponse",
      "line": 232
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "GetMemoryStatsResponse",
      "line": 236
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "MCPToolProperty",
      "line": 239
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "MCPToolParameters",
      "line": 244
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
      "name": "MCPToolDefinition",
      "line": 249
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "GetSchemaRequest",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "AddObjectRequest",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "AddObjectResponse",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "GetObjectRequest",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "GetObjectResponse",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "DeleteObjectRequest",
      "line": 72
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "DeleteObjectResponse",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "HybridSearchRequest",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "SearchResultItem",
      "line": 96
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "HybridSearchResponse",
      "line": 103
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "RawGraphQLRequest",
      "line": 107
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "RawGraphQLResponse",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "MCPToolProperty",
      "line": 114
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "MCPToolParameters",
      "line": 119
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
      "name": "MCPToolDefinition",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
      "name": "VectorBatchProcessor",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
      "name": "EnhancedMemoryServer",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
      "name": "IToolAdapter",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
      "name": "CopilotAdapter",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
      "name": "GeminiAdapter",
      "line": 132
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
      "name": "IMemoryStorage",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
      "name": "SyncMemoryStorage",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
      "name": "IMemoryManager",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
      "name": "SyncMemoryManager",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/performance_memory_manager.py",
      "name": "PerformanceMemoryManager",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "name": "TokenBudgetManager",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "name": "MemoryCompressionEngine",
      "line": 89
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "name": "StandardMemoryManager",
      "line": 163
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "name": "AgentModeManager",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "MockMCPServer",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestCircuitBreaker",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestFactoryMCPAdapter",
      "line": 86
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestArchitectAdapter",
      "line": 152
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestCodeAdapter",
      "line": 199
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestDebugAdapter",
      "line": 243
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestReliabilityAdapter",
      "line": 290
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestKnowledgeAdapter",
      "line": 337
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestIntegration",
      "line": 405
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
      "name": "TestAdapter",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/roo_adapter.py",
      "name": "RooAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
      "name": "IncidentSeverity",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
      "name": "RemediationStatus",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
      "name": "ReliabilityAdapter",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
      "name": "KnowledgeAdapter",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "CircuitBreakerConfig",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "DroidConfig",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "ArchitectConfig",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "CodeConfig",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "DebugConfig",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "ReliabilityConfig",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "KnowledgeConfig",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
      "name": "AdapterSystemConfig",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/portkey_adapter.py",
      "name": "PortkeyAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/codex_adapter.py",
      "name": "CodexAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
      "name": "ArchitectAdapter",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
      "name": "MockMCPServer",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
      "name": "IntegratedAdapterSystem",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/openrouter_adapter.py",
      "name": "OpenRouterAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
      "name": "CopilotAdapter",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/cursor_adapter.py",
      "name": "CursorAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/openai_adapter.py",
      "name": "OpenAIAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
      "name": "CircuitState",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
      "name": "CircuitBreakerError",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
      "name": "CircuitBreaker",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
      "name": "FactoryMCPAdapter",
      "line": 109
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
      "name": "DebugAdapter",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
      "name": "CodeAdapter",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/claude_adapter.py",
      "name": "ClaudeAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/grok_adapter.py",
      "name": "GrokAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/deepseek_adapter.py",
      "name": "DeepSeekAdapter",
      "line": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "AgentModeType",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "AgentModeConfig",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "AgentMode",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "Config",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
      "name": "Config",
      "line": 126
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "MemoryType",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "MemoryScope",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "CompressionLevel",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "StorageTier",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "MemoryMetadata",
      "line": 52
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
      "name": "MemoryEntry",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "CircuitState",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "CircuitBreaker",
      "line": 32
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "ConnectionPoolManager",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "MCPMetrics",
      "line": 112
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
      "name": "EnhancedMCPServerBase",
      "line": 156
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py",
      "name": "WorkflowManager",
      "line": 17
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
      "name": "ServerMetrics",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
      "name": "MCPHealthDashboard",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "name": "OperationStatus",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "name": "OperationContext",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "name": "BoomerangOperation",
      "line": 69
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "name": "RooMemoryCategory",
      "line": 356
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "name": "RooMemoryManager",
      "line": 366
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
      "name": "cherry_aiRooIntegration",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "RuleType",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "RuleIntent",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "RuleSeverity",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "RuleCondition",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "Rule",
      "line": 87
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
      "name": "RuleEngine",
      "line": 124
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/transitions.py",
      "name": "TransitionContext",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/transitions.py",
      "name": "ModeTransitionManager",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "ServerConfig",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "StorageConfig",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "CopilotConfig",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "GeminiConfig",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "MCPConfig",
      "line": 65
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "Config",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "Config",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "Config",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "Config",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/models.py",
      "name": "Config",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
      "name": "OptimizedMemoryStorage",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
      "name": "MemoryStore",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
      "name": "SyncStorageAdapter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py",
      "name": "InMemoryStorage",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/memory_adapter.py",
      "name": "StorageBridgeAdapter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
      "name": "AsyncMemoryStore",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
      "name": "ToolManager",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/adapters/gemini_adapter.py",
      "name": "GeminiRooAdapter",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
      "name": "ImageGenerationController",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
      "name": "VideoGenerationController",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
      "name": "WorkflowStatus",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
      "name": "OperatorModeCoordinator",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/search_router.py",
      "name": "SearchMode",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/search_router.py",
      "name": "SearchRouter",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
      "name": "CreativeSearcher",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
      "name": "DeepSearcher",
      "line": 22
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
      "name": "NormalSearcher",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
      "name": "SuperDeepSearcher",
      "line": 23
    },
    {
      "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
      "name": "UncensoredSearcher",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
      "name": "ZipExtractor",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
      "name": "VideoProcessor",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
      "name": "DocumentParser",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
      "name": "IngestionController",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
      "name": "AudioTranscriber",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
      "name": "TaskStatus",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
      "name": "AgentType",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
      "name": "OperatorManager",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
      "name": "AgentStatus",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
      "name": "HealthStatus",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
      "name": "AgentSupervisor",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
      "name": "QueuePriority",
      "line": 19
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
      "name": "TaskState",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
      "name": "AgentTaskQueue",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
      "name": "UseCase",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
      "name": "ModelTier",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
      "name": "RouterConfig",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
      "name": "ModelMapping",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
      "name": "UnifiedLLMRouter",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
      "name": "ClaudeAnalyzer",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
      "name": "FileMetrics",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
      "name": "ProjectMetrics",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
      "name": "EnhancedMockAnalyzer",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
      "name": "UpdatedAgentCoordinator",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "ScalingMetric",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "ScalingPolicy",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "VultrInstance",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "VultrAPIClient",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "AutoScaler",
      "line": 165
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "LoadBalancer",
      "line": 263
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
      "name": "Vultrconductor",
      "line": 343
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "RooMode",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "AgentCapability",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "RooContext",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "MCPContext",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "RooModeConfig",
      "line": 69
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
      "name": "RooMCPAdapter",
      "line": 81
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
      "name": "CacheType",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
      "name": "CacheEntry",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
      "name": "IntelligentCache",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "name": "CodingPattern",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "name": "CodingActivityMonitor",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
      "name": "ScheduledAutomation",
      "line": 150
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "TransitionType",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "TransitionState",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "TransitionContext",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "TransitionRule",
      "line": 55
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "TransitionHistory",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
      "name": "ModeTransitionManager",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "TaskStatus",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "AgentRole",
      "line": 53
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "WorkflowContext",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "TaskDefinition",
      "line": 75
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "DatabaseLogger",
      "line": 99
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "WeaviateManager",
      "line": 156
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "MCPContextManager",
      "line": 256
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "AgentCoordinator",
      "line": 304
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "CodeAnalyzerAgent",
      "line": 370
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "AIImplementationAgent",
      "line": 454
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "AIOptimizationAgent",
      "line": 536
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
      "name": "Workflowconductor",
      "line": 621
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "CodeEditOperation",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "CursorSession",
      "line": 30
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "CursorAPIClient",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "SecureAPIEndpoint",
      "line": 110
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "AIModelBridge",
      "line": 153
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
      "name": "CursorIntegrationServer",
      "line": 226
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
      "name": "CherryAIConductor",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "ServiceType",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "CircuitState",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "ServiceMetrics",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "RoutingDecision",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "CircuitBreaker",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "RetryStrategy",
      "line": 127
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
      "name": "UnifiedAPIRouter",
      "line": 163
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "MCPMessage",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "AgentCapability",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "MCPAgent",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "RooAgent",
      "line": 65
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "FactoryAIAgent",
      "line": 117
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "MCPContextManager",
      "line": 169
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "UnifiedContextManager",
      "line": 229
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "MCPCoordinator",
      "line": 483
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
      "name": "MCPWebSocketServer",
      "line": 583
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "TaskStatus",
      "line": 50
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "AgentRole",
      "line": 60
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "TaskPriority",
      "line": 67
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "WorkflowContext",
      "line": 76
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "TaskDefinition",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "CircuitBreaker",
      "line": 108
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "SecretManager",
      "line": 142
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "DatabaseLogger",
      "line": 159
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "WeaviateManager",
      "line": 225
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "EnhancedEigenCodeAgent",
      "line": 311
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "CursorAIAgent",
      "line": 379
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "RooCodeAgent",
      "line": 405
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "EnhancedAgentCoordinator",
      "line": 431
    },
    {
      "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
      "name": "EnhancedWorkflowconductor",
      "line": 543
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "TestWorkflowconductor",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "TestAgentCoordinator",
      "line": 222
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "TestMCPContextManager",
      "line": 276
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "TestDatabaseLogger",
      "line": 321
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
      "name": "TestWeaviateManager",
      "line": 361
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "TestRooMCPAdapter",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "TestUnifiedAPIRouter",
      "line": 123
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "TestModeTransitionManager",
      "line": 210
    },
    {
      "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
      "name": "TestIntegration",
      "line": 332
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
      "name": "CursorAICapability",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
      "name": "CursorAIMode",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
      "name": "EnhancedCursorAIAgent",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
      "name": "ClaudeModel",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
      "name": "ClaudeCapability",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
      "name": "ClaudeIntegration",
      "line": 49
    },
    {
      "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
      "name": "GitHubCopilotClient",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
      "name": "CursorAIClient",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
      "name": "DALLEImageGenerator",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
      "name": "RecraftDesignGenerator",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
      "name": "DesignPhase",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
      "name": "Designconductor",
      "line": 35
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "TestPersonasAdminRouter",
      "line": 92
    },
    {
      "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
      "name": "TestPersonasAdminIntegration",
      "line": 263
    },
    {
      "file": "/root/cherry_ai-main/agent/app/main.py",
      "name": "QueryRequest",
      "line": 79
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
      "name": "Agent",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
      "name": "QueryRequest",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
      "name": "QueryResponse",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "LLMRequest",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "LLMResponse",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "CodeGenerationRequest",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "ArchitectureRequest",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "DebugRequest",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "ChatRequest",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
      "name": "EmbeddingRequest",
      "line": 61
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "name": "FileUploadResponse",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "name": "ProcessingStatusResponse",
      "line": 41
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "name": "QueryRequest",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "name": "QueryResponse",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "name": "ProviderUpdate",
      "line": 27
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "name": "ModelAssignmentCreate",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "name": "ModelTestRequest",
      "line": 45
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
      "name": "BulkModelUpdate",
      "line": 54
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
      "name": "TextCommand",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
      "name": "VoiceCommand",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
      "name": "NLResponse",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "TestRoutingRequest",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "WorkflowCreateRequest",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "AgentTaskRequest",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "PersonalSearchRequest",
      "line": 51
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "ApartmentAnalysisRequest",
      "line": 57
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
      "name": "ClinicalTrialSearchRequest",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
      "name": "Suggestion",
      "line": 11
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
      "name": "SuggestionsResponse",
      "line": 20
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
      "name": "SuggestionEngine",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
      "name": "IntentRequest",
      "line": 12
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
      "name": "IntentResponse",
      "line": 18
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
      "name": "IntentDetector",
      "line": 25
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "name": "ConnectionManager",
      "line": 39
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "name": "UploadRequestV2",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "name": "UploadResponseV2",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "name": "NaturalLanguageUploadRequest",
      "line": 84
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "name": "StreamingUploadResponse",
      "line": 90
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "PersonaListResponse",
      "line": 73
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "PersonaUpdateRequest",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "PersonaExportRequest",
      "line": 98
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "ValidationReport",
      "line": 103
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
      "name": "Config",
      "line": 93
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
      "name": "Token",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
      "name": "TokenData",
      "line": 40
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
      "name": "User",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/real_agents.py",
      "name": "RealAgent",
      "line": 13
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "AgentType",
      "line": 31
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "UserPreference",
      "line": 38
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "ApartmentListing",
      "line": 47
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "ClinicalTrial",
      "line": 62
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "BaseSpecializedAgent",
      "line": 74
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "PersonalAgent",
      "line": 132
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "PayReadyAgent",
      "line": 346
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
      "name": "ParagonMedicalResearchAgent",
      "line": 578
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "WorkflowStatus",
      "line": 37
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "TaskStatus",
      "line": 46
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "WorkflowTask",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "Workflow",
      "line": 71
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "CircuitBreaker",
      "line": 83
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
      "name": "Agentconductor",
      "line": 121
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "IntentCategory",
      "line": 24
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "Intent",
      "line": 34
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "NaturalLanguageProcessor",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "IntentClassifier",
      "line": 85
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "VoiceTranscriber",
      "line": 151
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
      "name": "ResponseGenerator",
      "line": 191
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
      "name": "CustomAgentCapability",
      "line": 26
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
      "name": "AutonomyLevel",
      "line": 33
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
      "name": "CustomAgentConfig",
      "line": 42
    },
    {
      "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
      "name": "YourFirstAgent",
      "line": 56
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "TestRequest",
      "line": 48
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "BenchmarkRequest",
      "line": 58
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "CascadeTestRequest",
      "line": 66
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "ProviderResponse",
      "line": 80
    },
    {
      "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
      "name": "TestResponse",
      "line": 91
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
      "name": "InferencePipeline",
      "line": 16
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
      "name": "ModelServer",
      "line": 113
    },
    {
      "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
      "name": "TrainingPipeline",
      "line": 15
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "name": "SourceType",
      "line": 28
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "name": "SyncStatus",
      "line": 36
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "name": "PayReadyETLconductor",
      "line": 44
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "name": "AirbyteClient",
      "line": 525
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
      "name": "PayReadyEntityResolver",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
      "name": "MemoryTier",
      "line": 21
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
      "name": "PayReadyMemoryManager",
      "line": 29
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/query_agent.py",
      "name": "PayReadyQueryAgent",
      "line": 19
    }
  ],
  "duplicate_functions": [
    {
      "name": "get_secret",
      "locations": [
        [
          "/root/cherry_ai-main/dragonfly_config.py",
          42
        ],
        [
          "/root/cherry_ai-main/core/security/postgresql_secrets.py",
          77
        ],
        [
          "/root/cherry_ai-main/core/security/postgresql_secrets.py",
          37
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          177
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          68
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          146
        ]
      ],
      "count": 6
    },
    {
      "name": "print_summary",
      "locations": [
        [
          "/root/cherry_ai-main/find_critical_lint_issues.py",
          102
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          331
        ],
        [
          "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py",
          305
        ],
        [
          "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
          353
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          272
        ],
        [
          "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
          407
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
          547
        ],
        [
          "/root/cherry_ai-main/scripts/test_new_setup.py",
          272
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          332
        ]
      ],
      "count": 9
    },
    {
      "name": "print_detailed_report",
      "locations": [
        [
          "/root/cherry_ai-main/find_critical_lint_issues.py",
          128
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          364
        ]
      ],
      "count": 2
    },
    {
      "name": "main",
      "locations": [
        [
          "/root/cherry_ai-main/find_critical_lint_issues.py",
          148
        ],
        [
          "/root/cherry_ai-main/key_fix_script.py",
          49
        ],
        [
          "/root/cherry_ai-main/quick_check.py",
          181
        ],
        [
          "/root/cherry_ai-main/execute_strategy_workflow.py",
          73
        ],
        [
          "/root/cherry_ai-main/scan_github_workflows.py",
          318
        ],
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          821
        ],
        [
          "/root/cherry_ai-main/mcp_cli.py",
          287
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          385
        ],
        [
          "/root/cherry_ai-main/monitor_extension_performance.py",
          206
        ],
        [
          "/root/cherry_ai-main/scan_for_hardcoded_values.py",
          214
        ],
        [
          "/root/cherry_ai-main/migration_conductor.py",
          474
        ],
        [
          "/root/cherry_ai-main/simple_mcp.py",
          191
        ],
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          238
        ],
        [
          "/root/cherry_ai-main/scripts/generate_env_from_pulumi.py",
          133
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration_check.py",
          259
        ],
        [
          "/root/cherry_ai-main/scripts/setup_api_keys.py",
          109
        ],
        [
          "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
          311
        ],
        [
          "/root/cherry_ai-main/scripts/validate_docs.py",
          8
        ],
        [
          "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          119
        ],
        [
          "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
          360
        ],
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          286
        ],
        [
          "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
          725
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai.py",
          223
        ],
        [
          "/root/cherry_ai-main/scripts/final_cleanup.py",
          245
        ],
        [
          "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
          498
        ],
        [
          "/root/cherry_ai-main/scripts/create_first_agent.py",
          140
        ],
        [
          "/root/cherry_ai-main/scripts/deep_cleanup.py",
          249
        ],
        [
          "/root/cherry_ai-main/scripts/update_dependencies.py",
          80
        ],
        [
          "/root/cherry_ai-main/scripts/fix_remaining_issues.py",
          34
        ],
        [
          "/root/cherry_ai-main/scripts/test_database_consolidation.py",
          163
        ],
        [
          "/root/cherry_ai-main/scripts/check_pre_commit_status.py",
          100
        ],
        [
          "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
          254
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_admin_ui.py",
          40
        ],
        [
          "/root/cherry_ai-main/scripts/verify_enhancements.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_status.py",
          20
        ],
        [
          "/root/cherry_ai-main/scripts/update_github_secrets.py",
          204
        ],
        [
          "/root/cherry_ai-main/scripts/verify_roo_mcp_integration.py",
          171
        ],
        [
          "/root/cherry_ai-main/scripts/validate_syntax.py",
          41
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          486
        ],
        [
          "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
          142
        ],
        [
          "/root/cherry_ai-main/scripts/review_ai_context.py",
          117
        ],
        [
          "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
          266
        ],
        [
          "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
          318
        ],
        [
          "/root/cherry_ai-main/scripts/how_to_use_roo_conductor.py",
          112
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
          209
        ],
        [
          "/root/cherry_ai-main/scripts/migrate_to_portkey.py",
          94
        ],
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          403
        ],
        [
          "/root/cherry_ai-main/scripts/fix_coordination_config.py",
          239
        ],
        [
          "/root/cherry_ai-main/scripts/check_env_config.py",
          102
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
          889
        ],
        [
          "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
          551
        ],
        [
          "/root/cherry_ai-main/scripts/configure_airbyte.py",
          197
        ],
        [
          "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py",
          294
        ],
        [
          "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
          104
        ],
        [
          "/root/cherry_ai-main/scripts/pip_forever_fix.py",
          193
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_system_status.py",
          40
        ],
        [
          "/root/cherry_ai-main/scripts/test_infrastructure.py",
          155
        ],
        [
          "/root/cherry_ai-main/scripts/validate_config.py",
          152
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          311
        ],
        [
          "/root/cherry_ai-main/scripts/smoke_tests.py",
          287
        ],
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          174
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
          880
        ],
        [
          "/root/cherry_ai-main/scripts/eigencode_installer_simple.py",
          39
        ],
        [
          "/root/cherry_ai-main/scripts/validate_environment.py",
          46
        ],
        [
          "/root/cherry_ai-main/scripts/monitoring_improvements.py",
          678
        ],
        [
          "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
          591
        ],
        [
          "/root/cherry_ai-main/scripts/vultr_provision.py",
          41
        ],
        [
          "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py",
          134
        ],
        [
          "/root/cherry_ai-main/scripts/test_roo_integration_simple.py",
          46
        ],
        [
          "/root/cherry_ai-main/scripts/setup_postgres_schema.py",
          231
        ],
        [
          "/root/cherry_ai-main/scripts/test_conductor_demo.py",
          154
        ],
        [
          "/root/cherry_ai-main/scripts/setup_ai_services.py",
          240
        ],
        [
          "/root/cherry_ai-main/scripts/fix_python_version_permanently.py",
          258
        ],
        [
          "/root/cherry_ai-main/scripts/test_coordination_setup.py",
          123
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          357
        ],
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          319
        ],
        [
          "/root/cherry_ai-main/mcp_server/mcp_server_runner.py",
          15
        ],
        [
          "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          398
        ],
        [
          "/root/cherry_ai-main/mcp_server/main.py",
          15
        ],
        [
          "/root/cherry_ai-main/mcp_server/run_optimized_server.py",
          124
        ],
        [
          "/root/cherry_ai-main/mcp_server/run_mcp_server.py",
          152
        ],
        [
          "/root/cherry_ai-main/tools/mode_system_initializer.py",
          291
        ],
        [
          "/root/cherry_ai-main/tools/mode_switcher.py",
          259
        ],
        [
          "/root/cherry_ai-main/tools/update_phidata_configs.py",
          179
        ],
        [
          "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
          282
        ],
        [
          "/root/cherry_ai-main/.roo/scripts/verify_setup.py",
          81
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
          262
        ],
        [
          "/root/cherry_ai-main/shared/database/apply_unified_enhancements.py",
          289
        ],
        [
          "/root/cherry_ai-main/core/personas/example_usage.py",
          217
        ],
        [
          "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
          393
        ]
      ],
      "count": 91
    },
    {
      "name": "load_workflow",
      "locations": [
        [
          "/root/cherry_ai-main/execute_strategy_workflow.py",
          24
        ],
        [
          "/root/cherry_ai-main/scripts/update_github_secrets.py",
          43
        ]
      ],
      "count": 2
    },
    {
      "name": "health",
      "locations": [
        [
          "/root/cherry_ai-main/main_app.py",
          32
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          362
        ]
      ],
      "count": 2
    },
    {
      "name": "info",
      "locations": [
        [
          "/root/cherry_ai-main/main_app.py",
          36
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          131
        ]
      ],
      "count": 2
    },
    {
      "name": "handle_exception",
      "locations": [
        [
          "/root/cherry_ai-main/main_app.py",
          91
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          100
        ]
      ],
      "count": 2
    },
    {
      "name": "__init__",
      "locations": [
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          97
        ],
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          163
        ],
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          311
        ],
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          570
        ],
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          724
        ],
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          915
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          49
        ],
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          73
        ],
        [
          "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
          38
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          59
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          82
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          223
        ],
        [
          "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          104
        ],
        [
          "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          295
        ],
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          450
        ],
        [
          "/root/cherry_ai-main/test_dragonfly_connection.py",
          30
        ],
        [
          "/root/cherry_ai-main/service_management_consolidation.py",
          91
        ],
        [
          "/root/cherry_ai-main/data_source_integrations.py",
          33
        ],
        [
          "/root/cherry_ai-main/data_source_integrations.py",
          176
        ],
        [
          "/root/cherry_ai-main/data_source_integrations.py",
          529
        ],
        [
          "/root/cherry_ai-main/data_source_integrations.py",
          630
        ],
        [
          "/root/cherry_ai-main/utils.py",
          39
        ],
        [
          "/root/cherry_ai-main/migration_conductor.py",
          31
        ],
        [
          "/root/cherry_ai-main/simple_mcp.py",
          30
        ],
        [
          "/root/cherry_ai-main/simple_mcp.py",
          115
        ],
        [
          "/root/cherry_ai-main/phidata_agent_team_init.py",
          32
        ],
        [
          "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          22
        ],
        [
          "/root/cherry_ai-main/examples/simplified_agent_example.py",
          33
        ],
        [
          "/root/cherry_ai-main/examples/simplified_agent_example.py",
          46
        ],
        [
          "/root/cherry_ai-main/examples/memory_management_integration.py",
          31
        ],
        [
          "/root/cherry_ai-main/shared/circuit_breaker.py",
          7
        ],
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          32
        ],
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          242
        ],
        [
          "/root/cherry_ai-main/shared/database.py",
          55
        ],
        [
          "/root/cherry_ai-main/core/health_monitor.py",
          49
        ],
        [
          "/root/cherry_ai-main/core/mode_manager.py",
          141
        ],
        [
          "/root/cherry_ai-main/core/main.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/connection_manager.py",
          50
        ],
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          103
        ],
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          278
        ],
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          343
        ],
        [
          "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
          19
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_final.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
          28
        ],
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          19
        ],
        [
          "/root/cherry_ai-main/scripts/ai_code_assistant.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
          13
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration_check.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/setup_api_keys.py",
          15
        ],
        [
          "/root/cherry_ai-main/scripts/architecture_analyzer.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
          26
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
          27
        ],
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          31
        ],
        [
          "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          98
        ],
        [
          "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
          12
        ],
        [
          "/root/cherry_ai-main/scripts/final_cleanup.py",
          11
        ],
        [
          "/root/cherry_ai-main/scripts/next_phase_conductor.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
          15
        ],
        [
          "/root/cherry_ai-main/scripts/deep_cleanup.py",
          12
        ],
        [
          "/root/cherry_ai-main/scripts/ui_integration_spec.py",
          14
        ],
        [
          "/root/cherry_ai-main/scripts/version_monitor.py",
          109
        ],
        [
          "/root/cherry_ai-main/scripts/version_monitor.py",
          605
        ],
        [
          "/root/cherry_ai-main/scripts/ml_model_registry.py",
          40
        ],
        [
          "/root/cherry_ai-main/scripts/performance_analyzer.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/system_validation.py",
          34
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
          32
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_design_automation.py",
          28
        ],
        [
          "/root/cherry_ai-main/scripts/update_github_secrets.py",
          35
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          416
        ],
        [
          "/root/cherry_ai-main/scripts/eigencode_installer.py",
          33
        ],
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          72
        ],
        [
          "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          77
        ],
        [
          "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/ai_infrastructure_monitor.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_ai_system.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/performance_test.py",
          44
        ],
        [
          "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/live_integration_demo.py",
          20
        ],
        [
          "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
          33
        ],
        [
          "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
          35
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
          27
        ],
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          23
        ],
        [
          "/root/cherry_ai-main/scripts/initialize_unified_postgresql.py",
          28
        ],
        [
          "/root/cherry_ai-main/scripts/agent_health_monitor.py",
          35
        ],
        [
          "/root/cherry_ai-main/scripts/quick_start_design_system.py",
          26
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
          20
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/ai_system_conductor.py",
          74
        ],
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          55
        ],
        [
          "/root/cherry_ai-main/scripts/configure_airbyte.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_validation.py",
          33
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/eigencode_monitor.py",
          31
        ],
        [
          "/root/cherry_ai-main/scripts/integration_plan.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py",
          87
        ],
        [
          "/root/cherry_ai-main/scripts/test_integration_complete.py",
          12
        ],
        [
          "/root/cherry_ai-main/scripts/mobile_app_integration.py",
          15
        ],
        [
          "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          79
        ],
        [
          "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/test_roo_integration.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/metrics_pipeline.py",
          40
        ],
        [
          "/root/cherry_ai-main/scripts/setup_advanced_caching.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
          27
        ],
        [
          "/root/cherry_ai-main/scripts/version_updater.py",
          90
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/system_preparedness.py",
          32
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          19
        ],
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          75
        ],
        [
          "/root/cherry_ai-main/scripts/smoke_tests.py",
          19
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
          21
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
          32
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
          15
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
          19
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration.py",
          33
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration.py",
          213
        ],
        [
          "/root/cherry_ai-main/scripts/monitoring_improvements.py",
          25
        ],
        [
          "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
          21
        ],
        [
          "/root/cherry_ai-main/scripts/test_nl_and_agent.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
          21
        ],
        [
          "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/architect_advanced_system.py",
          16
        ],
        [
          "/root/cherry_ai-main/scripts/security_audit.py",
          31
        ],
        [
          "/root/cherry_ai-main/scripts/test_new_setup.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          74
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          159
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          278
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          379
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          513
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          624
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py",
          27
        ],
        [
          "/root/cherry_ai-main/scripts/test_design_system.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          25
        ],
        [
          "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
          33
        ],
        [
          "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
          642
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py",
          29
        ],
        [
          "/root/cherry_ai-main/factory_integration/context_manager.py",
          72
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          69
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          175
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          306
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          467
        ],
        [
          "/root/cherry_ai-main/infra/mcp_server.py",
          26
        ],
        [
          "/root/cherry_ai-main/infra/core_stack.py",
          13
        ],
        [
          "/root/cherry_ai-main/.factory/context.py",
          63
        ],
        [
          "/root/cherry_ai-main/deploy/superagi_config.py",
          18
        ],
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          125
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          269
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          387
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          463
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
          31
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
          103
        ],
        [
          "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          40
        ],
        [
          "/root/cherry_ai-main/mcp_server/run_mcp_server.py",
          37
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          30
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          65
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          14
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          50
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          61
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          76
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          100
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          124
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          151
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          162
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          168
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          185
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          192
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          203
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          213
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          231
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          245
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          255
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          266
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          277
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          289
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          300
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          311
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          321
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          332
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          343
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          353
        ],
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          143
        ],
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          178
        ],
        [
          "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
          28
        ],
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          34
        ],
        [
          "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
          59
        ],
        [
          "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
          80
        ],
        [
          "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
          102
        ],
        [
          "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
          116
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
          22
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/__init__.py",
          34
        ],
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          42
        ],
        [
          "/root/cherry_ai-main/shared/memory/pinecone_adapter.py",
          25
        ],
        [
          "/root/cherry_ai-main/shared/memory/memory_manager.py",
          38
        ],
        [
          "/root/cherry_ai-main/shared/memory/memory_manager.py",
          76
        ],
        [
          "/root/cherry_ai-main/shared/memory/weaviate_session_cache.py",
          13
        ],
        [
          "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
          26
        ],
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          39
        ],
        [
          "/root/cherry_ai-main/shared/utils/performance.py",
          34
        ],
        [
          "/root/cherry_ai-main/shared/sessions/postgresql_sessions.py",
          25
        ],
        [
          "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
          80
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          23
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          22
        ],
        [
          "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
          24
        ],
        [
          "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
          390
        ],
        [
          "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py",
          35
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          24
        ],
        [
          "/root/cherry_ai-main/shared/database/weaviate_client.py",
          35
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          85
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_postgresql.py",
          29
        ],
        [
          "/root/cherry_ai-main/shared/database/connection_manager.py",
          35
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          45
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          113
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          250
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          445
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py",
          35
        ],
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          26
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
          40
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
          124
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
          430
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
          26
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/base_processor.py",
          42
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          21
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          79
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          105
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          135
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          159
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          183
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          207
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          233
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          257
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          282
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          307
        ],
        [
          "/root/cherry_ai-main/core/shared/error_handler.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          237
        ],
        [
          "/root/cherry_ai-main/core/utils/pydantic_validators.py",
          184
        ],
        [
          "/root/cherry_ai-main/core/utils/pydantic_validators.py",
          312
        ],
        [
          "/root/cherry_ai-main/core/api/router_registry.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/security/credential_manager.py",
          104
        ],
        [
          "/root/cherry_ai-main/core/security/postgresql_secrets.py",
          14
        ],
        [
          "/root/cherry_ai-main/core/personas/manager.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
          161
        ],
        [
          "/root/cherry_ai-main/core/monitoring/monitored_litellm_client.py",
          24
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          121
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          130
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          136
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          141
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          175
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          356
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          556
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          659
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/metrics.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/metrics.py",
          198
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/manager.py",
          61
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
          35
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
          87
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
          145
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          33
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          55
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          81
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          121
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          152
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
          78
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/dragonfly.py",
          19
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
          18
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          44
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          96
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          155
        ],
        [
          "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
          39
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          13
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          62
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          69
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          99
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          141
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          173
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
          147
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/layered_memory.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
          36
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          160
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          64
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          115
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          81
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          130
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          43
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          86
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          209
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
          27
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
          281
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/message_handler_mixin.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          39
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          96
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/messaging_agent.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
          107
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
          291
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          27
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          91
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          132
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          40
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py",
          33
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
          31
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
          31
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
          196
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          65
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          153
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          33
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          86
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/executor.py",
          15
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          35
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          120
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py",
          23
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
          29
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_agent_conductor.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/message_queue.py",
          41
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
          36
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
          38
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
          62
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          48
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          89
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
          95
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
          114
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
          122
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py",
          44
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py",
          14
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
          27
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
          61
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
          96
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
          197
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/pubsub_agent_example.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          19
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          48
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
          72
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          170
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          259
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          84
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          238
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          603
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          121
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          104
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          341
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          80
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
          74
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
          84
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
          49
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/parsers/slack_parser.py",
          29
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/storage/postgres_adapter.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          42
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          92
        ],
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          35
        ],
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          100
        ],
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          194
        ],
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          387
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          55
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          87
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          333
        ],
        [
          "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
          13
        ],
        [
          "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
          13
        ],
        [
          "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
          6
        ],
        [
          "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
          10
        ],
        [
          "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py",
          9
        ],
        [
          "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
          30
        ],
        [
          "/root/cherry_ai-main/infra/components/postgres_component.py",
          40
        ],
        [
          "/root/cherry_ai-main/infra/components/vultr_server_component.py",
          9
        ],
        [
          "/root/cherry_ai-main/infra/components/weaviate_component.py",
          35
        ],
        [
          "/root/cherry_ai-main/infra/components/database_component.py",
          11
        ],
        [
          "/root/cherry_ai-main/infra/components/litellm_component.py",
          15
        ],
        [
          "/root/cherry_ai-main/infra/components/ingress_component.py",
          15
        ],
        [
          "/root/cherry_ai-main/infra/components/monitoring_component.py",
          15
        ],
        [
          "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
          39
        ],
        [
          "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
          77
        ],
        [
          "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
          21
        ],
        [
          "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py",
          9
        ],
        [
          "/root/cherry_ai-main/packages/agents/base.py",
          22
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          52
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          164
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          385
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          597
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          71
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          289
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
          6
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
          63
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
          35
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
          38
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/langchain_agent.py",
          27
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/phidata_agent.py",
          25
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/routing.py",
          23
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/_base.py",
          34
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/registry.py",
          35
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
          31
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          51
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          398
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          128
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          185
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          36
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          372
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          361
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
          102
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
          202
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
          300
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
          305
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
          30
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
          58
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
          32
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/deployment_server.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
          67
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/tools_server.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          57
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
          29
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
          49
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          135
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          58
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          57
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/performance_memory_manager.py",
          46
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          166
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/roo_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
          45
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/portkey_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/codex_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
          34
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
          50
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/openrouter_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
          24
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/cursor_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/openai_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          42
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          134
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/claude_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/grok_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/deepseek_adapter.py",
          16
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          35
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          82
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          115
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          159
        ],
        [
          "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py",
          20
        ],
        [
          "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
          47
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
          79
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
          376
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
          29
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          134
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/transitions.py",
          60
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
          35
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          22
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py",
          27
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_adapter.py",
          28
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
          22
        ],
        [
          "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/adapters/gemini_adapter.py",
          27
        ],
        [
          "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
          33
        ],
        [
          "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
          32
        ],
        [
          "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
          41
        ],
        [
          "/root/cherry_ai-main/src/search_engine/search_router.py",
          21
        ],
        [
          "/root/cherry_ai-main/src/search_engine/creative_search.py",
          26
        ],
        [
          "/root/cherry_ai-main/src/search_engine/deep_search.py",
          28
        ],
        [
          "/root/cherry_ai-main/src/search_engine/normal_search.py",
          24
        ],
        [
          "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
          29
        ],
        [
          "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
          27
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
          26
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
          32
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          30
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
          34
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          33
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
          50
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
          44
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
          42
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          193
        ],
        [
          "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
          28
        ],
        [
          "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
          61
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
          29
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
          51
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
          168
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
          266
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
          346
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
          84
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
          56
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          23
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          43
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          153
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
          86
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          102
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          159
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          259
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          307
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          624
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          41
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          113
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          156
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          229
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          36
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          60
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          130
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          166
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          48
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          68
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          120
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          172
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          232
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          486
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          586
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          111
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          162
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          228
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          314
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          382
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          408
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          434
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          546
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
          50
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
          52
        ],
        [
          "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
          30
        ],
        [
          "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
          29
        ],
        [
          "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
          30
        ],
        [
          "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
          29
        ],
        [
          "/root/cherry_ai-main/ai_components/design/design_conductor.py",
          38
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
          40
        ],
        [
          "/root/cherry_ai-main/agent/app/services/real_agents.py",
          16
        ],
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          77
        ],
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          137
        ],
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          351
        ],
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          583
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          86
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          126
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          51
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          88
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          154
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          194
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
          61
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          19
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          116
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
          18
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
          56
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
          528
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
          33
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
          42
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/query_agent.py",
          30
        ]
      ],
      "count": 587
    },
    {
      "name": "check_environment",
      "locations": [
        [
          "/root/cherry_ai-main/verify_factory_ai_connection.py",
          13
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          49
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
          35
        ]
      ],
      "count": 3
    },
    {
      "name": "scan_directory",
      "locations": [
        [
          "/root/cherry_ai-main/scan_github_workflows.py",
          270
        ],
        [
          "/root/cherry_ai-main/scan_for_hardcoded_values.py",
          150
        ],
        [
          "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
          339
        ]
      ],
      "count": 3
    },
    {
      "name": "with_retry",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          396
        ],
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          144
        ]
      ],
      "count": 2
    },
    {
      "name": "to_dict",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          71
        ],
        [
          "/root/cherry_ai-main/scripts/ml_model_registry.py",
          26
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          159
        ],
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          40
        ],
        [
          "/root/cherry_ai-main/scripts/metrics_pipeline.py",
          26
        ],
        [
          "/root/cherry_ai-main/.factory/context.py",
          33
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          96
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          403
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          47
        ],
        [
          "/root/cherry_ai-main/core/shared/utils.py",
          44
        ],
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          89
        ],
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          122
        ],
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          160
        ],
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          220
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          63
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          110
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          86
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
          48
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
          50
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
          50
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          33
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          65
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          52
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          149
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
          62
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          66
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          111
        ],
        [
          "/root/cherry_ai-main/agent/app/services/real_agents.py",
          28
        ]
      ],
      "count": 30
    },
    {
      "name": "__str__",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          89
        ],
        [
          "/root/cherry_ai-main/code_analysis.py",
          74
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          80
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          34
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          62
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          398
        ]
      ],
      "count": 6
    },
    {
      "name": "decorator",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          123
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          201
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          427
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          503
        ],
        [
          "/root/cherry_ai-main/test_mcp_system.py",
          24
        ],
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          161
        ],
        [
          "/root/cherry_ai-main/utils.py",
          16
        ],
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          211
        ],
        [
          "/root/cherry_ai-main/shared/retry_utils.py",
          7
        ],
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          431
        ],
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          61
        ],
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          100
        ],
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          125
        ],
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          152
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          165
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          268
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          408
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/loader.py",
          42
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          67
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
          433
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
          268
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          157
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          193
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          136
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
          664
        ]
      ],
      "count": 25
    },
    {
      "name": "load_config",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          606
        ],
        [
          "/root/cherry_ai-main/mcp_server/run_optimized_server.py",
          35
        ],
        [
          "/root/cherry_ai-main/core/shared/utils.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
          64
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/loader.py",
          156
        ]
      ],
      "count": 5
    },
    {
      "name": "wrapper",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          135
        ],
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          429
        ],
        [
          "/root/cherry_ai-main/utils.py",
          18
        ],
        [
          "/root/cherry_ai-main/shared/retry_utils.py",
          9
        ],
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          433
        ],
        [
          "/root/cherry_ai-main/core/shared/error_handler.py",
          46
        ],
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          154
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/loader.py",
          46
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          69
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
          270
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          228
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          161
        ]
      ],
      "count": 13
    },
    {
      "name": "parse_args",
      "locations": [
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          788
        ],
        [
          "/root/cherry_ai-main/mcp_cli.py",
          60
        ],
        [
          "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
          53
        ],
        [
          "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
          43
        ]
      ],
      "count": 4
    },
    {
      "name": "run",
      "locations": [
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          104
        ],
        [
          "/root/cherry_ai-main/simple_mcp.py",
          186
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration_check.py",
          243
        ],
        [
          "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py",
          24
        ],
        [
          "/root/cherry_ai-main/scripts/final_cleanup.py",
          146
        ],
        [
          "/root/cherry_ai-main/scripts/deep_cleanup.py",
          170
        ],
        [
          "/root/cherry_ai-main/scripts/deploy_admin_ui.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          245
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
          826
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          310
        ],
        [
          "/root/cherry_ai-main/packages/agents/tool_agent_example.py",
          9
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
          101
        ]
      ],
      "count": 14
    },
    {
      "name": "_generate_summary",
      "locations": [
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          528
        ],
        [
          "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
          463
        ],
        [
          "/root/cherry_ai-main/scripts/test_design_system.py",
          321
        ]
      ],
      "count": 3
    },
    {
      "name": "generate_report",
      "locations": [
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          579
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_final.py",
          344
        ],
        [
          "/root/cherry_ai-main/scripts/mcp_integration_check.py",
          189
        ],
        [
          "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
          300
        ],
        [
          "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
          289
        ],
        [
          "/root/cherry_ai-main/scripts/update_github_secrets.py",
          113
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          534
        ],
        [
          "/root/cherry_ai-main/scripts/performance_test.py",
          397
        ],
        [
          "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
          278
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
          669
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
          262
        ],
        [
          "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
          332
        ],
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          374
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
          263
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
          174
        ],
        [
          "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
          495
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          294
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py",
          317
        ]
      ],
      "count": 18
    },
    {
      "name": "save_report",
      "locations": [
        [
          "/root/cherry_ai-main/quick_verify_admin_ui.py",
          751
        ],
        [
          "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
          375
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
          256
        ]
      ],
      "count": 3
    },
    {
      "name": "find_python_files",
      "locations": [
        [
          "/root/cherry_ai-main/code_analysis.py",
          285
        ],
        [
          "/root/cherry_ai-main/scripts/validate_syntax.py",
          24
        ],
        [
          "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
          41
        ]
      ],
      "count": 3
    },
    {
      "name": "analyze_file",
      "locations": [
        [
          "/root/cherry_ai-main/code_analysis.py",
          299
        ],
        [
          "/root/cherry_ai-main/scripts/deep_cleanup.py",
          61
        ]
      ],
      "count": 2
    },
    {
      "name": "_calculate_complexity",
      "locations": [
        [
          "/root/cherry_ai-main/code_analysis.py",
          218
        ],
        [
          "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
          364
        ]
      ],
      "count": 2
    },
    {
      "name": "analyze",
      "locations": [
        [
          "/root/cherry_ai-main/code_analysis.py",
          264
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          54
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          272
        ]
      ],
      "count": 3
    },
    {
      "name": "test",
      "locations": [
        [
          "/root/cherry_ai-main/test_mcp_system.py",
          21
        ],
        [
          "/root/cherry_ai-main/scripts/test_integration_complete.py",
          16
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          484
        ]
      ],
      "count": 3
    },
    {
      "name": "__new__",
      "locations": [
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          52
        ],
        [
          "/root/cherry_ai-main/shared/database/connection_manager.py",
          29
        ]
      ],
      "count": 2
    },
    {
      "name": "get_pool",
      "locations": [
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          66
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          171
        ]
      ],
      "count": 2
    },
    {
      "name": "print_results",
      "locations": [
        [
          "/root/cherry_ai-main/scan_for_hardcoded_values.py",
          190
        ],
        [
          "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
          193
        ]
      ],
      "count": 2
    },
    {
      "name": "retry",
      "locations": [
        [
          "/root/cherry_ai-main/utils.py",
          13
        ],
        [
          "/root/cherry_ai-main/shared/retry_utils.py",
          6
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          238
        ]
      ],
      "count": 3
    },
    {
      "name": "get_vultr_project_id",
      "locations": [
        [
          "/root/cherry_ai-main/utils.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/config/settings_vultr.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "setup_logging",
      "locations": [
        [
          "/root/cherry_ai-main/utils.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/logging_config.py",
          60
        ],
        [
          "/root/cherry_ai-main/core/shared/main_utils.py",
          8
        ],
        [
          "/root/cherry_ai-main/core/personas/example_usage.py",
          16
        ]
      ],
      "count": 4
    },
    {
      "name": "_load_state",
      "locations": [
        [
          "/root/cherry_ai-main/migration_conductor.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          105
        ],
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          34
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          183
        ],
        [
          "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
          34
        ]
      ],
      "count": 5
    },
    {
      "name": "_save_state",
      "locations": [
        [
          "/root/cherry_ai-main/migration_conductor.py",
          54
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          128
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          212
        ]
      ],
      "count": 3
    },
    {
      "name": "status",
      "locations": [
        [
          "/root/cherry_ai-main/migration_conductor.py",
          443
        ],
        [
          "/root/cherry_ai-main/simple_mcp.py",
          134
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          684
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          446
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          231
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          667
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          482
        ]
      ],
      "count": 7
    },
    {
      "name": "rollback",
      "locations": [
        [
          "/root/cherry_ai-main/migration_conductor.py",
          455
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          673
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
          238
        ]
      ],
      "count": 3
    },
    {
      "name": "_load_memory",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          37
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          51
        ]
      ],
      "count": 2
    },
    {
      "name": "get",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          54
        ],
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          106
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          368
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          404
        ],
        [
          "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
          87
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          42
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          76
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          147
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          180
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          553
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          556
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          558
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          71
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          114
        ]
      ],
      "count": 16
    },
    {
      "name": "set",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          73
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          256
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          54
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          43
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          81
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          151
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          183
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          155
        ]
      ],
      "count": 8
    },
    {
      "name": "delete",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          94
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          372
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          415
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          46
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          44
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          85
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          155
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          186
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
          22
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          75
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          204
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          95
        ]
      ],
      "count": 13
    },
    {
      "name": "_configure_routes",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          130
        ],
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          218
        ]
      ],
      "count": 2
    },
    {
      "name": "get_memory",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          143
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          520
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          177
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          72
        ]
      ],
      "count": 4
    },
    {
      "name": "delete_memory",
      "locations": [
        [
          "/root/cherry_ai-main/simple_mcp.py",
          174
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          572
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          150
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          80
        ]
      ],
      "count": 4
    },
    {
      "name": "create_context",
      "locations": [
        [
          "/root/cherry_ai-main/examples/simplified_agent_example.py",
          56
        ],
        [
          "/root/cherry_ai-main/.factory/context.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
          190
        ]
      ],
      "count": 3
    },
    {
      "name": "check_environment_variables",
      "locations": [
        [
          "/root/cherry_ai-main/examples/memory_management_integration.py",
          180
        ],
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          60
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          143
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
          104
        ]
      ],
      "count": 4
    },
    {
      "name": "_should_attempt_reset",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          88
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          91
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          60
        ]
      ],
      "count": 3
    },
    {
      "name": "_on_success",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          158
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          116
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          97
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          66
        ]
      ],
      "count": 4
    },
    {
      "name": "_on_failure",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          171
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          124
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          102
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          71
        ]
      ],
      "count": 4
    },
    {
      "name": "get_metrics",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          184
        ],
        [
          "/root/cherry_ai-main/core/connection_manager.py",
          218
        ],
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          173
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          158
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          290
        ],
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          450
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          368
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          681
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          919
        ],
        [
          "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
          350
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          84
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          342
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          268
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          292
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          458
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
          635
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
          774
        ]
      ],
      "count": 17
    },
    {
      "name": "reset",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          194
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          90
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          69
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          425
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          142
        ]
      ],
      "count": 5
    },
    {
      "name": "get_health_status",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          290
        ],
        [
          "/root/cherry_ai-main/scripts/version_monitor.py",
          486
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
          181
        ]
      ],
      "count": 3
    },
    {
      "name": "sync_wrapper",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          222
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          205
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          332
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          456
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          288
        ]
      ],
      "count": 5
    },
    {
      "name": "can_write_file",
      "locations": [
        [
          "/root/cherry_ai-main/core/mode_manager.py",
          66
        ],
        [
          "/root/cherry_ai-main/core/mode_manager.py",
          239
        ]
      ],
      "count": 2
    },
    {
      "name": "get_settings",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          114
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          125
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          189
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings_clean.py",
          107
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/config.py",
          128
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings.py",
          127
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/loader.py",
          236
        ]
      ],
      "count": 7
    },
    {
      "name": "get_router_config",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          123
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          129
        ]
      ],
      "count": 2
    },
    {
      "name": "validate_database_url",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          67
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          77
        ]
      ],
      "count": 2
    },
    {
      "name": "validate_api_keys",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          85
        ]
      ],
      "count": 2
    },
    {
      "name": "to_router_config",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          84
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          95
        ]
      ],
      "count": 2
    },
    {
      "name": "signal_handler",
      "locations": [
        [
          "/root/cherry_ai-main/core/main.py",
          226
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          479
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          251
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          354
        ]
      ],
      "count": 4
    },
    {
      "name": "get_logger",
      "locations": [
        [
          "/root/cherry_ai-main/core/logging_config.py",
          107
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          382
        ]
      ],
      "count": 2
    },
    {
      "name": "format",
      "locations": [
        [
          "/root/cherry_ai-main/core/logging_config.py",
          15
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          49
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          35
        ]
      ],
      "count": 3
    },
    {
      "name": "__post_init__",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          46
        ],
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          85
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          46
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          70
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
          41
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          49
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          64
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
          36
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
          47
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          35
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          60
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          87
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          44
        ]
      ],
      "count": 16
    },
    {
      "name": "calculate_update_priority",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          77
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          141
        ]
      ],
      "count": 2
    },
    {
      "name": "_parse_requirement",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          252
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          235
        ]
      ],
      "count": 2
    },
    {
      "name": "_generate_recommendations",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          460
        ],
        [
          "/root/cherry_ai-main/scripts/system_validation.py",
          872
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          583
        ],
        [
          "/root/cherry_ai-main/scripts/system_preparedness.py",
          562
        ]
      ],
      "count": 4
    },
    {
      "name": "log",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
          31
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
          32
        ],
        [
          "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
          27
        ]
      ],
      "count": 4
    },
    {
      "name": "run_command",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
          42
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai.py",
          52
        ],
        [
          "/root/cherry_ai-main/scripts/check_pre_commit_status.py",
          8
        ],
        [
          "/root/cherry_ai-main/scripts/fix_coordination_config.py",
          17
        ],
        [
          "/root/cherry_ai-main/scripts/pip_forever_fix.py",
          13
        ],
        [
          "/root/cherry_ai-main/scripts/test_infrastructure.py",
          13
        ],
        [
          "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
          34
        ]
      ],
      "count": 8
    },
    {
      "name": "check_prerequisites",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
          64
        ],
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          237
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
          32
        ]
      ],
      "count": 3
    },
    {
      "name": "setup_monitoring",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
          233
        ],
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          217
        ]
      ],
      "count": 2
    },
    {
      "name": "_load_local_secrets",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          53
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "get_database_url",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          117
        ],
        [
          "/root/cherry_ai-main/agent/app/core/config.py",
          72
        ]
      ],
      "count": 2
    },
    {
      "name": "save_to_env_file",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          132
        ],
        [
          "/root/cherry_ai-main/scripts/setup_api_keys.py",
          50
        ]
      ],
      "count": 2
    },
    {
      "name": "setup_database",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
          187
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
          30
        ]
      ],
      "count": 2
    },
    {
      "name": "get_installed_packages",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/check_dependencies.py",
          9
        ],
        [
          "/root/cherry_ai-main/scripts/pip_forever_fix.py",
          18
        ]
      ],
      "count": 2
    },
    {
      "name": "check_dependencies",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/check_dependencies.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          117
        ]
      ],
      "count": 2
    },
    {
      "name": "check_mcp_configuration",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/mcp_integration_check.py",
          86
        ],
        [
          "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
          35
        ]
      ],
      "count": 2
    },
    {
      "name": "generate_recommendations",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/architecture_analyzer.py",
          240
        ],
        [
          "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
          258
        ],
        [
          "/root/cherry_ai-main/scripts/setup_advanced_caching.py",
          302
        ],
        [
          "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
          239
        ]
      ],
      "count": 4
    },
    {
      "name": "run_analysis",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/architecture_analyzer.py",
          328
        ],
        [
          "/root/cherry_ai-main/scripts/update_github_secrets.py",
          195
        ],
        [
          "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
          429
        ],
        [
          "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
          414
        ]
      ],
      "count": 4
    },
    {
      "name": "validate_all",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/personas/manager.py",
          317
        ]
      ],
      "count": 2
    },
    {
      "name": "start_postgresql",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
          55
        ],
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          41
        ]
      ],
      "count": 2
    },
    {
      "name": "start_redis",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
          85
        ],
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          54
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          91
        ]
      ],
      "count": 3
    },
    {
      "name": "print_status",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          23
        ],
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          20
        ]
      ],
      "count": 2
    },
    {
      "name": "print_header",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          29
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          41
        ],
        [
          "/root/cherry_ai-main/tools/mode_system_initializer.py",
          43
        ],
        [
          "/root/cherry_ai-main/tools/mode_switcher.py",
          44
        ]
      ],
      "count": 4
    },
    {
      "name": "check_env_var",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          35
        ],
        [
          "/root/cherry_ai-main/scripts/check_env_config.py",
          72
        ]
      ],
      "count": 2
    },
    {
      "name": "test_weaviate_connection",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          70
        ],
        [
          "/root/cherry_ai-main/scripts/smoke_tests.py",
          95
        ]
      ],
      "count": 2
    },
    {
      "name": "check_port",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          39
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
          69
        ]
      ],
      "count": 2
    },
    {
      "name": "check_service_health",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          49
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          48
        ]
      ],
      "count": 2
    },
    {
      "name": "connect_to_weaviate",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
          88
        ],
        [
          "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
          63
        ]
      ],
      "count": 2
    },
    {
      "name": "validate_setup",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py",
          261
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
          523
        ]
      ],
      "count": 2
    },
    {
      "name": "check_python_version",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cherry_ai.py",
          36
        ],
        [
          "/root/cherry_ai-main/scripts/review_ai_context.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          25
        ]
      ],
      "count": 3
    },
    {
      "name": "check_venv",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cherry_ai.py",
          44
        ],
        [
          "/root/cherry_ai-main/scripts/validate_environment.py",
          19
        ]
      ],
      "count": 2
    },
    {
      "name": "cli",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          641
        ],
        [
          "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          34
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          134
        ]
      ],
      "count": 3
    },
    {
      "name": "execute",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          661
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          118
        ],
        [
          "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
          47
        ]
      ],
      "count": 3
    },
    {
      "name": "validate",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          690
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          217
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          90
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          147
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          181
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          218
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          251
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          298
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          98
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
          49
        ]
      ],
      "count": 11
    },
    {
      "name": "_calculate_critical_path",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/next_phase_conductor.py",
          108
        ],
        [
          "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
          364
        ]
      ],
      "count": 2
    },
    {
      "name": "update_conductor_config",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
          48
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
          89
        ]
      ],
      "count": 2
    },
    {
      "name": "_display_summary",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/system_validation.py",
          925
        ],
        [
          "/root/cherry_ai-main/scripts/system_preparedness.py",
          667
        ]
      ],
      "count": 2
    },
    {
      "name": "check_service",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/health_check.py",
          7
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_status.py",
          11
        ],
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          28
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_system_status.py",
          13
        ]
      ],
      "count": 4
    },
    {
      "name": "parse",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          56
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          102
        ]
      ],
      "count": 2
    },
    {
      "name": "__lt__",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          89
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          117
        ]
      ],
      "count": 2
    },
    {
      "name": "get_component_type",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          183
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          190
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          297
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          351
        ]
      ],
      "count": 4
    },
    {
      "name": "save",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          46
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          364
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          392
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          67
        ]
      ],
      "count": 4
    },
    {
      "name": "create_vpc",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
          133
        ],
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          72
        ]
      ],
      "count": 2
    },
    {
      "name": "start_server",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/start_mcp_servers.py",
          14
        ],
        [
          "/root/cherry_ai-main/tools/llm_test_server/main.py",
          520
        ]
      ],
      "count": 2
    },
    {
      "name": "_load_config",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          94
        ],
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          88
        ],
        [
          "/root/cherry_ai-main/scripts/metrics_pipeline.py",
          46
        ],
        [
          "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
          649
        ],
        [
          "/root/cherry_ai-main/.factory/context.py",
          74
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          388
        ]
      ],
      "count": 6
    },
    {
      "name": "start",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          404
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          134
        ]
      ],
      "count": 2
    },
    {
      "name": "stop",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          429
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          144
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          210
        ]
      ],
      "count": 3
    },
    {
      "name": "suggest_mode",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
          20
        ],
        [
          "/root/cherry_ai-main/scripts/auto_mode_selector.py",
          18
        ]
      ],
      "count": 2
    },
    {
      "name": "execute_workflow",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
          43
        ],
        [
          "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py",
          70
        ]
      ],
      "count": 2
    },
    {
      "name": "print_section",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/live_integration_demo.py",
          24
        ],
        [
          "/root/cherry_ai-main/scripts/how_to_use_roo_conductor.py",
          10
        ],
        [
          "/root/cherry_ai-main/scripts/check_env_config.py",
          88
        ]
      ],
      "count": 3
    },
    {
      "name": "can_execute",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/live_integration_demo.py",
          280
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          106
        ]
      ],
      "count": 2
    },
    {
      "name": "configure_services",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
          90
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
          105
        ]
      ],
      "count": 2
    },
    {
      "name": "get_docker_containers",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
          93
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_system_status.py",
          27
        ]
      ],
      "count": 2
    },
    {
      "name": "start_mcp_servers",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
          91
        ],
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          155
        ]
      ],
      "count": 2
    },
    {
      "name": "_calculate_health_score",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/agent_health_monitor.py",
          170
        ],
        [
          "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py",
          95
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
          319
        ]
      ],
      "count": 3
    },
    {
      "name": "get_name",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
          135
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/roo_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/portkey_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/codex_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/openrouter_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/cursor_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/openai_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/claude_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/grok_adapter.py",
          19
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/deepseek_adapter.py",
          19
        ]
      ],
      "count": 10
    },
    {
      "name": "load_configurations",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
          143
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          116
        ]
      ],
      "count": 2
    },
    {
      "name": "_update_metrics",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/ai_system_conductor.py",
          363
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          897
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
          768
        ]
      ],
      "count": 3
    },
    {
      "name": "get_system_metrics",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/ai_system_conductor.py",
          425
        ],
        [
          "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
          146
        ]
      ],
      "count": 2
    },
    {
      "name": "from_dict",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          47
        ],
        [
          "/root/cherry_ai-main/.factory/context.py",
          47
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          119
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          389
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          86
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          63
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          169
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          82
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          126
        ]
      ],
      "count": 9
    },
    {
      "name": "load_persona",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          207
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          163
        ]
      ],
      "count": 2
    },
    {
      "name": "get_persona",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          219
        ],
        [
          "/root/cherry_ai-main/core/personas/manager.py",
          210
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          220
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          94
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          134
        ]
      ],
      "count": 5
    },
    {
      "name": "list_personas",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          246
        ],
        [
          "/root/cherry_ai-main/core/personas/manager.py",
          228
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          151
        ]
      ],
      "count": 3
    },
    {
      "name": "create_connection",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/configure_airbyte.py",
          98
        ],
        [
          "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
          56
        ]
      ],
      "count": 2
    },
    {
      "name": "test_database",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/test_integration_complete.py",
          28
        ],
        [
          "/root/cherry_ai-main/scripts/test_coordination_setup.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "run_all_tests",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/test_integration_complete.py",
          109
        ],
        [
          "/root/cherry_ai-main/scripts/smoke_tests.py",
          195
        ]
      ],
      "count": 2
    },
    {
      "name": "test_database_connection",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/test_api_connections.py",
          18
        ],
        [
          "/root/cherry_ai-main/scripts/smoke_tests.py",
          63
        ]
      ],
      "count": 2
    },
    {
      "name": "cleanup",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/verify_local_deployment.py",
          225
        ],
        [
          "/root/cherry_ai-main/core/security/credential_manager.py",
          224
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py",
          251
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
          282
        ]
      ],
      "count": 4
    },
    {
      "name": "transient_file",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          406
        ],
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          129
        ]
      ],
      "count": 2
    },
    {
      "name": "register_for_cleanup",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/cleanup_engine.py",
          413
        ],
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "check_required_files",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          41
        ],
        [
          "/root/cherry_ai-main/tools/mode_system_initializer.py",
          84
        ]
      ],
      "count": 2
    },
    {
      "name": "check_directory_structure",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/verify_environment.py",
          156
        ],
        [
          "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
          51
        ]
      ],
      "count": 2
    },
    {
      "name": "get_circuit_breaker",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          163
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          581
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          460
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          450
        ]
      ],
      "count": 4
    },
    {
      "name": "get_service_health",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          371
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          511
        ]
      ],
      "count": 2
    },
    {
      "name": "update_file",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/fix_python_version_permanently.py",
          122
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
          45
        ]
      ],
      "count": 2
    },
    {
      "name": "agent",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_specialized_agents.py",
          27
        ],
        [
          "/root/cherry_ai-main/tests/test_specialized_agents.py",
          131
        ],
        [
          "/root/cherry_ai-main/tests/test_specialized_agents.py",
          217
        ]
      ],
      "count": 3
    },
    {
      "name": "router",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          90
        ],
        [
          "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
          127
        ]
      ],
      "count": 2
    },
    {
      "name": "conductor",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_agent_conductor.py",
          95
        ],
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          459
        ],
        [
          "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          54
        ]
      ],
      "count": 3
    },
    {
      "name": "_verify_connection",
      "locations": [
        [
          "/root/cherry_ai-main/infra/mcp_server.py",
          42
        ],
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          72
        ]
      ],
      "count": 2
    },
    {
      "name": "get_context",
      "locations": [
        [
          "/root/cherry_ai-main/.factory/context.py",
          120
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
          69
        ]
      ],
      "count": 2
    },
    {
      "name": "_validate_config",
      "locations": [
        [
          "/root/cherry_ai-main/deploy/superagi_config.py",
          31
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          234
        ]
      ],
      "count": 2
    },
    {
      "name": "is_expired",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          143
        ],
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          72
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          142
        ]
      ],
      "count": 3
    },
    {
      "name": "update_access",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          148
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          40
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          147
        ]
      ],
      "count": 3
    },
    {
      "name": "compute_hash",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          153
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          45
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          152
        ]
      ],
      "count": 3
    },
    {
      "name": "update_hash",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          158
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          157
        ]
      ],
      "count": 2
    },
    {
      "name": "compress",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          166
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          93
        ]
      ],
      "count": 3
    },
    {
      "name": "decompress",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          240
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
          272
        ]
      ],
      "count": 2
    },
    {
      "name": "estimate_tokens",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          274
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          41
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
          313
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          30
        ]
      ],
      "count": 4
    },
    {
      "name": "can_fit_entry",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          282
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          91
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          60
        ]
      ],
      "count": 3
    },
    {
      "name": "add_entry",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          290
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          108
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          68
        ]
      ],
      "count": 3
    },
    {
      "name": "remove_entry",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          299
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          127
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          77
        ]
      ],
      "count": 3
    },
    {
      "name": "get_available_budget",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          304
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          142
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          82
        ]
      ],
      "count": 3
    },
    {
      "name": "list_keys",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          376
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          429
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          104
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          79
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          107
        ]
      ],
      "count": 5
    },
    {
      "name": "get_by_hash",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          380
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          433
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          83
        ]
      ],
      "count": 3
    },
    {
      "name": "create_memory",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          481
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          68
        ]
      ],
      "count": 2
    },
    {
      "name": "update_memory",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          499
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          126
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          76
        ]
      ],
      "count": 3
    },
    {
      "name": "optimize_context_window",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          703
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          88
        ]
      ],
      "count": 2
    },
    {
      "name": "get_memory_status",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          746
        ],
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          93
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          92
        ]
      ],
      "count": 3
    },
    {
      "name": "health_check",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/health_check.py",
          17
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          378
        ],
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          382
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          91
        ],
        [
          "/root/cherry_ai-main/tools/llm_test_server/main.py",
          386
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          93
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          137
        ]
      ],
      "count": 7
    },
    {
      "name": "get_memory_stats",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          81
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          204
        ]
      ],
      "count": 2
    },
    {
      "name": "store",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          37
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
          15
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          70
        ]
      ],
      "count": 3
    },
    {
      "name": "retrieve",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          42
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          83
        ]
      ],
      "count": 2
    },
    {
      "name": "get_stats",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          53
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          276
        ]
      ],
      "count": 2
    },
    {
      "name": "register_tool",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
          70
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          181
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          240
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          175
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          204
        ]
      ],
      "count": 6
    },
    {
      "name": "update_agent_config",
      "locations": [
        [
          "/root/cherry_ai-main/tools/update_phidata_configs.py",
          39
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_control.py",
          16
        ]
      ],
      "count": 2
    },
    {
      "name": "sync",
      "locations": [
        [
          "/root/cherry_ai-main/tools/cherry_ai_cli.py",
          150
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          234
        ]
      ],
      "count": 2
    },
    {
      "name": "_initialize_client",
      "locations": [
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          45
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
          55
        ]
      ],
      "count": 2
    },
    {
      "name": "close",
      "locations": [
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          131
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          386
        ],
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          393
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          131
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          183
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
          55
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          34
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          269
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          147
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          293
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          656
        ],
        [
          "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py",
          15
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          247
        ]
      ],
      "count": 14
    },
    {
      "name": "export_outputs",
      "locations": [
        [
          "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
          182
        ],
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          404
        ]
      ],
      "count": 2
    },
    {
      "name": "resource_name",
      "locations": [
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          22
        ],
        [
          "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
          23
        ]
      ],
      "count": 2
    },
    {
      "name": "create_redis_cache",
      "locations": [
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          136
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
          57
        ]
      ],
      "count": 2
    },
    {
      "name": "create_object_storage",
      "locations": [
        [
          "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          345
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
          66
        ]
      ],
      "count": 2
    },
    {
      "name": "create",
      "locations": [
        [
          "/root/cherry_ai-main/shared/memory/memory_manager.py",
          184
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          162
        ]
      ],
      "count": 2
    },
    {
      "name": "authenticate",
      "locations": [
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          262
        ],
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          89
        ]
      ],
      "count": 2
    },
    {
      "name": "predict_text",
      "locations": [
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          277
        ],
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          183
        ]
      ],
      "count": 2
    },
    {
      "name": "predict_chat",
      "locations": [
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          290
        ],
        [
          "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
          215
        ]
      ],
      "count": 2
    },
    {
      "name": "register",
      "locations": [
        [
          "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          548
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          130
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          99
        ]
      ],
      "count": 6
    },
    {
      "name": "search",
      "locations": [
        [
          "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
          129
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          89
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          159
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          189
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          87
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          118
        ]
      ],
      "count": 7
    },
    {
      "name": "get_tool",
      "locations": [
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          198
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          75
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          244
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          200
        ]
      ],
      "count": 4
    },
    {
      "name": "list_tools",
      "locations": [
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          210
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          87
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          248
        ]
      ],
      "count": 3
    },
    {
      "name": "execute_tool",
      "locations": [
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          223
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          150
        ]
      ],
      "count": 2
    },
    {
      "name": "create_agent",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          44
        ],
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          74
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          260
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/registry.py",
          79
        ]
      ],
      "count": 4
    },
    {
      "name": "create_session",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          279
        ],
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          320
        ]
      ],
      "count": 2
    },
    {
      "name": "clear_cache",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          373
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
          410
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          123
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
          335
        ]
      ],
      "count": 4
    },
    {
      "name": "_prepare_data_object",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/weaviate_client.py",
          192
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
          350
        ]
      ],
      "count": 2
    },
    {
      "name": "get_database",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          407
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          709
        ]
      ],
      "count": 2
    },
    {
      "name": "_ensure_schema",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          60
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          184
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          241
        ]
      ],
      "count": 3
    },
    {
      "name": "get_agent",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          98
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          181
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          94
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          342
        ]
      ],
      "count": 4
    },
    {
      "name": "list_agents",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          107
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          346
        ]
      ],
      "count": 2
    },
    {
      "name": "get_workflow",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          185
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          403
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          351
        ]
      ],
      "count": 3
    },
    {
      "name": "list_workflows",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/postgresql_client.py",
          194
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          355
        ]
      ],
      "count": 2
    },
    {
      "name": "supported_formats",
      "locations": [
        [
          "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
          195
        ],
        [
          "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
          446
        ]
      ],
      "count": 2
    },
    {
      "name": "get_config",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/config.py",
          458
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          346
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
          206
        ]
      ],
      "count": 3
    },
    {
      "name": "handle_error",
      "locations": [
        [
          "/root/cherry_ai-main/core/shared/error_handler.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          83
        ]
      ],
      "count": 2
    },
    {
      "name": "validate_config",
      "locations": [
        [
          "/root/cherry_ai-main/core/shared/utils.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          106
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          141
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          181
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          209
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          236
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          261
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/config.py",
          168
        ]
      ],
      "count": 9
    },
    {
      "name": "__enter__",
      "locations": [
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          250
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          370
        ]
      ],
      "count": 2
    },
    {
      "name": "__exit__",
      "locations": [
        [
          "/root/cherry_ai-main/core/utils/file_management.py",
          260
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
          378
        ]
      ],
      "count": 2
    },
    {
      "name": "get_router",
      "locations": [
        [
          "/root/cherry_ai-main/core/api/router_registry.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/llm/factory.py",
          25
        ]
      ],
      "count": 2
    },
    {
      "name": "get_project_id",
      "locations": [
        [
          "/root/cherry_ai-main/core/security/credential_manager.py",
          190
        ],
        [
          "/root/cherry_ai-main/core/config/settings_vultr.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py",
          89
        ]
      ],
      "count": 3
    },
    {
      "name": "_get_connection",
      "locations": [
        [
          "/root/cherry_ai-main/core/security/postgresql_secrets.py",
          18
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          113
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          172
        ]
      ],
      "count": 3
    },
    {
      "name": "test_get_persona_not_found",
      "locations": [
        [
          "/root/cherry_ai-main/core/personas/test_manager.py",
          197
        ],
        [
          "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
          138
        ]
      ],
      "count": 2
    },
    {
      "name": "get_llm_router",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          965
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          481
        ]
      ],
      "count": 2
    },
    {
      "name": "get_available_models",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          163
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          329
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          507
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          938
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
          310
        ]
      ],
      "count": 5
    },
    {
      "name": "_load_model_specs",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          184
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          368
        ]
      ],
      "count": 2
    },
    {
      "name": "_calculate_cost",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          341
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          542
        ]
      ],
      "count": 2
    },
    {
      "name": "_initialize_providers",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          680
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          86
        ]
      ],
      "count": 2
    },
    {
      "name": "_get_cache_key",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          884
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          267
        ]
      ],
      "count": 2
    },
    {
      "name": "load_config_from_file",
      "locations": [
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          410
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/loader.py",
          17
        ]
      ],
      "count": 2
    },
    {
      "name": "verify_api_key",
      "locations": [
        [
          "/root/cherry_ai-main/core/auth/simple_auth.py",
          15
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/admin.py",
          17
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
          55
        ]
      ],
      "count": 3
    },
    {
      "name": "_percentile",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/metrics.py",
          174
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/metrics.py",
          569
        ]
      ],
      "count": 2
    },
    {
      "name": "on_access",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          36
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          87
        ]
      ],
      "count": 3
    },
    {
      "name": "on_insert",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          40
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          64
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          100
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          125
        ]
      ],
      "count": 4
    },
    {
      "name": "get_eviction_candidate",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          44
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          68
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          106
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          129
        ]
      ],
      "count": 4
    },
    {
      "name": "remove",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          48
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          74
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          112
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          133
        ]
      ],
      "count": 4
    },
    {
      "name": "register_storage",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/factory.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
          239
        ]
      ],
      "count": 2
    },
    {
      "name": "register_service",
      "locations": [
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          159
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          550
        ]
      ],
      "count": 2
    },
    {
      "name": "get_service",
      "locations": [
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          167
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          191
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          194
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          196
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          554
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          158
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          133
        ]
      ],
      "count": 7
    },
    {
      "name": "is_production",
      "locations": [
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          166
        ],
        [
          "/root/cherry_ai-main/agent/app/core/config.py",
          86
        ]
      ],
      "count": 2
    },
    {
      "name": "is_development",
      "locations": [
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          171
        ],
        [
          "/root/cherry_ai-main/agent/app/core/config.py",
          90
        ]
      ],
      "count": 2
    },
    {
      "name": "log_error",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
          23
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          141
        ]
      ],
      "count": 2
    },
    {
      "name": "agent_type",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          98
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          127
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          142
        ]
      ],
      "count": 4
    },
    {
      "name": "capabilities",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          80
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          103
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          132
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          147
        ]
      ],
      "count": 4
    },
    {
      "name": "register_agent_type",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          165
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          70
        ]
      ],
      "count": 2
    },
    {
      "name": "select_agent_for_context",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          212
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          134
        ]
      ],
      "count": 2
    },
    {
      "name": "subscribe",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          68
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          134
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          104
        ]
      ],
      "count": 3
    },
    {
      "name": "unsubscribe",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          81
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
          144
        ],
        [
          "/root/cherry_ai-main/core/services/events/event_bus.py",
          139
        ]
      ],
      "count": 3
    },
    {
      "name": "create_app",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/main.py",
          65
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          319
        ]
      ],
      "count": 2
    },
    {
      "name": "get_memory_manager",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          234
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
          108
        ]
      ],
      "count": 2
    },
    {
      "name": "add_item",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          34
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          85
        ]
      ],
      "count": 2
    },
    {
      "name": "get_item",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          46
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          90
        ]
      ],
      "count": 2
    },
    {
      "name": "get_items",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          94
        ]
      ],
      "count": 2
    },
    {
      "name": "get_persona_manager",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          278
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/dependency.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          220
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
          29
        ]
      ],
      "count": 4
    },
    {
      "name": "format_response",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          251
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          132
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          241
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          109
        ]
      ],
      "count": 5
    },
    {
      "name": "_load_personas",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          98
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          170
        ]
      ],
      "count": 2
    },
    {
      "name": "get_all_personas",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          192
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          266
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          138
        ]
      ],
      "count": 3
    },
    {
      "name": "can_handle",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
          132
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
          339
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          151
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/messaging_agent.py",
          178
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
          210
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          161
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          240
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/examples/pubsub_agent_example.py",
          172
        ]
      ],
      "count": 8
    },
    {
      "name": "register_agent",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          47
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          337
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/routing.py",
          52
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          492
        ]
      ],
      "count": 4
    },
    {
      "name": "get_agent_status",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          195
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          528
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          571
        ]
      ],
      "count": 3
    },
    {
      "name": "initialize",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
          107
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          175
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          31
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
          51
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          128
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          254
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          619
        ],
        [
          "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py",
          12
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
          10
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          63
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          64
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
          66
        ]
      ],
      "count": 13
    },
    {
      "name": "add_memory_key",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
          63
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
          54
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/transitions.py",
          41
        ]
      ],
      "count": 3
    },
    {
      "name": "apply_style",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          13
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          27
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          33
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          39
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          51
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          64
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          70
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
          76
        ]
      ],
      "count": 10
    },
    {
      "name": "_record_failure",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          438
        ],
        [
          "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
          166
        ]
      ],
      "count": 2
    },
    {
      "name": "client",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
          212
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          40
        ],
        [
          "/root/cherry_ai-main/tests/core/conductor/api/test_query.py",
          15
        ]
      ],
      "count": 3
    },
    {
      "name": "reload_personas",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          161
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          283
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_loader.py",
          30
        ]
      ],
      "count": 3
    },
    {
      "name": "get_workflow_engine",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          461
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          394
        ]
      ],
      "count": 2
    },
    {
      "name": "register_workflow",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          82
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          346
        ]
      ],
      "count": 2
    },
    {
      "name": "get_instance",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          391
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          79
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          58
        ]
      ],
      "count": 3
    },
    {
      "name": "_llm_type",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          83
        ]
      ],
      "count": 2
    },
    {
      "name": "load_all_persona_configs",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/config/config.py",
          76
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings.py",
          75
        ]
      ],
      "count": 2
    },
    {
      "name": "get_persona_configs",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/config/config.py",
          137
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings.py",
          136
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_loader.py",
          18
        ]
      ],
      "count": 3
    },
    {
      "name": "get_memory_service",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
          87
        ],
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          770
        ]
      ],
      "count": 2
    },
    {
      "name": "get_service_registry",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          535
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          157
        ]
      ],
      "count": 2
    },
    {
      "name": "register_factory",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          566
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          164
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          562
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          136
        ]
      ],
      "count": 4
    },
    {
      "name": "get_required_service",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          229
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          558
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          190
        ]
      ],
      "count": 3
    },
    {
      "name": "unregister",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          249
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          210
        ]
      ],
      "count": 3
    },
    {
      "name": "has_service",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          278
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          239
        ]
      ],
      "count": 2
    },
    {
      "name": "initialize_all",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          361
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          80
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          342
        ]
      ],
      "count": 3
    },
    {
      "name": "close_all",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          465
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          101
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          467
        ]
      ],
      "count": 3
    },
    {
      "name": "_reset_registry",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          500
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          502
        ]
      ],
      "count": 2
    },
    {
      "name": "get_service_count",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          514
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          136
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          516
        ]
      ],
      "count": 3
    },
    {
      "name": "get_service_names",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          523
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          145
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          525
        ]
      ],
      "count": 3
    },
    {
      "name": "get_agent_conductor",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
          266
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          579
        ]
      ],
      "count": 2
    },
    {
      "name": "_init_openai",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
          111
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
          159
        ]
      ],
      "count": 2
    },
    {
      "name": "record_success",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          154
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          81
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          93
        ]
      ],
      "count": 3
    },
    {
      "name": "record_failure",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          170
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          92
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          98
        ]
      ],
      "count": 3
    },
    {
      "name": "provider_name",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          168
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          309
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          664
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          56
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          205
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          331
        ]
      ],
      "count": 6
    },
    {
      "name": "default_model",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          172
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          314
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          669
        ]
      ],
      "count": 3
    },
    {
      "name": "is_initialized",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          319
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          674
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
          247
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          61
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          210
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
          336
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
          271
        ]
      ],
      "count": 7
    },
    {
      "name": "__hash__",
      "locations": [
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          64
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          97
        ]
      ],
      "count": 2
    },
    {
      "name": "add_task",
      "locations": [
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          111
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
          250
        ]
      ],
      "count": 2
    },
    {
      "name": "should_promote",
      "locations": [
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          338
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          199
        ]
      ],
      "count": 2
    },
    {
      "name": "should_evict",
      "locations": [
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          346
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          204
        ]
      ],
      "count": 2
    },
    {
      "name": "select_layer",
      "locations": [
        [
          "/root/cherry_ai-main/core/services/memory/unified_memory.py",
          363
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          209
        ]
      ],
      "count": 2
    },
    {
      "name": "mock_memory_manager",
      "locations": [
        [
          "/root/cherry_ai-main/tests/mocks/memory_fixtures.py",
          15
        ],
        [
          "/root/cherry_ai-main/tests/services/test_memory_service.py",
          9
        ]
      ],
      "count": 2
    },
    {
      "name": "setup_tools",
      "locations": [
        [
          "/root/cherry_ai-main/packages/agents/base.py",
          36
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
          67
        ]
      ],
      "count": 2
    },
    {
      "name": "process_feedback",
      "locations": [
        [
          "/root/cherry_ai-main/packages/agents/base.py",
          57
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
          303
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
          361
        ]
      ],
      "count": 3
    },
    {
      "name": "shutdown",
      "locations": [
        [
          "/root/cherry_ai-main/packages/agents/base.py",
          66
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
          313
        ],
        [
          "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
          366
        ]
      ],
      "count": 3
    },
    {
      "name": "Field",
      "locations": [
        [
          "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
          20
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
          20
        ]
      ],
      "count": 2
    },
    {
      "name": "validate_expiration",
      "locations": [
        [
          "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
          158
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
          235
        ]
      ],
      "count": 2
    },
    {
      "name": "get_usage_stats",
      "locations": [
        [
          "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
          524
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          173
        ]
      ],
      "count": 2
    },
    {
      "name": "check_content",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          558
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          390
        ]
      ],
      "count": 2
    },
    {
      "name": "load_rules_from_file",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          568
        ],
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          192
        ]
      ],
      "count": 2
    },
    {
      "name": "matches",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
          425
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          67
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          104
        ]
      ],
      "count": 3
    },
    {
      "name": "cache_result",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          322
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          152
        ]
      ],
      "count": 2
    },
    {
      "name": "track_performance",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          330
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
          224
        ]
      ],
      "count": 2
    },
    {
      "name": "setup_handlers",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
          35
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
          71
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
          34
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/tools_server.py",
          45
        ]
      ],
      "count": 4
    },
    {
      "name": "_tx",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          270
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          319
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          345
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          362
        ]
      ],
      "count": 4
    },
    {
      "name": "tool_name",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          20
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          64
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          141
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
          38
        ]
      ],
      "count": 4
    },
    {
      "name": "context_window_size",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          69
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          146
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
          43
        ]
      ],
      "count": 4
    },
    {
      "name": "get_active_mode",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          335
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          194
        ]
      ],
      "count": 2
    },
    {
      "name": "set_active_mode",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          339
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          171
        ]
      ],
      "count": 2
    },
    {
      "name": "format_prompt",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          343
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
          220
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
          114
        ]
      ],
      "count": 3
    },
    {
      "name": "_map_method_to_action",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
          215
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
          205
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
          168
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
          191
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
          245
        ]
      ],
      "count": 5
    },
    {
      "name": "_get_mock_response",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
          297
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
          250
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
          208
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
          234
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
          264
        ]
      ],
      "count": 5
    },
    {
      "name": "load_config_from_env",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/adapters/config.py",
          106
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/loader.py",
          36
        ]
      ],
      "count": 2
    },
    {
      "name": "_get_full_key",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          254
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
          287
        ]
      ],
      "count": 2
    },
    {
      "name": "_create_chunks",
      "locations": [
        [
          "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          383
        ],
        [
          "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
          399
        ]
      ],
      "count": 2
    },
    {
      "name": "get_performance_metrics",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
          295
        ],
        [
          "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
          660
        ],
        [
          "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
          640
        ],
        [
          "/root/cherry_ai-main/ai_components/design/design_conductor.py",
          877
        ]
      ],
      "count": 4
    },
    {
      "name": "_ensure_tables",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          117
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          176
        ]
      ],
      "count": 2
    },
    {
      "name": "log_action",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          140
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          206
        ]
      ],
      "count": 2
    },
    {
      "name": "store_context",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          205
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          264
        ]
      ],
      "count": 2
    },
    {
      "name": "retrieve_context",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          228
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          287
        ]
      ],
      "count": 2
    },
    {
      "name": "_build_dependency_graph",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          733
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          754
        ]
      ],
      "count": 2
    },
    {
      "name": "_create_checkpoint",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          740
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          761
        ]
      ],
      "count": 2
    },
    {
      "name": "verify_token",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
          131
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/auth.py",
          76
        ]
      ],
      "count": 2
    },
    {
      "name": "get_capabilities",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          61
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          72
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          124
        ]
      ],
      "count": 3
    },
    {
      "name": "get_agent_metrics",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          791
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_control.py",
          21
        ]
      ],
      "count": 2
    },
    {
      "name": "_generate_mock_response",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
          551
        ],
        [
          "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
          727
        ]
      ],
      "count": 2
    },
    {
      "name": "_init_redis",
      "locations": [
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          95
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          150
        ]
      ],
      "count": 2
    },
    {
      "name": "load_model",
      "locations": [
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          26
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          119
        ]
      ],
      "count": 2
    },
    {
      "name": "predict",
      "locations": [
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          49
        ],
        [
          "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
          126
        ]
      ],
      "count": 2
    }
  ],
  "duplicate_classes": [
    {
      "name": "AgentType",
      "locations": [
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          33
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
          35
        ],
        [
          "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          31
        ]
      ],
      "count": 3
    },
    {
      "name": "TaskPriority",
      "locations": [
        [
          "/root/cherry_ai-main/web_scraping_ai_agents.py",
          51
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          31
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          67
        ]
      ],
      "count": 3
    },
    {
      "name": "ConfigError",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          576
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          263
        ]
      ],
      "count": 2
    },
    {
      "name": "DatabaseError",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          585
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          52
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          43
        ]
      ],
      "count": 3
    },
    {
      "name": "ValidationError",
      "locations": [
        [
          "/root/cherry_ai-main/error_handling_consolidation.py",
          588
        ],
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          102
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          88
        ]
      ],
      "count": 3
    },
    {
      "name": "IntentClassifier",
      "locations": [
        [
          "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          59
        ],
        [
          "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
          85
        ]
      ],
      "count": 2
    },
    {
      "name": "ConnectionError",
      "locations": [
        [
          "/root/cherry_ai-main/memory_management_improvements.py",
          105
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          56
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          50
        ]
      ],
      "count": 3
    },
    {
      "name": "ServiceStatus",
      "locations": [
        [
          "/root/cherry_ai-main/service_management_consolidation.py",
          42
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          20
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryManager",
      "locations": [
        [
          "/root/cherry_ai-main/phidata_agent_team_init.py",
          12
        ],
        [
          "/root/cherry_ai-main/shared/memory/memory_manager.py",
          16
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          122
        ]
      ],
      "count": 3
    },
    {
      "name": "ToolRegistry",
      "locations": [
        [
          "/root/cherry_ai-main/phidata_agent_team_init.py",
          18
        ],
        [
          "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
          14
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          162
        ]
      ],
      "count": 4
    },
    {
      "name": "PhidataAgentWrapper",
      "locations": [
        [
          "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          21
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/phidata_agent.py",
          15
        ]
      ],
      "count": 2
    },
    {
      "name": "SimpleAgent",
      "locations": [
        [
          "/root/cherry_ai-main/examples/simplified_agent_example.py",
          30
        ],
        [
          "/root/cherry_ai-main/scripts/test_nl_and_agent.py",
          17
        ]
      ],
      "count": 2
    },
    {
      "name": "CircuitBreaker",
      "locations": [
        [
          "/root/cherry_ai-main/shared/circuit_breaker.py",
          6
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          32
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          76
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          35
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          32
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          57
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          108
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          83
        ]
      ],
      "count": 8
    },
    {
      "name": "CircuitState",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          17
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
          61
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
          25
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          28
        ]
      ],
      "count": 6
    },
    {
      "name": "CircuitBreakerError",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
          30
        ]
      ],
      "count": 2
    },
    {
      "name": "EnhancedCircuitBreaker",
      "locations": [
        [
          "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
          27
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          71
        ]
      ],
      "count": 2
    },
    {
      "name": "UnifiedDatabase",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database.py",
          15
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_db.py",
          21
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          80
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          436
        ]
      ],
      "count": 4
    },
    {
      "name": "Config",
      "locations": [
        [
          "/root/cherry_ai-main/core/env_config.py",
          77
        ],
        [
          "/root/cherry_ai-main/core/config.py",
          105
        ],
        [
          "/root/cherry_ai-main/core/llm_types.py",
          55
        ],
        [
          "/root/cherry_ai-main/core/llm_types.py",
          72
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          77
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          110
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          148
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          177
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          216
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          247
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          284
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          328
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          433
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
          31
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          36
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
          49
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
          126
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          22
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          33
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          46
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          58
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          80
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
          93
        ]
      ],
      "count": 24
    },
    {
      "name": "HealthStatus",
      "locations": [
        [
          "/root/cherry_ai-main/core/health_monitor.py",
          21
        ],
        [
          "/root/cherry_ai-main/scripts/version_monitor.py",
          71
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
          39
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
          46
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
          31
        ]
      ],
      "count": 5
    },
    {
      "name": "ComponentHealth",
      "locations": [
        [
          "/root/cherry_ai-main/core/health_monitor.py",
          29
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
          32
        ]
      ],
      "count": 2
    },
    {
      "name": "HealthMonitor",
      "locations": [
        [
          "/root/cherry_ai-main/core/health_monitor.py",
          38
        ],
        [
          "/root/cherry_ai-main/scripts/health_monitor.py",
          28
        ]
      ],
      "count": 2
    },
    {
      "name": "WorkflowError",
      "locations": [
        [
          "/root/cherry_ai-main/core/mode_manager.py",
          44
        ],
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          189
        ]
      ],
      "count": 2
    },
    {
      "name": "Workflow",
      "locations": [
        [
          "/root/cherry_ai-main/core/mode_manager.py",
          105
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          101
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          81
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          71
        ]
      ],
      "count": 5
    },
    {
      "name": "Settings",
      "locations": [
        [
          "/root/cherry_ai-main/core/config.py",
          14
        ],
        [
          "/root/cherry_ai-main/core/config/settings_vultr.py",
          9
        ],
        [
          "/root/cherry_ai-main/core/config/__init__.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          126
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings_clean.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/config.py",
          26
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/settings.py",
          26
        ]
      ],
      "count": 7
    },
    {
      "name": "CircuitBreakerState",
      "locations": [
        [
          "/root/cherry_ai-main/core/connection_manager.py",
          22
        ],
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          64
        ],
        [
          "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
          46
        ]
      ],
      "count": 3
    },
    {
      "name": "ConnectionManager",
      "locations": [
        [
          "/root/cherry_ai-main/core/connection_manager.py",
          38
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
          39
        ]
      ],
      "count": 2
    },
    {
      "name": "UseCase",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          36
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          30
        ]
      ],
      "count": 3
    },
    {
      "name": "ModelTier",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          24
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          51
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          42
        ]
      ],
      "count": 3
    },
    {
      "name": "RouterConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          31
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "ModelMapping",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          61
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          62
        ]
      ],
      "count": 2
    },
    {
      "name": "LLMRequest",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          77
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          92
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          37
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/llm.py",
          13
        ]
      ],
      "count": 4
    },
    {
      "name": "LLMResponse",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm_types.py",
          91
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          107
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
          42
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          54
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/llm.py",
          26
        ]
      ],
      "count": 5
    },
    {
      "name": "ComponentType",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          25
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          28
        ]
      ],
      "count": 2
    },
    {
      "name": "Version",
      "locations": [
        [
          "/root/cherry_ai-main/coordination/version_management_implementation.py",
          37
        ],
        [
          "/root/cherry_ai-main/scripts/version_manager.py",
          47
        ]
      ],
      "count": 2
    },
    {
      "name": "TestIntegration",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/infrastructure_tests.py",
          93
        ],
        [
          "/root/cherry_ai-main/tests/test_llm_router_core.py",
          315
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
          405
        ],
        [
          "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
          332
        ]
      ],
      "count": 4
    },
    {
      "name": "TaskStatus",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          51
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          21
        ],
        [
          "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
          36
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
          25
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          44
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          50
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          46
        ]
      ],
      "count": 8
    },
    {
      "name": "Task",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/refactoring_conductor.py",
          60
        ],
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          61
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          88
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          66
        ]
      ],
      "count": 4
    },
    {
      "name": "SystemValidator",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/system_validation.py",
          31
        ],
        [
          "/root/cherry_ai-main/scripts/comprehensive_validation.py",
          30
        ]
      ],
      "count": 2
    },
    {
      "name": "TaskResult",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/symphony_conductor.py",
          45
        ],
        [
          "/root/cherry_ai-main/scripts/ai_system_conductor.py",
          60
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          40
        ]
      ],
      "count": 3
    },
    {
      "name": "PersonaTrait",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          16
        ],
        [
          "/root/cherry_ai-main/core/personas/models.py",
          51
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          15
        ]
      ],
      "count": 3
    },
    {
      "name": "PersonaConfig",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          19
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          39
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
          23
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
          58
        ]
      ],
      "count": 5
    },
    {
      "name": "PersonaConfigManager",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/persona_config_manager.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/personas/manager.py",
          39
        ]
      ],
      "count": 2
    },
    {
      "name": "IntegrationTester",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/test_integration_complete.py",
          9
        ],
        [
          "/root/cherry_ai-main/scripts/test_roo_integration.py",
          34
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentState",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          17
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
          21
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          73
        ]
      ],
      "count": 3
    },
    {
      "name": "Agent",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
          27
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          49
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          124
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
          12
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          84
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/admin.py",
          24
        ]
      ],
      "count": 6
    },
    {
      "name": "MCPConfig",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/mcp_integration.py",
          20
        ],
        [
          "/root/cherry_ai-main/mcp_server/config/models.py",
          65
        ]
      ],
      "count": 2
    },
    {
      "name": "RetryStrategy",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          32
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
          127
        ]
      ],
      "count": 2
    },
    {
      "name": "CircuitBreakerConfig",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          57
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/config.py",
          12
        ]
      ],
      "count": 2
    },
    {
      "name": "EnhancedWorkflowconductor",
      "locations": [
        [
          "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
          623
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          543
        ]
      ],
      "count": 2
    },
    {
      "name": "TestConnectionManager",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_unified_postgresql.py",
          25
        ],
        [
          "/root/cherry_ai-main/tests/test_llm_router_core.py",
          92
        ]
      ],
      "count": 2
    },
    {
      "name": "TestErrorHandling",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_data_ingestion.py",
          439
        ],
        [
          "/root/cherry_ai-main/tests/test_api_integration.py",
          317
        ]
      ],
      "count": 2
    },
    {
      "name": "TestCacheManager",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_llm_router_core.py",
          19
        ],
        [
          "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
          338
        ]
      ],
      "count": 2
    },
    {
      "name": "TestCircuitBreaker",
      "locations": [
        [
          "/root/cherry_ai-main/tests/test_agent_conductor.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
          32
        ]
      ],
      "count": 2
    },
    {
      "name": "UnifiedContextManager",
      "locations": [
        [
          "/root/cherry_ai-main/factory_integration/context_manager.py",
          47
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          229
        ]
      ],
      "count": 2
    },
    {
      "name": "CacheEntry",
      "locations": [
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          25
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
          37
        ]
      ],
      "count": 2
    },
    {
      "name": "CacheManager",
      "locations": [
        [
          "/root/cherry_ai-main/factory_integration/cache_manager.py",
          458
        ],
        [
          "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
          384
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryResponse",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          65
        ],
        [
          "/root/cherry_ai-main/core/api/models/responses.py",
          51
        ]
      ],
      "count": 2
    },
    {
      "name": "WorkflowRequest",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          92
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          102
        ]
      ],
      "count": 2
    },
    {
      "name": "ErrorResponse",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/async_server.py",
          115
        ],
        [
          "/root/cherry_ai-main/core/api/models/responses.py",
          106
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
          60
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryType",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          33
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          13
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
          13
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          17
        ]
      ],
      "count": 4
    },
    {
      "name": "MemoryScope",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          39
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          26
        ]
      ],
      "count": 2
    },
    {
      "name": "CompressionLevel",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          53
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          34
        ]
      ],
      "count": 2
    },
    {
      "name": "StorageTier",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          63
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          44
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryMetadata",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          71
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          26
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          52
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryEntry",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          84
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          52
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/memory.py",
          98
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryCompressionEngine",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          162
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
          22
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          89
        ]
      ],
      "count": 3
    },
    {
      "name": "TokenBudgetManager",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          266
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
          20
        ],
        [
          "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
          22
        ]
      ],
      "count": 3
    },
    {
      "name": "InMemoryStorage",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
          384
        ],
        [
          "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          140
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py",
          24
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryError",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          47
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          24
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryNotFoundError",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/exceptions.py",
          58
        ],
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          56
        ]
      ],
      "count": 2
    },
    {
      "name": "ConnectionPool",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          140
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          93
        ]
      ],
      "count": 2
    },
    {
      "name": "PerformanceMonitor",
      "locations": [
        [
          "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
          25
        ],
        [
          "/root/cherry_ai-main/shared/utils/performance.py",
          31
        ],
        [
          "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
          20
        ]
      ],
      "count": 3
    },
    {
      "name": "WeaviateConfig",
      "locations": [
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          18
        ],
        [
          "/root/cherry_ai-main/core/memory/config.py",
          134
        ]
      ],
      "count": 2
    },
    {
      "name": "VectorSearchResult",
      "locations": [
        [
          "/root/cherry_ai-main/services/weaviate_service.py",
          26
        ],
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          64
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          75
        ]
      ],
      "count": 3
    },
    {
      "name": "WeaviateAdapter",
      "locations": [
        [
          "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
          24
        ]
      ],
      "count": 2
    },
    {
      "name": "APIError",
      "locations": [
        [
          "/root/cherry_ai-main/shared/utils/error_handling.py",
          29
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          85
        ]
      ],
      "count": 2
    },
    {
      "name": "ConfigurationError",
      "locations": [
        [
          "/root/cherry_ai-main/shared/utils/error_handling.py",
          34
        ],
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          139
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          18
        ]
      ],
      "count": 3
    },
    {
      "name": "QueryError",
      "locations": [
        [
          "/root/cherry_ai-main/shared/database/__init__.py",
          60
        ],
        [
          "/root/cherry_ai-main/shared/database/unified_database.py",
          54
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryTier",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          15
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          18
        ],
        [
          "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
          21
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryItem",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          45
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/memory.py",
          19
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          23
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
          12
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          79
        ]
      ],
      "count": 6
    },
    {
      "name": "MemoryOperation",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          95
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
          81
        ]
      ],
      "count": 2
    },
    {
      "name": "IMemoryStorage",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          130
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
          16
        ]
      ],
      "count": 2
    },
    {
      "name": "IMemoryManager",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/interfaces.py",
          473
        ],
        [
          "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
          15
        ]
      ],
      "count": 2
    },
    {
      "name": "Environment",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/config.py",
          17
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          30
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          14
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/config.py",
          262
        ],
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          213
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          22
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryConnectionError",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/exceptions.py",
          156
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          27
        ]
      ],
      "count": 2
    },
    {
      "name": "EnhancedPersonaConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/utils/pydantic_validators.py",
          208
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          75
        ]
      ],
      "count": 2
    },
    {
      "name": "ResponseStyle",
      "locations": [
        [
          "/root/cherry_ai-main/core/personas/models.py",
          90
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          29
        ]
      ],
      "count": 2
    },
    {
      "name": "PersonaTemplate",
      "locations": [
        [
          "/root/cherry_ai-main/core/personas/models.py",
          261
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
          17
        ]
      ],
      "count": 2
    },
    {
      "name": "LLMProvider",
      "locations": [
        [
          "/root/cherry_ai-main/core/database/llm_config_models.py",
          28
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          135
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          120
        ],
        [
          "/root/cherry_ai-main/core/business/llm/provider.py",
          20
        ]
      ],
      "count": 4
    },
    {
      "name": "LLMError",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          119
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          76
        ]
      ],
      "count": 2
    },
    {
      "name": "UnifiedLLMRouter",
      "locations": [
        [
          "/root/cherry_ai-main/core/llm/unified_router.py",
          647
        ],
        [
          "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
          73
        ]
      ],
      "count": 2
    },
    {
      "name": "LogLevel",
      "locations": [
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/infrastructure/config/settings.py",
          22
        ]
      ],
      "count": 2
    },
    {
      "name": "LLMConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/config/unified_config.py",
          114
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          145
        ]
      ],
      "count": 2
    },
    {
      "name": "UnifiedMemoryManager",
      "locations": [
        [
          "/root/cherry_ai-main/core/memory/implementations/manager.py",
          43
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          167
        ]
      ],
      "count": 2
    },
    {
      "name": "ServiceRegistry",
      "locations": [
        [
          "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
          152
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          103
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/registry.py",
          17
        ]
      ],
      "count": 3
    },
    {
      "name": "AgentTaskRequest",
      "locations": [
        [
          "/root/cherry_ai-main/core/api/models/requests.py",
          34
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
          46
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentResponse",
      "locations": [
        [
          "/root/cherry_ai-main/core/api/models/responses.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          37
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          83
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
          38
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
          48
        ]
      ],
      "count": 5
    },
    {
      "name": "PersonaListResponse",
      "locations": [
        [
          "/root/cherry_ai-main/core/api/models/responses.py",
          66
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/core/main.py",
          57
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
          73
        ]
      ],
      "count": 3
    },
    {
      "name": "AgentError",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          36
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
          58
        ]
      ],
      "count": 2
    },
    {
      "name": "LLMProviderError",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/exceptions.py",
          79
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
          8
        ]
      ],
      "count": 2
    },
    {
      "name": "LayeredMemoryManager",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          39
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentContext",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          20
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          18
        ]
      ],
      "count": 2
    },
    {
      "name": "SimpleTextAgent",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          89
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
          191
        ]
      ],
      "count": 2
    },
    {
      "name": "PersonaAwareAgent",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          118
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
          17
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentRegistry",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/agents.py",
          152
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          117
        ],
        [
          "/root/cherry_ai-main/packages/agents/src/registry.py",
          25
        ]
      ],
      "count": 3
    },
    {
      "name": "PersonaProcessor",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          35
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          100
        ]
      ],
      "count": 2
    },
    {
      "name": "PersonaManager",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/core/personas.py",
          201
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
          56
        ],
        [
          "/root/cherry_ai-main/core/business/personas/base.py",
          118
        ]
      ],
      "count": 3
    },
    {
      "name": "AgentCapability",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
          17
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          51
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          33
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
          37
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          37
        ]
      ],
      "count": 5
    },
    {
      "name": "ConversationalAgent",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
          331
        ],
        [
          "/root/cherry_ai-main/core/services/agents/examples.py",
          18
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentStatus",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
          52
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          23
        ],
        [
          "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
          21
        ]
      ],
      "count": 3
    },
    {
      "name": "WorkflowState",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          26
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
          98
        ]
      ],
      "count": 2
    },
    {
      "name": "WorkflowEngine",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
          68
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          338
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/config/models.py",
          64
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          58
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
          76
        ]
      ],
      "count": 3
    },
    {
      "name": "ToolParameter",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
          9
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
          21
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryService",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
          19
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          98
        ]
      ],
      "count": 2
    },
    {
      "name": "Service",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          20
        ]
      ],
      "count": 2
    },
    {
      "name": "ServiceFactory",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
          40
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentMessage",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/message_queue.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/services/agents/base.py",
          46
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
          26
        ]
      ],
      "count": 3
    },
    {
      "name": "Agentconductor",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
          25
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          590
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          121
        ]
      ],
      "count": 3
    },
    {
      "name": "TaskDefinition",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
          31
        ],
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          52
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          75
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          92
        ]
      ],
      "count": 4
    },
    {
      "name": "QueryType",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
          25
        ],
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
          18
        ]
      ],
      "count": 2
    },
    {
      "name": "SearchResult",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py",
          23
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          45
        ]
      ],
      "count": 2
    },
    {
      "name": "Token",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
          21
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/auth.py",
          34
        ]
      ],
      "count": 2
    },
    {
      "name": "MemorySearchResult",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
          57
        ],
        [
          "/root/cherry_ai-main/mcp_server/memory/base.py",
          110
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryQuery",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
          28
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          99
        ]
      ],
      "count": 2
    },
    {
      "name": "MemoryStore",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
          59
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          52
        ],
        [
          "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
          20
        ]
      ],
      "count": 3
    },
    {
      "name": "MemoryLayer",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          22
        ],
        [
          "/root/cherry_ai-main/core/services/memory/base.py",
          15
        ]
      ],
      "count": 2
    },
    {
      "name": "LLMProviderConfig",
      "locations": [
        [
          "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
          55
        ],
        [
          "/root/cherry_ai-main/packages/llm/src/config.py",
          17
        ]
      ],
      "count": 2
    },
    {
      "name": "WorkflowContext",
      "locations": [
        [
          "/root/cherry_ai-main/core/business/workflows/base.py",
          68
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          61
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          76
        ]
      ],
      "count": 3
    },
    {
      "name": "BaseAgent",
      "locations": [
        [
          "/root/cherry_ai-main/packages/agents/base.py",
          14
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          49
        ]
      ],
      "count": 2
    },
    {
      "name": "AgentRole",
      "locations": [
        [
          "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
          21
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          53
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          60
        ]
      ],
      "count": 3
    },
    {
      "name": "AgentData",
      "locations": [
        [
          "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
          63
        ],
        [
          "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
          95
        ]
      ],
      "count": 2
    },
    {
      "name": "RuleSeverity",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          23
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          42
        ]
      ],
      "count": 2
    },
    {
      "name": "Rule",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          74
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          87
        ]
      ],
      "count": 2
    },
    {
      "name": "RuleEngine",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
          182
        ],
        [
          "/root/cherry_ai-main/mcp_server/roo/rules.py",
          124
        ]
      ],
      "count": 2
    },
    {
      "name": "SecretManager",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
          22
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          142
        ]
      ],
      "count": 2
    },
    {
      "name": "MCPToolDefinition",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          114
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          109
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          249
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
          124
        ]
      ],
      "count": 4
    },
    {
      "name": "AgentMode",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          45
        ],
        [
          "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
          54
        ]
      ],
      "count": 2
    },
    {
      "name": "WorkflowStatus",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
          57
        ],
        [
          "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
          26
        ],
        [
          "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          37
        ]
      ],
      "count": 3
    },
    {
      "name": "MCPToolProperty",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          239
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
          114
        ]
      ],
      "count": 2
    },
    {
      "name": "MCPToolParameters",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          244
        ],
        [
          "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
          119
        ]
      ],
      "count": 2
    },
    {
      "name": "CopilotAdapter",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
          60
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
          21
        ]
      ],
      "count": 2
    },
    {
      "name": "MockMCPServer",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
          25
        ],
        [
          "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
          31
        ]
      ],
      "count": 2
    },
    {
      "name": "TransitionContext",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/roo/transitions.py",
          20
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
          41
        ]
      ],
      "count": 2
    },
    {
      "name": "ModeTransitionManager",
      "locations": [
        [
          "/root/cherry_ai-main/mcp_server/roo/transitions.py",
          51
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
          83
        ]
      ],
      "count": 2
    },
    {
      "name": "DatabaseLogger",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          99
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          159
        ]
      ],
      "count": 2
    },
    {
      "name": "WeaviateManager",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          156
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
          225
        ]
      ],
      "count": 2
    },
    {
      "name": "MCPContextManager",
      "locations": [
        [
          "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
          256
        ],
        [
          "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
          169
        ]
      ],
      "count": 2
    },
    {
      "name": "QueryRequest",
      "locations": [
        [
          "/root/cherry_ai-main/agent/app/main.py",
          79
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/admin.py",
          37
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
          54
        ]
      ],
      "count": 3
    },
    {
      "name": "QueryResponse",
      "locations": [
        [
          "/root/cherry_ai-main/agent/app/routers/admin.py",
          42
        ],
        [
          "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
          62
        ]
      ],
      "count": 2
    }
  ],
  "import_style_issues": [
    {
      "file": "/root/cherry_ai-main/factory_integration/context_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 19
    },
    {
      "file": "/root/cherry_ai-main/factory_integration/__init__.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 2
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/async_server.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 17,
      "absolute_count": 12
    },
    {
      "file": "/root/cherry_ai-main/shared/memory/weaviate_session_cache.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 3
    },
    {
      "file": "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 5
    },
    {
      "file": "/root/cherry_ai-main/shared/database/dependencies.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 2
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_db.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 12
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_postgresql.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 14
    },
    {
      "file": "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/zip_processor.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 5
    },
    {
      "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 4
    },
    {
      "file": "/root/cherry_ai-main/core/memory/config.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/core/personas/manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 11,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/core/personas/test_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 8,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/__init__.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 2
    },
    {
      "file": "/root/cherry_ai-main/core/llm/factory.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 8
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 20
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 19,
      "absolute_count": 14
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 18
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 9,
      "absolute_count": 13
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 7,
      "absolute_count": 17
    },
    {
      "file": "/root/cherry_ai-main/core/memory/implementations/storage/factory.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 16,
      "absolute_count": 4
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/dragonfly.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/api/app.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 12
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/config.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/settings.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/config/loader.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 13
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/tools/executor.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 6
    },
    {
      "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 17
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 15
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/slack_parser.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/__init__.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 2
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 12
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/__init__.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 2
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/postgres_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 11
    },
    {
      "file": "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 14
    },
    {
      "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 15
    },
    {
      "file": "/root/cherry_ai-main/infra/components/weaviate_component.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 6
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/langchain_agent.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 5
    },
    {
      "file": "/root/cherry_ai-main/packages/agents/src/phidata_agent.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 4
    },
    {
      "file": "/root/cherry_ai-main/packages/llm/src/portkey_integration.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 18
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 15
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 5
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 6
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 16
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 20
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/servers/deployment_server.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 11
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 8
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/performance_memory_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 10,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 5,
      "absolute_count": 11
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 8
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 12
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 10
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/transitions.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 9
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/config/loader.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 1,
      "absolute_count": 6
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 13
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 7
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 14
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/storage/memory_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 3,
      "absolute_count": 8
    },
    {
      "file": "/root/cherry_ai-main/mcp_server/roo/adapters/gemini_adapter.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 6
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 4,
      "absolute_count": 24
    },
    {
      "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 6,
      "absolute_count": 24
    },
    {
      "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
      "issue": "Mixed relative and absolute imports",
      "relative_count": 2,
      "absolute_count": 19
    }
  ],
  "pep8_issues": [],
  "file_analysis": {
    "/root/cherry_ai-main/test_elevenlabs_voice.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 92
          },
          {
            "module": "base64",
            "alias": null,
            "line": 65
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "ResponseGenerator",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "elevenlabs",
            "item": "VoiceSettings",
            "alias": null,
            "line": 102,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'enumerate', 'run', 'startswith', 'main', 'test_voice_settings', 'test_elevenlabs', 'ResponseGenerator', 'VoiceSettings', 'print', 'str', 'split', 'getenv', 'len', 'b64decode', 'exit', 'open', 'write', 'text_to_speech', 'print_exc', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/dragonfly_config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "dragonfly_secrets",
            "item": "DRAGONFLY_CONNECTION_URI",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dragonfly_secrets",
            "item": "DRAGONFLY_DB_INDEX",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dragonfly_secrets",
            "item": "DRAGONFLY_HOST",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dragonfly_secrets",
            "item": "DRAGONFLY_PASSWORD",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dragonfly_secrets",
            "item": "DRAGONFLY_PORT",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "log_dragonfly_config",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_secret",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'EnvironmentConfigServiceClient', 'get_secret', 'decode', 'getenv', 'print', 'access_secret_version'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/dragonfly_config.py",
          "line": 14,
          "module": "dragonfly_secrets",
          "item": "DRAGONFLY_CONNECTION_URI",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/dragonfly_config.py",
          "line": 14,
          "module": "dragonfly_secrets",
          "item": "DRAGONFLY_DB_INDEX",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/dragonfly_config.py",
          "line": 14,
          "module": "dragonfly_secrets",
          "item": "DRAGONFLY_HOST",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/dragonfly_config.py",
          "line": 14,
          "module": "dragonfly_secrets",
          "item": "DRAGONFLY_PASSWORD",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/dragonfly_config.py",
          "line": 14,
          "module": "dragonfly_secrets",
          "item": "DRAGONFLY_PORT",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/find_critical_lint_issues.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "re",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "Counter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_ruff",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_ruff_text_output",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_ruff_json_output",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_detailed_report",
            "line": 128,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'enumerate', 'list', 'add_argument', 'run', 'loads', 'run_ruff', 'startswith', 'main', 'parse_args', 'join', 'Counter', 'append', 'get', 'keys', 'parse_ruff_text_output', 'print', 'most_common', 'int', 'groups', 'sorted', 'print_detailed_report', 'print_summary', 'len', 'sum', 'splitlines', 'exit', 'defaultdict', 'strip', 'match', 'values', 'items', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/key_fix_script.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 15
          },
          {
            "module": "json",
            "alias": null,
            "line": 16
          },
          {
            "module": "re",
            "alias": null,
            "line": 17
          },
          {
            "module": "sys",
            "alias": null,
            "line": 18
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "fix_private_key",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'read', 'add_argument', 'lstrip', 'isprintable', 'startswith', 'loads', 'main', 'parse_args', 'endswith', 'join', 'replace', 'get', 'print', 'fix_private_key', 'sub', 'rstrip', 'dump', 'exit', 'open', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/quick_check.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 14
          },
          {
            "module": "sys",
            "alias": null,
            "line": 15
          },
          {
            "module": "stat",
            "alias": null,
            "line": 214
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_env_file",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_critical_files",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_api_configuration",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_hardcoded_references",
            "line": 139,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Colors",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'check_api_configuration', 'chmod', 'read', 'stat', 'check_hardcoded_references', 'startswith', 'main', 'index', 'check_env_file', 'print', 'check_critical_files', 'split', 'basicConfig', 'exit', 'strip', 'open', 'exists', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/execute_strategy_workflow.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_workflow",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_roo_workflow",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'getLogger', 'main', 'StreamHandler', 'dirname', 'load_workflow', 'load', 'append', 'get', 'execute_roo_workflow', 'print', 'mkdir', 'basicConfig', 'exit', 'error', 'abspath', 'open', 'write', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/main_app.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 1
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "litellm",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "setup_logging",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "flask",
            "item": "Flask",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "flask",
            "item": "jsonify",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "flask",
            "item": "request",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "home",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85aa9a90>"
            ]
          },
          {
            "name": "health",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85aa96d0>"
            ]
          },
          {
            "name": "info",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85aaa150>"
            ]
          },
          {
            "name": "handle_query",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85ab48d0>"
            ]
          },
          {
            "name": "call_llm",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85bf9490>"
            ]
          },
          {
            "name": "health_detailed",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85bc2e50>"
            ]
          },
          {
            "name": "handle_exception",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b85baab50>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'errorhandler', 'Flask', 'int', 'error', 'str', 'setup_logging', 'bool', 'route', 'run', 'completion', 'jsonify', 'get', 'info', 'len', 'get_logger'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_context_planner.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/web_scraping_ai_agents.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 18
          },
          {
            "module": "openai",
            "alias": null,
            "line": 21
          },
          {
            "module": "redis",
            "alias": null,
            "line": 22
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urljoin",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "bs4",
            "item": "BeautifulSoup",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "playwright.async_api",
            "item": "Page",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "playwright.async_api",
            "item": "async_playwright",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "sentence_transformers",
            "item": "SentenceTransformer",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 97,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "calculate_quality_score",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 163,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 311,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_parse_html_content",
            "line": 510,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 570,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 724,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_agents",
            "line": 742,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_select_best_agent",
            "line": 832,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 915,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentType",
            "line": 33,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ScrapingStrategy",
            "line": 43,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskPriority",
            "line": 51,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ScrapingTask",
            "line": 60,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ScrapingResult",
            "line": 77,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "WebScrapingAgent",
            "line": 94,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "SearchSpecialistAgent",
            "line": 160,
            "bases": [
              "WebScrapingAgent"
            ],
            "decorators": []
          },
          {
            "name": "ScraperSpecialistAgent",
            "line": 308,
            "bases": [
              "WebScrapingAgent"
            ],
            "decorators": []
          },
          {
            "name": "ContentAnalyzerAgent",
            "line": 567,
            "bases": [
              "WebScrapingAgent"
            ],
            "decorators": []
          },
          {
            "name": "WebScrapingconductor",
            "line": 721,
            "bases": [],
            "decorators": []
          },
          {
            "name": "WebScrapingMCPServer",
            "line": 912,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_parse_html_content', 'content', 'set_extra_http_headers', '_fast_search', '_task_distributor', 'Queue', 'ValueError', 'min', 'sleep', '_extract_keywords', 'BeautifulSoup', '_dynamic_search', 'encode', 'urljoin', 'process_task', 'get', 'range', 'split', 'basicConfig', 'strip', 'lpush', 'ScrapingTask', 'items', 'get_attribute', 'create', 'post', 'getLogger', 'enumerate', 'ScrapingResult', 'run', 'query_selector', 'startswith', 'ClientSession', 'update_status', 'join', 'wait_for_selector', 'fromisoformat', 'append', 'ScrapingStrategy', 'print', 'WebScrapingconductor', 'SentenceTransformer', 'any', 'find_all', 'brpop', '__init__', 'splitlines', 'super', 'text', 'json', 'error', 'hgetall', 'lower', 'soup', '_select_best_agent', 'gather', 'start', '_agent_worker', 'put', 'create_task', 'loads', '_extract_entities', 'main', 'hset', 'launch', 'query_selector_all', 'decompose', 'close', 'evaluate', 'stop', 'OpenAI', '_general_analysis', 'now', 'wait_for', 'int', 'max', '_summarize_content', 'tolist', 'Redis', 'async_playwright', '_initialize_agents', 'values', 'new_page', 'SearchSpecialistAgent', 'info', 'field', 'TaskPriority', 'format', '_scrape_with_apify', 'get_text', '_scrape_with_playwright', '_stealth_search', 'update', 'find', 'goto', '_extract_bing_results', '_scrape_fast_static', 'str', 'ScraperSpecialistAgent', '_extract_google_results', 'sorted', 'isoformat', 'calculate_quality_score', 'len', 'inner_text', '_analyze_sentiment', '_scrape_with_zenrows', 'warning', 'submit_task', 'ContentAnalyzerAgent', 'time', 'get_result'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
          "line": 23,
          "module": "bs4",
          "item": "BeautifulSoup",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
          "line": 26,
          "module": "playwright.async_api",
          "item": "Page",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
          "line": 26,
          "module": "playwright.async_api",
          "item": "async_playwright",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
          "line": 27,
          "module": "sentence_transformers",
          "item": "SentenceTransformer",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/test_unified_systems.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm",
            "item": "get_llm_router",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "core.llm",
            "item": "complete",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "core.llm",
            "item": "chat",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "core.llm.unified_router",
            "item": "LLMRequest",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "core.llm.unified_router",
            "item": "UseCase",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "core.llm.unified_router",
            "item": "ModelTier",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "core.llm.unified_router",
            "item": "Provider",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 58,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "get_database",
            "alias": null,
            "line": 58,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "DatabaseType",
            "alias": null,
            "line": 58,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "VectorSearchResult",
            "alias": null,
            "line": 59,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "HybridSearchResult",
            "alias": null,
            "line": 59,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "get_settings",
            "alias": null,
            "line": 91,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "Settings",
            "alias": null,
            "line": 91,
            "level": 0
          },
          {
            "module": "core.llm",
            "item": "get_llm_router",
            "alias": null,
            "line": 114,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "get_database",
            "alias": null,
            "line": 115,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "get_settings",
            "alias": null,
            "line": 116,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'getLogger', 'list', 'run', 'get_metrics', 'main', 'LLMRequest', 'append', 'get_llm_router', 'keys', 'print', 'test_unified_database', 'health_check', 'get_settings', 'basicConfig', 'len', 'sum', 'type', 'test_configuration_system', 'test_unified_llm_router', 'get_available_models', 'UnifiedDatabase', 'test_integration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/verify_factory_ai_connection.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_environment",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'getcwd', 'strip', 'split', 'open', 'load', 'run', 'append', 'exists', 'check_environment', 'get', 'check_output', 'len', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scan_github_workflows.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 21
          },
          {
            "module": "re",
            "alias": null,
            "line": 22
          },
          {
            "module": "sys",
            "alias": null,
            "line": 23
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 28
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 26,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "scan_action_versions",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_hardcoded_values",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_authentication_methods",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_python_versions",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_workflow_file",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_directory",
            "line": 270,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_issues",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 318,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WorkflowIssue",
            "line": 31,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'enumerate', 'add_argument', 'startswith', 'print_issues', 'main', 'glob', 'parse_args', 'isinstance', 'scan_directory', 'scan_workflow_file', 'append', 'print', 'extend', 'str', 'groups', 'len', 'exit', 'WorkflowIssue', 'match', 'open', 'exists', 'items', 'scanner', 'ArgumentParser', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/error_handling_consolidation.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 16
          },
          {
            "module": "enum",
            "alias": null,
            "line": 17
          },
          {
            "module": "functools",
            "alias": null,
            "line": 18
          },
          {
            "module": "inspect",
            "alias": null,
            "line": 19
          },
          {
            "module": "logging",
            "alias": null,
            "line": 20
          },
          {
            "module": "random",
            "alias": null,
            "line": 21
          },
          {
            "module": "time",
            "alias": null,
            "line": 22
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 23
          },
          {
            "module": "json",
            "alias": null,
            "line": 634
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "contextmanager",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "handle_exception",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_async_exception",
            "line": 178,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "error_context",
            "line": 257,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "contextmanager"
            ]
          },
          {
            "name": "safe_execute",
            "line": 324,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_retry",
            "line": 396,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "map_exception",
            "line": 546,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "example_with_decorator",
            "line": 602,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "example_with_context_manager",
            "line": 617,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "example_with_safe_execute",
            "line": 630,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 49,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__str__",
            "line": 89,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 427,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 503,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_config",
            "line": 606,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b81431b90>"
            ]
          },
          {
            "name": "process_item",
            "line": 620,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_json",
            "line": 633,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fetch_data",
            "line": 648,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b8143f950>"
            ]
          },
          {
            "name": "wrapper",
            "line": 135,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b81573ad0>"
            ]
          },
          {
            "name": "wrapper",
            "line": 429,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b8140ead0>"
            ]
          }
        ],
        "classes": [
          {
            "name": "ErrorSeverity",
            "line": 37,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "BaseError",
            "line": 46,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ConfigError",
            "line": 576,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "DataProcessingError",
            "line": 579,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "NetworkError",
            "line": 582,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "DatabaseError",
            "line": 585,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "ValidationError",
            "line": 588,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "AuthenticationError",
            "line": 591,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "AuthorizationError",
            "line": 594,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          },
          {
            "name": "ResourceNotFoundError",
            "line": 597,
            "bases": [
              "BaseError"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'error_context', 'getLogger', 'load_config', 'debug', 'ValueError', 'run', 'uniform', 'format_exc', 'min', 'handle_exception', 'loads', 'sleep', 'endswith', 'with_retry', 'safe_execute', 'get', 'currentframe', 'range', 'print', 'str', 'func', 'TypeVar', 'basicConfig', 'wraps', 'cast', 'KeyError', '__init__', 'example_with_context_manager', 'ConnectionError', 'super', 'type', 'error', 'example_with_safe_execute', 'log_level', 'process_item', 'warning', 'target_error', 'example_with_retry', 'example_with_decorator', 'fetch_data'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/deploy_via_api.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'read', 'open', 'write', 'print', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_claude_api.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 2
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 3
          },
          {
            "module": "os",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'post', 'strip', 'split', 'open', 'run', 'text', 'exists', 'test_claude', 'get', 'startswith', 'print', 'ClientSession'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/redis_semantic_cache_example.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "langchain_google_genai",
            "item": "GoogleGenerativeAIEmbeddings",
            "alias": "GeminiEmbeddings",
            "line": 25,
            "level": 0
          },
          {
            "module": "langchain_redis.cache",
            "item": "RedisSemanticCache",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "redisvl",
            "item": "SemanticCacher",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.redis_semantic_cacher",
            "item": "RedisSemanticCacheProvider",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 30,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'MemoryItem', 'getLogger', 'read', 'enumerate', 'RedisSemanticCache', 'run', 'main', 'StreamHandler', 'get_memories', 'RedisSemanticCacheProvider', 'get', 'add_memory', 'basicConfig', 'len', 'SemanticCacher', 'exit', 'error', 'initialize', 'strip', 'open', 'info', 'GeminiEmbeddings'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
          "line": 25,
          "module": "langchain_google_genai",
          "item": "GoogleGenerativeAIEmbeddings",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
          "line": 26,
          "module": "langchain_redis.cache",
          "item": "RedisSemanticCache",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
          "line": 27,
          "module": "redisvl",
          "item": "SemanticCacher",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
          "line": 29,
          "module": "packages.shared.src.memory.redis_semantic_cacher",
          "item": "RedisSemanticCacheProvider",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/quick_verify_admin_ui.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 33
          },
          {
            "module": "json",
            "alias": null,
            "line": 34
          },
          {
            "module": "os",
            "alias": null,
            "line": 35
          },
          {
            "module": "re",
            "alias": null,
            "line": 36
          },
          {
            "module": "sys",
            "alias": null,
            "line": 37
          },
          {
            "module": "time",
            "alias": null,
            "line": 38
          },
          {
            "module": "requests",
            "alias": null,
            "line": 44
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 39,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urljoin",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urlparse",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "bs4",
            "item": "BeautifulSoup",
            "alias": null,
            "line": 45,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Fore",
            "alias": null,
            "line": 46,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Style",
            "alias": null,
            "line": 46,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "init",
            "alias": null,
            "line": 46,
            "level": 0
          },
          {
            "module": "tabulate",
            "item": "tabulate",
            "alias": null,
            "line": 47,
            "level": 0
          },
          {
            "module": "selenium",
            "item": "webdriver",
            "alias": null,
            "line": 416,
            "level": 0
          },
          {
            "module": "selenium.webdriver.chrome.service",
            "item": "Service",
            "alias": null,
            "line": 417,
            "level": 0
          },
          {
            "module": "selenium.webdriver.chrome.options",
            "item": "Options",
            "alias": null,
            "line": 418,
            "level": 0
          },
          {
            "module": "webdriver_manager.chrome",
            "item": "ChromeDriverManager",
            "alias": null,
            "line": 419,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "parse_args",
            "line": 788,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 821,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 73,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "run",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_accessibility",
            "line": 143,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_resources",
            "line": 195,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_api_endpoints",
            "line": 339,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_performance",
            "line": 410,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_summary",
            "line": 528,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 579,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_text_report",
            "line": 588,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_json_report",
            "line": 655,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_html_report",
            "line": 659,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_report",
            "line": 751,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_exit_code",
            "line": 763,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AdminUIVerifier",
            "line": 70,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'Chrome', 'quit', '_check_api_endpoints', 'add_argument', 'run', 'lstrip', 'strftime', 'main', 'BeautifulSoup', 'parse_args', 'update', 'endswith', 'join', 'get_exit_code', 'head', 'execute_script', 'urljoin', 'Options', 'save_report', 'append', '_check_performance', 'get', 'has_attr', '_generate_html_report', 'print', 'now', 'str', 'int', 'install', '_generate_json_report', 'title', 'dumps', 'isoformat', 'Service', 'init', 'find_all', 'upper', 'len', 'generate_report', '_generate_text_report', 'AdminUIVerifier', 'Session', 'exit', '_check_accessibility', 'lower', 'hasattr', 'open', 'set_page_load_timeout', 'write', 'request', '_check_resources', 'time', '_generate_summary', 'items', 'ArgumentParser', 'ChromeDriverManager'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 45,
          "module": "bs4",
          "item": "BeautifulSoup",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 46,
          "module": "colorama",
          "item": "Fore",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 46,
          "module": "colorama",
          "item": "Style",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 46,
          "module": "colorama",
          "item": "init",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 47,
          "module": "tabulate",
          "item": "tabulate",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 416,
          "module": "selenium",
          "item": "webdriver",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 417,
          "module": "selenium.webdriver.chrome.service",
          "item": "Service",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 418,
          "module": "selenium.webdriver.chrome.options",
          "item": "Options",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
          "line": 419,
          "module": "webdriver_manager.chrome",
          "item": "ChromeDriverManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mvp_cherry_ai_ai.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "EnhancedVectorMemorySystem",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataAggregationconductor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataSourceConfig",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "enhanced_natural_language_interface",
            "item": "ConversationMode",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "enhanced_natural_language_interface",
            "item": "EnhancedNaturalLanguageInterface",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 38,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiAIMVP",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'enumerate', 'sync_all_sources', 'add_argument', 'run', 'process_message', 'ConversationMode', 'startswith', 'DataSourceConfig', 'main', 'print_help', 'parse_args', 'StreamHandler', 'input', 'close', 'replace', 'append', '_setup_data_source_configs', 'chat', 'semantic_search', 'DataAggregationconductor', 'end_conversation', 'print', 'RuntimeError', 'EnhancedNaturalLanguageInterface', 'get_conversation_history', 'isoformat', 'basicConfig', 'getenv', 'len', 'upper', 'sum', 'error', 'initialize', 'setup_default_integrations', 'strip', 'warning', 'lower', 'values', 'search_memory', 'add_subparsers', 'cherry_aiAIMVP', 'add_parser', 'utcnow', 'info', 'EnhancedVectorMemorySystem', 'items', 'ArgumentParser', 'start_conversation', 'FileHandler', 'sync_all_data'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
          "line": 14,
          "module": "enhanced_vector_memory_system",
          "item": "EnhancedVectorMemorySystem",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_cli.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 35
          },
          {
            "module": "sys",
            "alias": null,
            "line": 36
          },
          {
            "module": "docopt",
            "alias": null,
            "line": 62
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 37,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 37,
            "level": 0
          },
          {
            "module": "cline_integration",
            "item": "CLINE_MODE_MAP",
            "alias": "CLINE_MODES",
            "line": 41,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "UNIFIED_WORKFLOWS",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "AITool",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "MCPServerManager",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "MemoryScope",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "UnifiedMemoryManager",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "UnifiedModeManager",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "unified_mcp_conductor",
            "item": "UnifiedWorkflowconductor",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "mcp_server.roo",
            "item": "MODES",
            "alias": "ROO_MODES",
            "line": 52,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "parse_args",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_output",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_memory_commands",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_run_command",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_workflow_command",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_cross_tool_command",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_server_commands",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_list_command",
            "line": 253,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 287,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'list_available_servers', 'handle_run_command', 'handle_memory_commands', 'sync_between_tools', 'loads', 'UnifiedMemoryManager', 'main', 'isinstance', 'parse_args', 'handle_workflow_command', 'handle_server_commands', 'join', 'stop_server', 'execute_workflow', 'execute_cross_tool_workflow', 'MCPServerManager', 'keys', 'retrieve', 'print', 'execute_server_operation', 'docopt', 'str', 'start_server', 'split', 'dumps', 'check_server_status', 'len', 'exit', 'handle_list_command', 'execute_in_mode', 'AITool', 'save', 'UnifiedWorkflowconductor', 'items', 'MemoryScope', 'handle_cross_tool_command'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 62,
          "module": "docopt",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 41,
          "module": "cline_integration",
          "item": "CLINE_MODE_MAP",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "UNIFIED_WORKFLOWS",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "AITool",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "MCPServerManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "MemoryScope",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "UnifiedMemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "UnifiedModeManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_cli.py",
          "line": 42,
          "module": "unified_mcp_conductor",
          "item": "UnifiedWorkflowconductor",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/webscraping_app.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "mcp_server.servers.web_scraping_mcp_server",
            "item": "cherry_aiWebScrapingMCPServer",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "WebScrapingconductor",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "SearchRequest",
            "line": 51,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ScrapeRequest",
            "line": 57,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AnalyzeRequest",
            "line": 64,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BulkScrapeRequest",
            "line": 68,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'handle_get_task_status', 'post', 'getLogger', 'run', 'create_task', 'cherry_aiWebScrapingMCPServer', 'on_event', 'handle_analyze_content', 'handle_scrape_website', 'dirname', 'append', 'get_agent_status', 'get', 'stop', 'handle_bulk_scrape', 'int', 'str', 'FastAPI', 'get_recent_results', 'WebScrapingconductor', 'list_tools', 'add_middleware', 'basicConfig', 'getenv', 'len', 'error', 'call_tool', 'abspath', 'handle_web_search', 'info', 'HTTPException', 'start', 'get_active_tasks'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/code_analysis.py": {
      "imports": {
        "standard": [
          {
            "module": "ast",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "re",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 13
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 387
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "find_python_files",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_file",
            "line": 299,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_codebase",
            "line": 315,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 331,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_detailed_report",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 385,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 59,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__str__",
            "line": 74,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 82,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "visit_Import",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_ImportFrom",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_Name",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_FunctionDef",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_ClassDef",
            "line": 198,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_complexity",
            "line": 218,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_is_in_package",
            "line": 255,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_is_test_function",
            "line": 260,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze",
            "line": 264,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 223,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "visit_If",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_For",
            "line": 230,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_While",
            "line": 234,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_Try",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_ExceptHandler",
            "line": 242,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "visit_BoolOp",
            "line": 246,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Issue",
            "line": 56,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CodeVisitor",
            "line": 79,
            "bases": [
              "NodeVisitor"
            ],
            "decorators": []
          },
          {
            "name": "ComplexityVisitor",
            "line": 222,
            "bases": [
              "NodeVisitor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'enumerate', 'add_argument', 'get_docstring', '_is_in_package', 'generic_visit', 'startswith', 'CodeVisitor', 'isinstance', 'parse_args', 'main', 'join', 'Issue', 'append', 'ComplexityVisitor', 'get', 'add', 'analyze', 'print', 'extend', 'walk', 'str', 'split', 'sorted', 'print_detailed_report', 'print_summary', 'any', 'len', 'upper', 'exit', 'defaultdict', '_calculate_complexity', 'match', 'lower', 'open', 'set', 'analyze_codebase', 'exists', '_is_test_function', 'parse', 'items', 'ArgumentParser', 'analyze_file', 'visit', 'find_python_files'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/optional_integrations.py": {
      "imports": {
        "standard": [
          {
            "module": "mongodb",
            "alias": null,
            "line": 9
          },
          {
            "module": "secretmanager",
            "alias": null,
            "line": 15
          },
          {
            "module": "monitoring_v3",
            "alias": null,
            "line": 21
          },
          {
            "module": "cloud_logging",
            "alias": null,
            "line": 27
          },
          {
            "module": "tasks_v2",
            "alias": null,
            "line": 33
          },
          {
            "module": "storage",
            "alias": null,
            "line": 39
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 9,
          "module": "mongodb",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 15,
          "module": "secretmanager",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 21,
          "module": "monitoring_v3",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 27,
          "module": "cloud_logging",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 33,
          "module": "tasks_v2",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/optional_integrations.py",
          "line": 39,
          "module": "storage",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/test_personas_api.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'Path', 'put', 'dumps', 'run', 'AsyncClient', 'get', 'test_personas_api', 'insert', 'print', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_context_coder.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_api_key.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 2
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'absolute', 'strip', 'split', 'open', 'exists', 'get', 'startswith', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_real_agents.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "sys",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "agent.app.services.real_agents",
            "item": "get_all_agents",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "run_agent_task",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'test', 'run', 'get_all_agents', 'run_agent_task', 'len', 'insert', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_mcp_system.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "rich.panel",
            "item": "Panel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "Progress",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "SpinnerColumn",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "TextColumn",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'post', 'Progress', 'add_row', 'run', 'startswith', 'sleep', 'main', 'join', 'add_column', 'test_func', 'AsyncClient', 'append', 'get', 'run_tests', 'print', 'remove_task', 'now', 'str', 'SpinnerColumn', 'split', 'add_task', 'isoformat', 'len', 'sum', 'exit', 'json', 'test', 'Table', 'TextColumn', 'Exception', 'values', 'Console', 'fit', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_mcp_simple.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 2
          },
          {
            "module": "os",
            "alias": null,
            "line": 24
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'open', 'load', 'get', 'len', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/enhanced_natural_language_interface.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "re",
            "alias": null,
            "line": 8
          },
          {
            "module": "portkey",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "ContextualMemory",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "ConversationContext",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "EnhancedVectorMemorySystem",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "weaviate.preview",
            "item": "generative_models",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataAggregationconductor",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "classify_intent",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 104,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_source_summary",
            "line": 215,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 295,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_active_conversations",
            "line": 582,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConversationMode",
            "line": 22,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ConversationMessage",
            "line": 32,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ConversationSession",
            "line": 46,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "IntentClassifier",
            "line": 59,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ContextualResponseGenerator",
            "line": 101,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedNaturalLanguageInterface",
            "line": 283,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'enumerate', 'sync_all_sources', 'ValueError', 'process_message', 'timestamp', '_handle_memory_search', 'get_conversation_context', 'join', 'Client', 'total_seconds', 'IntentClassifier', 'append', 'ConversationMessage', '_generate_source_summary', 'get', 'sync_data', 'semantic_search', 'generate_response', 'ConversationSession', '_handle_data_sync', 'search', 'extend', 'add_memory', '_generate_with_model', 'int', '_handle_general_query', 'generate_content', 'isoformat', '_handle_data_analysis', '_extract_response_metadata', 'ContextualResponseGenerator', 'classify_intent', 'len', 'upper', 'error', 'warning', 'lower', 'set', 'values', 'utcnow', '_build_enhanced_prompt', 'items', 'field', 'GenerativeModel', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          "line": 15,
          "module": "enhanced_vector_memory_system",
          "item": "ContextualMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          "line": 15,
          "module": "enhanced_vector_memory_system",
          "item": "ConversationContext",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
          "line": 15,
          "module": "enhanced_vector_memory_system",
          "item": "EnhancedVectorMemorySystem",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/memory_management_improvements.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "concurrent.futures",
            "alias": null,
            "line": 11
          },
          {
            "module": "datetime",
            "alias": null,
            "line": 12
          },
          {
            "module": "functools",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "time",
            "alias": null,
            "line": 15
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 16
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 220
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "google.api_core.exceptions",
            "item": "GoogleAPIError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryHealth",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "handle_storage_errors",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_retry",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__new__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize",
            "line": 58,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_pool",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "decorator",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 450,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_sync",
            "line": 504,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_close_sync",
            "line": 523,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_initialized",
            "line": 527,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_add_item_sync",
            "line": 552,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_connection_sync",
            "line": 615,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_production_ready",
            "line": 620,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_production_readiness_report",
            "line": 629,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ThreadPoolManager",
            "line": 39,
            "bases": [],
            "decorators": []
          },
          {
            "name": "StorageError",
            "line": 99,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ValidationError",
            "line": 102,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ConnectionError",
            "line": 105,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ImprovedFirestoreMemoryAdapter",
            "line": 442,
            "bases": [
              "MemoryManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'submit', 'commit', 'getLogger', 'debug', 'uuid4', 'get_pool', 'where', 'run', 'ValidationError', 'is_optimized', '_check_initialized', 'sleep', 'ImprovedFirestoreMemoryAdapter', 'isinstance', '_initialize', 'with_retry', 'is_production_ready', 'close', 'append', 'get', 'delete', 'extend', 'start_after', 'sort', 'is_healthy', 'str', 'RuntimeError', 'batch', 'func', 'TypeVar', 'zip', '__new__', 'health_check', 'to_dict', 'basicConfig', 'wraps', 'has_comprehensive_monitoring', 'len', 'dot', 'ThreadPoolExecutor', 'sum', 'get_memory_item', 'usage_example', 'cls', 'add_memory_item', 'ConnectionError', 'wrap_future', 'super', 'error', 'initialize', 'warning', 'all', 'array', 'utcnow', 'shutdown', 'time', 'info', 'limit', 'norm', 'run_in_thread', 'is_secure', 'collection', 'StorageError'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/memory_management_improvements.py",
          "line": 21,
          "module": "google.api_core.exceptions",
          "item": "GoogleAPIError",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/memory_management_improvements.py",
          "line": 23,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryHealth",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/memory_management_improvements.py",
          "line": 23,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_context_debugger.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_dragonfly_connection.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          },
          {
            "module": "sys",
            "alias": null,
            "line": 14
          },
          {
            "module": "time",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "mcp_server.config.dragonfly_config",
            "item": "log_dragonfly_config",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "mcp_server.config.dragonfly_config",
            "item": "validate_dragonfly_config",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "mcp_server.memory.base",
            "item": "MemoryEntry",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "mcp_server.memory.base",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "mcp_server.memory.dragonfly_cache",
            "item": "DragonflyCache",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DragonflyConnectionTest",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'concurrent_operation', 'run', 'test_connection_pool', 'min', 'test_connection', 'DragonflyCache', 'run_all_tests', 'main', 'isinstance', 'log_dragonfly_config', 'MemoryEntry', 'close', 'test_performance', 'MemoryMetadata', 'append', 'get', 'test_health_check', 'delete', 'clear', 'range', 'print', 'str', 'test_crud_operations', 'int', 'max', 'batch_save', 'dumps', 'DragonflyConnectionTest', 'sorted', 'validate_dragonfly_config', 'health_check', 'isoformat', 'test_batch_operations', 'len', 'sum', 'initialize', 'save', 'all', 'values', 'utcnow', 'gather', 'time', 'batch_get', 'insert', 'cleanup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
          "line": 23,
          "module": "mcp_server.config.dragonfly_config",
          "item": "log_dragonfly_config",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
          "line": 23,
          "module": "mcp_server.config.dragonfly_config",
          "item": "validate_dragonfly_config",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/test_dragonfly_connection.py",
          "line": 25,
          "module": "mcp_server.memory.dragonfly_cache",
          "item": "DragonflyCache",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/test_modular_system.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "core.business.personas.base",
            "item": "PersonaConfig",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaTrait",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "ResponseStyle",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "get_persona_manager",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.business.workflows.examples",
            "item": "register_example_workflows",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.main",
            "item": "cherry_aiSystem",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "register_example_agents",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 49,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 69,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 84,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "Event",
            "alias": null,
            "line": 99,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 99,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'getLogger', 'get_persona_manager', 'register_example_workflows', 'cherry_aiSystem', 'register_example_agents', 'run', 'get_event_bus', 'Event', 'sleep', 'test_system', 'get_memory_service', 'join', 'PersonaConfig', 'register_persona', 'get_agent_manager', 'execute_workflow', 'get', 'publish', 'store', 'basicConfig', 'get_workflow_engine', 'stop_all_agents', 'start_all_agents', 'len', 'error', 'initialize', 'shutdown', 'subscribe', 'info', 'list_agents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/service_management_consolidation.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 17
          },
          {
            "module": "json",
            "alias": null,
            "line": 18
          },
          {
            "module": "logging",
            "alias": null,
            "line": 19
          },
          {
            "module": "os",
            "alias": null,
            "line": 20
          },
          {
            "module": "sys",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "ServiceConfig",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "get_service_config",
            "alias": null,
            "line": 32,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 91,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ServiceStatus",
            "line": 42,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceLifecycleEvent",
            "line": 52,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceInstance",
            "line": 62,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ServiceHealthCheck",
            "line": 75,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedServiceManager",
            "line": 85,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'deregister_service', 'getLogger', 'debug', 'Field', 'list', '_refresh_service_cache', '_setup_service_registry_schema', 'uuid4', 'get_service_health_history', 'timestamp', 'run', 'create_task', 'with_where', 'fromtimestamp', 'create_class', 'sleep', 'ServiceStatus', 'loads', 'main', 'UnifiedServiceManager', 'update', 'cleanup_expired_services', 'close', 'total_seconds', 'append', 'find_services', 'get', 'send_heartbeat', 'get_weaviate_client', 'record_health_check', 'now', 'run_service_cleanup_job', 'str', 'int', 'register_service', 'ServiceHealthCheck', 'ServiceInstance', 'dumps', 'sorted', 'initialize_database', 'basicConfig', 'with_limit', 'getenv', 'len', 'timedelta', '_log_lifecycle_event', 'error', 'initialize', 'with_sort', 'warning', 'hasattr', 'values', 'exists', 'find_service', 'info', 'execute_query', 'do', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/monitor_extension_performance.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 34,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "setup_logging",
            "alias": null,
            "line": 34,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_extension_processes",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_installed_extensions",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_performance_log",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_performance_log",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_resource_usage",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_extension_categories",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_problematic_extensions",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 206,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'get_installed_extensions', 'check_resource_usage', 'run', 'get_extension_processes', 'main', 'float', 'load_performance_log', 'join', 'setup_logging', 'load', 'append', 'get', 'mkdir', 'now', 'save_performance_log', 'split', 'isoformat', 'resolve', 'len', 'splitlines', 'dump', 'get_problematic_extensions', 'error', 'strip', 'warning', 'open', 'exists', 'get_extension_categories', 'info', 'items', 'get_logger'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scan_for_hardcoded_values.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 17
          },
          {
            "module": "os",
            "alias": null,
            "line": 18
          },
          {
            "module": "re",
            "alias": null,
            "line": 19
          },
          {
            "module": "sys",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Pattern",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "should_scan_file",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_file",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_fix",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_directory",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_results",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 214,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HardcodedPattern",
            "line": 26,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          }
        ],
        "function_calls": "{'generate_fix', 'Path', 'enumerate', 'group', 'add_argument', 'scan_file', 'startswith', 'main', 'parse_args', 'scan_directory', 'replace', 'append', 'HardcodedPattern', 'print_results', 'print', 'walk', 'str', 'sorted', 'compile', 'any', 'len', 'sum', 'exit', 'should_scan_file', 'strip', 'open', 'finditer', 'values', 'exists', 'items', 'ArgumentParser', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/data_source_integrations.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "base64",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "EnhancedVectorMemorySystem",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 176,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 529,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 630,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_integration",
            "line": 635,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DataSourceConfig",
            "line": 21,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "BaseDataSourceIntegration",
            "line": 30,
            "bases": [],
            "decorators": []
          },
          {
            "name": "GongIntegration",
            "line": 74,
            "bases": [
              "BaseDataSourceIntegration"
            ],
            "decorators": []
          },
          {
            "name": "SalesforceIntegration",
            "line": 173,
            "bases": [
              "BaseDataSourceIntegration"
            ],
            "decorators": []
          },
          {
            "name": "HubSpotIntegration",
            "line": 336,
            "bases": [
              "BaseDataSourceIntegration"
            ],
            "decorators": []
          },
          {
            "name": "SlackIntegration",
            "line": 412,
            "bases": [
              "BaseDataSourceIntegration"
            ],
            "decorators": []
          },
          {
            "name": "LookerIntegration",
            "line": 526,
            "bases": [
              "BaseDataSourceIntegration"
            ],
            "decorators": []
          },
          {
            "name": "DataAggregationconductor",
            "line": 627,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', '_sync_activities', 'timestamp', '_sync_opportunities', '_rate_limit', '_sync_looks', '_sync_deals', '_sync_channel_messages', 'fromtimestamp', 'sleep', '_sync_accounts', 'ClientSession', 'float', '_sync_dashboards', 'update', '_sync_calls', 'join', '_authenticate', '_sync_contacts', 'close', 'encode', 'ClientTimeout', '_sync_insights', 'get', '_get_channels', 'SalesforceIntegration', 'sync_data', 'get_event_loop', 'add_memory', 'str', 'int', 'LookerIntegration', 'dumps', 'HubSpotIntegration', 'SlackIntegration', '_get_thread_replies', 'isoformat', 'b64encode', '_sync_companies', 'decode', 'timedelta', 'len', '__init__', 'super', 'json', 'error', 'strip', 'GongIntegration', '_get_session', '_sync_explores', 'utcnow', 'time', 'info', 'items', 'add_integration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/data_source_integrations.py",
          "line": 16,
          "module": "enhanced_vector_memory_system",
          "item": "EnhancedVectorMemorySystem",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/playground.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "phi.agent",
            "item": "Agent",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "phi.model.openai",
            "item": "OpenAIChat",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "phi.playground",
            "item": "Playground",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "phi.playground",
            "item": "serve_playground_app",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "phi.storage.agent.sqlite",
            "item": "SqlAgentStorage",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "phi.tools.duckduckgo",
            "item": "DuckDuckGo",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'serve_playground_app', 'Agent', 'Playground', 'get_app', 'OpenAIChat', 'DuckDuckGo', 'SqlAgentStorage'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/verify_app_startup.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "agent.app.main",
            "item": "app",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'Path', 'list', 'hasattr', 'sorted', 'append', 'insert', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/test_mcp_data.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_mcp_data",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'isinstance', 'str', 'len', 'add_to_knowledge_base', 'check_mcp_data', 'create_session', 'search_memories', 'UnifiedDatabase', 'search_conversations', 'store_memory', 'now', 'get', 'create_agent', 'strftime', 'loads', 'execute_query', 'print', 'list_agents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/utils.py": {
      "imports": {
        "standard": [
          {
            "module": "functools",
            "alias": null,
            "line": 5
          },
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "retry",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_vultr_project_id",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_logging",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_env_file",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 39,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_keys",
            "line": 43,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_key",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_key",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_key",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b81415090>"
            ]
          }
        ],
        "classes": [
          {
            "name": "APIKeyManager",
            "line": 36,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'startswith', 'sleep', 'get', 'range', 'func', '_load_keys', 'split', 'basicConfig', 'wraps', 'getenv', 'upper', 'error', 'strip', 'warning', 'lower', 'open', 'getattr', 'exists', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_context_reviewer.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/migration_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 474,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_state",
            "line": 37,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_state",
            "line": 54,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_backup",
            "line": 63,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_run_task",
            "line": 90,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_1_foundation_cleanup",
            "line": 115,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_2_core_consolidation",
            "line": 266,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_3_architecture_enhancement",
            "line": 339,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_4_performance_optimization",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_5_script_automation",
            "line": 389,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_phase",
            "line": 414,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_all_phases",
            "line": 433,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "status",
            "line": 443,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rollback",
            "line": 455,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_poetry_config",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "consolidate_requirements",
            "line": 153,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_unified_config",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_unified_llm_router",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_unified_database",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "migrate_imports",
            "line": 299,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reorganize_core_directory",
            "line": 344,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "enhance_conductor",
            "line": 349,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_async_patterns",
            "line": 369,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "implement_monitoring",
            "line": 374,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "consolidate_scripts",
            "line": 394,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "improve_cli",
            "line": 399,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Migrationconductor",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'read', 'add_argument', 'task_func', 'strftime', 'startswith', 'main', 'parse_args', 'print_help', '_load_state', 'run_all_phases', 'StreamHandler', 'join', 'status', 'next', 'is_file', 'load', 'append', 'Migrationconductor', 'get', 'range', 'print', 'mkdir', 'now', 'is_dir', 'str', '_run_task', 'rollback', 'split', '_save_state', '_create_backup', 'isoformat', 'basicConfig', 'FileHandler', 'len', 'copy2', 'dump', 'error', 'strip', 'Exception', 'warning', 'open', 'run_phase', 'exists', 'write', 'unlink', 'info', 'copytree', 'ArgumentParser', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/simple_mcp.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "flask",
            "item": "Flask",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "flask",
            "item": "jsonify",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "flask",
            "item": "request",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "flask_cors",
            "item": "CORS",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 191,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_memory",
            "line": 37,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 115,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_configure_routes",
            "line": 130,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 186,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "status",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7fffc050>"
            ]
          },
          {
            "name": "get_memory",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7ffff7d0>"
            ]
          },
          {
            "name": "set_memory",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b8002ab10>"
            ]
          },
          {
            "name": "delete_memory",
            "line": 174,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b8002ce10>"
            ]
          }
        ],
        "classes": [
          {
            "name": "SimpleMemoryStore",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "SimpleMCPServer",
            "line": 112,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_configure_routes', 'Path', 'getLogger', 'CORS', 'list', 'add_argument', 'run', 'SimpleMemoryStore', 'main', 'glob', 'parse_args', 'load', 'route', 'jsonify', 'get', 'delete', 'mkdir', 'now', 'Flask', 'isoformat', 'basicConfig', 'len', 'SimpleMCPServer', '_load_memory', 'dump', 'error', 'open', 'set', 'exists', 'unlink', 'info', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/simple_mcp.py",
          "line": 18,
          "module": "flask_cors",
          "item": "CORS",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/phidata_agent_team_init.py": {
      "imports": {
        "standard": [
          {
            "module": "importlib",
            "alias": null,
            "line": 1
          },
          {
            "module": "logging",
            "alias": null,
            "line": 2
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "phidata.utils.log",
            "item": "logger",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_pg_agent_storage",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_pgvector_memory",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryManager",
            "line": 12,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PortkeyClient",
            "line": 15,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ToolRegistry",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Agent', 'get_pg_agent_storage', 'import_module', 'ValueError', 'ImportError', '_init_storage_and_memory', 'startswith', 'replace', 'append', 'get', 'get_pgvector_memory', 'get_tool', '_get_llm_from_ref', 'RuntimeError', 'tool_class', 'basicConfig', 'len', '__init__', 'super', 'error', 'strip', 'warning', 'to_phidata_tool', 'hasattr', 'lower', 'getattr', 'rsplit', 'info', 'Team'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
          "line": 5,
          "module": "phidata.utils.log",
          "item": "logger",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/phidata_team_agent_implementation.py": {
      "imports": {
        "standard": [
          {
            "module": "importlib",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.llm.src.portkey_client",
            "item": "PortkeyClient",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.memory.src.base",
            "item": "MemoryManager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.phidata.src.cloudsql_pgvector",
            "item": "get_pg_agent_storage",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.phidata.src.cloudsql_pgvector",
            "item": "get_pgvector_memory",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.tools.src.base",
            "item": "ToolRegistry",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_llm_model",
            "line": 177,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_init_member_tools",
            "line": 192,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_init_member_storage",
            "line": 246,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_init_member_memory",
            "line": 279,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PhidataAgentWrapper",
            "line": 21,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Agent', 'get_pg_agent_storage', 'import_module', 'ValueError', 'ImportError', 'startswith', '_init_member_tools', 'replace', 'append', 'get', 'get_pgvector_memory', 'get_tool', 'tool_class', '_init_member_memory', '_get_llm_model', '_init_member_storage', 'len', 'error', 'strip', 'warning', 'to_phidata_tool', 'hasattr', 'lower', 'getattr', 'rsplit', 'info', 'Team'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          "line": 14,
          "module": "packages.llm.src.portkey_client",
          "item": "PortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          "line": 15,
          "module": "packages.memory.src.base",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          "line": 16,
          "module": "packages.phidata.src.cloudsql_pgvector",
          "item": "get_pg_agent_storage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          "line": 16,
          "module": "packages.phidata.src.cloudsql_pgvector",
          "item": "get_pgvector_memory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
          "line": 17,
          "module": "packages.tools.src.base",
          "item": "ToolRegistry",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/setup_mcp_database.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "psycopg",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "psycopg",
            "item": "sql",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_mcp_database",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'commit', 'execute', 'setup_mcp_database', 'getenv', 'print', 'connect', 'cursor'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.roo/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/examples/simplified_agent_example.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 107
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "AgentCapability",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "register_default_agents",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_context",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 46,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SimpleAgent",
            "line": 30,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CodeAgent",
            "line": 43,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_simplified_agent_registry', 'getLogger', 'run_example', 'StreamHandler', 'select_agent_for_context', 'run', 'register_agent', 'CodeAgent', 'get_agent_status', 'create_context', 'basicConfig', 'register_default_agents', 'info', 'process', 'AgentContext', 'SimpleAgent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/examples/memory_management_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.context_pruner",
            "item": "ContextPruner",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_interface",
            "item": "MemoryInterface",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_profiler",
            "item": "MemoryProfiler",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.redis_lru_cache",
            "item": "RedisLRUCache",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.tiered_storage",
            "item": "TieredStorageManager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_environment_variables",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "BaseMemoryManager",
            "line": 25,
            "bases": [
              "MemoryInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'check_environment_variables', 'MemoryItem', 'getLogger', 'RedisLRUCache', 'set_redis_cache', 'run', 'prune_conversation_history', 'main', 'ContextPruner', 'disconnect', 'join', 'close', 'store_memory_item', 'get', 'BaseMemoryManager', 'get_memory_usage', 'range', 'now', 'start_profiling', 'get_alerts', 'get_conversation_history', 'basicConfig', 'len', 'add_memory_item', 'initialize', 'warning', 'values', 'collect_metrics', 'set_tiered_storage', 'connect', 'get_session_items', 'is_memory_pressure_detected', 'TieredStorageManager', 'info', 'MemoryProfiler', 'stop_profiling'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
          "line": 14,
          "module": "packages.shared.src.memory.context_pruner",
          "item": "ContextPruner",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
          "line": 15,
          "module": "packages.shared.src.memory.memory_interface",
          "item": "MemoryInterface",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
          "line": 16,
          "module": "packages.shared.src.memory.memory_profiler",
          "item": "MemoryProfiler",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
          "line": 17,
          "module": "packages.shared.src.memory.redis_lru_cache",
          "item": "RedisLRUCache",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
          "line": 18,
          "module": "packages.shared.src.memory.tiered_storage",
          "item": "TieredStorageManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/examples/credential_management_example.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 22
          },
          {
            "module": "json",
            "alias": null,
            "line": 23
          },
          {
            "module": "os",
            "alias": null,
            "line": 24
          },
          {
            "module": "sys",
            "alias": null,
            "line": 25
          }
        ],
        "from": [
          {
            "module": "core.security.credential_manager",
            "item": "get_credential_manager",
            "alias": null,
            "line": 31,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'example_memory_system', 'run', 'main', 'dirname', 'example_gcp_services', 'get', 'clear', 'print', 'str', 'example_fastapi_integration', 'dumps', 'len', 'get_credential_manager', 'example_credential_rotation', 'example_basic_usage', 'abspath', 'get_json_secret', 'get_service_account_key', 'insert', 'get_secret'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/examples/data_ingestion_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 207
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.data_ingestion.ingestion_pipeline",
            "item": "DataIngestionPipeline",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'run', 'rmtree', 'ingest_api', 'loads', 'main', 'demo_api_ingestion', 'ingest_directory', 'ingest_batch', 'join', 'ingest_file', 'demo_file_ingestion', 'append', 'demo_batch_ingestion', 'get', 'DataIngestionPipeline', 'mkdir', 'print', 'str', 'dumps', 'get_ingestion_stats', 'len', 'write_text', 'shutdown', 'exists', 'items', 'demo_statistics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/examples/claude_monitoring_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "setup_logging",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.monitoring.claude_monitor",
            "item": "ClaudeMonitor",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.monitoring.monitored_litellm_client",
            "item": "MonitoredLiteLLMClient",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMMessage",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'demo_error_handling', 'run', 'main', 'LLMMessage', 'setup_logging', 'MonitoredLiteLLMClient', 'export_monitoring_data', 'get_monitoring_summary', 'ClaudeMonitor', 'range', 'str', 'demo_performance_monitoring', 'split', 'getenv', 'len', 'sum', 'get_metrics_summary', 'error', 'warning', 'demo_basic_monitoring', 'demo_cost_tracking', 'demo_export_data', 'info', 'items', 'chr', 'get_logger', 'chat_completion'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/examples/portkey_virtual_keys_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "os",
            "alias": null,
            "line": 15
          },
          {
            "module": "sys",
            "alias": null,
            "line": 22
          }
        ],
        "from": [
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.portkey_client",
            "item": "PortkeyClient",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'run_model', 'len', 'abspath', 'dirname', 'run', 'append', 'get_settings', 'basicConfig', 'info', 'PortkeyClient', 'generate_response', 'main'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/examples/portkey_virtual_keys_demo.py",
          "line": 27,
          "module": "packages.shared.src.llm_client.portkey_client",
          "item": "PortkeyClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/examples/litellm_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 25
          },
          {
            "module": "os",
            "alias": null,
            "line": 26
          },
          {
            "module": "sys",
            "alias": null,
            "line": 27
          },
          {
            "module": "nest_asyncio",
            "alias": null,
            "line": 41
          },
          {
            "module": "litellm",
            "alias": null,
            "line": 49
          },
          {
            "module": "portkey_ai",
            "alias": null,
            "line": 57
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "litellm",
            "item": "completion",
            "alias": null,
            "line": 50,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_litellm",
            "line": 78,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "basic_completion_example",
            "line": 135,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "advanced_routing_example",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "portkey_integration_example",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "openrouter_integration_example",
            "line": 225,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fallback_example",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "multi_provider_example",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "smart_model_router",
            "line": 294,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'getLogger', 'load_config', 'completion', 'basic_completion_example', 'advanced_routing_example', 'add_model', 'multi_provider_example', 'StreamHandler', 'pop', 'as_litellm', 'fallback_example', 'openrouter_integration_example', 'get', 'int', 'str', 'apply', 'any', 'basicConfig', 'portkey_integration_example', 'Cache', 'getenv', 'smart_model_router', 'len', 'exit', 'error', 'warning', 'lower', 'all', 'hasattr', 'Portkey', 'exists', 'info', 'setup_litellm'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/examples/litellm_integration.py",
          "line": 41,
          "module": "nest_asyncio",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/examples/memory_management_example.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "FirestoreConfig",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "MemoryBackendType",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "MemoryConfig",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "TelemetryConfig",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "VectorSearchConfig",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.config",
            "item": "VectorSearchType",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.factory",
            "item": "MemoryManagerFactory",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.telemetry",
            "item": "configure_telemetry",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.telemetry",
            "item": "log_operation",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.telemetry",
            "item": "trace_operation",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 28,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'MemoryItem', 'getLogger', 'enumerate', 'run', 'TelemetryConfig', 'main', 'create_memory_manager', 'perform_semantic_search', 'join', 'VectorSearchConfig', 'dirname', 'close', 'trace_operation', 'append', 'semantic_search', 'MemoryConfig', 'example_from_env', 'configure_telemetry', 'FirestoreConfig', 'get_available_vector_search_providers', 'get_available_backends', 'health_check', 'basicConfig', 'len', 'log_operation', 'add_memory_item', 'example_with_config', 'abspath', 'info', 'add_memory_items', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "FirestoreConfig",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "MemoryBackendType",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "MemoryConfig",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "TelemetryConfig",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "VectorSearchConfig",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 18,
          "module": "packages.shared.src.memory.config",
          "item": "VectorSearchType",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 26,
          "module": "packages.shared.src.memory.factory",
          "item": "MemoryManagerFactory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 27,
          "module": "packages.shared.src.memory.telemetry",
          "item": "configure_telemetry",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 27,
          "module": "packages.shared.src.memory.telemetry",
          "item": "log_operation",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/examples/memory_management_example.py",
          "line": 27,
          "module": "packages.shared.src.memory.telemetry",
          "item": "trace_operation",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/cherry_ai_vultr_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Database', 'export', 'Instance', 'Config', 'Vpc', 'Kubernetes'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/cherry_ai_vultr_stack.py",
          "line": 7,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/vultr_deployment.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "base64",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "export",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_user_data",
            "line": 105,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'export', 'Instance', 'FirewallRule', 'LoadBalancer', 'DnsRecord', 'Vpc', 'concat', 'encode', 'append', 'Config', 'get', 'range', 'create_user_data', 'DnsDomain', 'b64encode', 'decode', 'len', 'require_secret', 'FirewallGroup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/vultr_deployment.py",
          "line": 7,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/__main__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 7
          },
          {
            "module": "pulumi_postgresql",
            "alias": "postgresql",
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "export",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'export', 'GrantOptsArgs', 'Instance', 'FirewallRule', 'DatabaseOptsArgs', 'Vpc', 'concat', 'Schema', 'Config', 'Role', 'get', 'SshKey', 'SchemaOptsArgs', 'Database', 'apply', 'Grant', 'require_secret', 'FirewallGroup', 'Provider', 'items', 'RoleOptsArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/__main__.py",
          "line": 7,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infrastructure/__main__.py",
          "line": 8,
          "module": "pulumi_postgresql",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/domain_separation.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'export', 'Ingress', 'Config', 'Deployment', 'Service', 'get', 'items', 'concat', 'Namespace'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/domain_separation.py",
          "line": 7,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/shared/circuit_breaker.py": {
      "imports": {
        "standard": [
          {
            "module": "time",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 7,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__call__",
            "line": 14,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitBreaker",
            "line": 6,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'time', 'func', 'wraps', 'Exception'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "random",
            "alias": null,
            "line": 322
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "circuit_breaker",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "state",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "_change_state",
            "line": 68,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_should_attempt_reset",
            "line": 88,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "call",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_success",
            "line": 158,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_failure",
            "line": 171,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 184,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset",
            "line": 194,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 211,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 242,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_breaker",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_state_change",
            "line": 257,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_global_metrics",
            "line": 267,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_metrics",
            "line": 280,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_health_status",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unreliable_service",
            "line": 330,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b801443d0>"
            ]
          },
          {
            "name": "sync_wrapper",
            "line": 222,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7fb1fd90>"
            ]
          }
        ],
        "classes": [
          {
            "name": "CircuitState",
            "line": 17,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreakerError",
            "line": 23,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "EnhancedCircuitBreaker",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CircuitBreakerManager",
            "line": 237,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_change_state', 'getLogger', 'monitoring_callback', 'sleep', 'get_metrics', 'CircuitBreakerError', 'append', 'range', 'now', 'print', '_on_success', 'func', 'CircuitBreakerManager', 'iscoroutinefunction', 'EnhancedCircuitBreaker', 'isoformat', 'wraps', 'len', 'timedelta', 'sum', 'circuit_breaker', 'call', 'random', '_on_failure', 'warning', 'Exception', 'call_async', 'values', '_should_attempt_reset', 'info', 'items', '_update_global_metrics', 'unreliable_service'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "logging",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "asyncpg",
            "item": "Connection",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "asyncpg",
            "item": "Pool",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 55,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedDatabase",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Lock', 'RuntimeError', 'error', 'getLogger', 'dict', 'int', 'execute', 'release', 'close', 'transaction', 'fetchrow', 'fetch', 'info', 'fetchval', 'initialize_pool', 'getenv', 'create_pool', 'acquire'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 3,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/retry_utils.py": {
      "imports": {
        "standard": [
          {
            "module": "time",
            "alias": null,
            "line": 2
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "retry",
            "line": 6,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 7,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7fb2b750>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'func', 'wraps', 'print', 'sleep'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/env_config.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "pydantic",
            "item": "BaseSettings",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "cherry_aiSettings",
            "line": 9,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'cherry_aiSettings', 'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/health_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "ProviderStatus",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "RouterHealth",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.connection_manager",
            "item": "get_connection_manager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "settings",
            "alias": null,
            "line": 282,
            "level": 0
          },
          {
            "module": "core.cache_manager",
            "item": "get_cache_manager",
            "alias": null,
            "line": 228,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 49,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_health_check",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HealthStatus",
            "line": 21,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ComponentHealth",
            "line": 29,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "HealthMonitor",
            "line": 38,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'create_task', 'fromtimestamp', 'startswith', 'sleep', 'check_provider_health', 'get_metrics', 'get_circuit_breaker_status', 'Lock', 'dict', 'replace', 'append', '_check_and_update_component', 'get', 'get_cache_manager', '_run_health_checks', 'get_connection_manager', 'str', '_check_and_update_provider', 'ComponentHealth', 'isoformat', 'any', 'RouterHealth', 'timeout', 'check_func', 'error', 'HealthMonitor', 'all', 'values', 'get_health_status', 'request', 'utcnow', 'ProviderStatus', 'gather', 'time', 'info', 'items', 'cancel', 'field', 'start', '_monitor_loop'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/health_monitor.py",
          "line": 228,
          "module": "core.cache_manager",
          "item": "get_cache_manager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/mode_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 21
          },
          {
            "module": "os",
            "alias": null,
            "line": 22
          },
          {
            "module": "re",
            "alias": null,
            "line": 23
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 29
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 513
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "ClassVar",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_mode_manager",
            "line": 504,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_write_file",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "completed",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 141,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_configuration",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "switch_mode",
            "line": 216,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_write_file",
            "line": 239,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_file_access",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_workflow",
            "line": 279,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "advance_workflow",
            "line": 313,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "suggest_next_modes",
            "line": 347,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_model_for_current_mode",
            "line": 397,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_workflow_state",
            "line": 409,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_workflow_state",
            "line": 453,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "FileAccessError",
            "line": 41,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowError",
            "line": 44,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "Mode",
            "line": 48,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "WorkflowStep",
            "line": 92,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Workflow",
            "line": 105,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ModeManager",
            "line": 127,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Workflow', 'Path', 'safe_load', 'getLogger', 'field', 'enumerate', 'suggest_next_modes', 'add_argument', 'parse_args', 'join', 'dirname', 'fromisoformat', 'append', 'get', 'print', 'now', 'can_write_file', 'validate_file_access', 'split', 'WorkflowStep', 'isoformat', 'any', 'ModeManager', 'basicConfig', 'len', 'Mode', 'makedirs', 'dump', 'start_workflow', 'error', 'reversed', 'abspath', 'match', 'strip', 'all', 'open', 'lower', 'load_configuration', 'exists', 'info', 'items', 'switch_mode', 'ArgumentParser', 'get_mode_manager'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseSettings",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "RouterConfig",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_settings",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b801476d0>"
            ]
          },
          {
            "name": "get_router_config",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_database_url",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b80024110>"
            ]
          },
          {
            "name": "validate_api_keys",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b80115810>"
            ]
          },
          {
            "name": "to_router_config",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 14,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 105,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'validator', 'Field', 'replace', 'Settings', 'to_router_config', 'ValueError', 'get_settings', 'RouterConfig', 'getenv', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/main.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "signal",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceRegistry",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.dragonfly",
            "item": "DragonflyConnection",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.mongodb",
            "item": "MongoDBConnection",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "EventPriority",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_cherry_ai_core",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_event_handlers",
            "line": 95,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "signal_handler",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiCore",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'ServiceRegistry', 'DragonflyConnection', 'run', 'create_task', 'get_event_bus', 'sleep', 'main', 'cherry_aiCore', 'get_cherry_ai_core', 'disconnect', 'get_memory_service', '_periodic_memory_cleanup', 'append', 'health_check_all', 'keys', 'get', 'publish', 'MongoDBConnection', 'get_event_loop', 'register_service', 'signal', 'get_settings', '_initialize_connections', 'basicConfig', 'get_secret_value', 'error', 'initialize', 'warning', 'shutdown', 'subscribe', 'gather', 'time', 'info', 'items', 'cancel', 'start', '_setup_event_handlers', 'cleanup', 'connect', '_periodic_health_check'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/connection_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "stop_after_attempt",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "wait_exponential",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry_if_exception_type",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "before_sleep_log",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "settings",
            "alias": null,
            "line": 271,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 50,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 218,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_circuit_breaker_status",
            "line": 234,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitBreakerState",
            "line": 22,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ConnectionManager",
            "line": 38,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Timeout', 'getLogger', 'Limits', 'ValueError', 'aclose', 'stop_after_attempt', '_make_request', 'fromtimestamp', 'wait_exponential', 'Lock', 'AsyncClient', 'get', 'clear', 'CircuitBreakerState', 'before_sleep_log', 'retry', 'isoformat', 'ConnectionManager', 'len', 'sum', 'Exception', 'warning', 'values', 'request', 'raise_for_status', 'time', 'info', 'retry_if_exception_type', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/logging_config.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_logging",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_logger",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "JSONFormatter",
            "line": 12,
            "bases": [
              "Formatter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'StreamHandler', 'getLogger', 'JSONFormatter', 'getMessage', 'dumps', 'getattr', 'Formatter', 'addHandler', 'isoformat', 'removeHandler', 'setLevel', 'items', 'upper', 'now', 'formatException', 'FileHandler', 'setFormatter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/llm_types.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "UseCase",
            "line": 12,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ModelTier",
            "line": 24,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RouterConfig",
            "line": 31,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModelMapping",
            "line": 61,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMRequest",
            "line": 77,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMResponse",
            "line": 91,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ProviderStatus",
            "line": 103,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RouterHealth",
            "line": 113,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 55,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 72,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/coordination/version_management_implementation.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "semantic_version",
            "alias": null,
            "line": 15
          },
          {
            "module": "networkx",
            "alias": "nx",
            "line": 16
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 17
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 18
          },
          {
            "module": "logging",
            "alias": null,
            "line": 20
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 486
          },
          {
            "module": "re",
            "alias": null,
            "line": 254
          },
          {
            "module": "re",
            "alias": null,
            "line": 187
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 46,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "is_compatible_with",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "calculate_update_priority",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 103,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_parse_requirement",
            "line": 252,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 278,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_component",
            "line": 281,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_conflicts",
            "line": 298,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_are_constraints_compatible",
            "line": 318,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_update_order",
            "line": 331,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 343,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_group_by_type",
            "line": 446,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_recommendations",
            "line": 460,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ComponentType",
            "line": 25,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Version",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Component",
            "line": 66,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "VersionScanner",
            "line": 100,
            "bases": [],
            "decorators": []
          },
          {
            "name": "DependencyGraph",
            "line": 275,
            "bases": [],
            "decorators": []
          },
          {
            "name": "VersionManager",
            "line": 340,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'group', 'add_argument', 'stat', 'min', 'lstrip', 'parse_args', 'check_updates', 'encode', '_generate_recommendations', 'get', 'scan_infrastructure', 'dumps', 'basicConfig', 'initialize', 'strip', 'sha256', 'utcnow', 'items', 'ArgumentParser', 'getLogger', 'read', '_are_constraints_compatible', 'Spec', 'run', 'startswith', 'glob', 'scan_npm_packages', 'scan_docker_images', 'join', 'add_node', '_group_by_type', 'load', 'findall', 'append', 'Component', 'DiGraph', 'print', 'nodes', 'save_registry', 'any', 'sum', 'dump', 'error', 'match', 'open', 'exists', 'gather', 'rsplit', '_parse_requirement', 'DependencyGraph', 'Path', 'safe_load', 'generate_lock_file', 'list', 'scan_all', 'calculate_update_priority', 'main', 'isinstance', 'VersionManager', 'in_edges', 'Version', 'scan_database_schemas', 'find_conflicts', 'max', 'VersionScanner', 'add_component', 'values', 'field', 'fromtimestamp', 'update', 'hexdigest', 'isoformat', 'resolve', 'len', 'generate_report', 'add_edge', 'scan_python_packages', 'topological_sort', 'warning'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
          "line": 15,
          "module": "semantic_version",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
          "line": 16,
          "module": "networkx",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/.ai-memory/initialize.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 13
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 85
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "initialize_memory_system",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'symlink', 'StreamHandler', 'join', 'dirname', 'initialize_memory_system', 'now', 'isoformat', 'basicConfig', 'copy2', 'makedirs', 'dump', 'exit', 'error', 'abspath', 'warning', 'open', 'exists', 'write', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log",
            "line": 31,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_command",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_1_fix_dependencies",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_2_setup_database",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_3_start_services",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_4_test_api_connections",
            "line": 237,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_5_implement_enhancements",
            "line": 302,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "step_6_run_tests",
            "line": 432,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_proof_of_functionality",
            "line": 579,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_complete_setup",
            "line": 687,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RooIntegrationSetup",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'log', 'chmod', 'run', 'strftime', 'RooIntegrationSetup', 'replace', 'step_func', 'mkdir', 'now', 'print', 'str', 'title', 'len', 'sum', 'run_complete_setup', 'exit', 'open', 'write_text', 'run_command', 'values', 'write', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/infrastructure_tests.py": {
      "imports": {
        "standard": [
          {
            "module": "unittest",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "scripts.enhanced_provisioning",
            "item": "EnhancedProvisioner",
            "alias": null,
            "line": 58,
            "level": 0
          },
          {
            "module": "scripts.ai_infrastructure_monitor",
            "item": "AIInfrastructureMonitor",
            "alias": null,
            "line": 77,
            "level": 0
          },
          {
            "module": "shared.enhanced_circuit_breaker",
            "item": "EnhancedCircuitBreaker",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_async_test",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_nginx_config_exists",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_circuit_breaker_imported",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_rate_limits_configured",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_enhanced_provisioning_exists",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_rollback_script_exists",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_provisioning_with_retry",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b801100d0>"
            ]
          },
          {
            "name": "test_ai_monitor_exists",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_all_domains_configured",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_github_workflow_updated",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestAPIGateway",
            "line": 10,
            "bases": [
              "TestCase"
            ],
            "decorators": []
          },
          {
            "name": "TestProvisioning",
            "line": 42,
            "bases": [
              "TestCase"
            ],
            "decorators": []
          },
          {
            "name": "TestMonitoring",
            "line": 67,
            "bases": [
              "TestCase"
            ],
            "decorators": []
          },
          {
            "name": "TestIntegration",
            "line": 93,
            "bases": [
              "TestCase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'assertIsNotNone', 'run_until_complete', 'assertGreater', 'read', 'main', 'load', 'assertEqual', 'get_event_loop', 'range', 'fail', 'len', 'patch', 'assertIn', 'provision_with_retry', 'Exception', 'open', 'assertTrue', 'collect_metrics', 'exists', 'detect_anomalies', 'EnhancedProvisioner', 'AIInfrastructureMonitor', 'items', 'Mock'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_cherry_ai_final.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 41
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 125
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 193
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 271
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 236
          },
          {
            "module": "redis",
            "alias": null,
            "line": 251
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "get_all_agents",
            "alias": null,
            "line": 94,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "run_agent_task",
            "alias": null,
            "line": 94,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 165,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 344,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiFinalTest",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'run', 'get_all_agents', 'run_agent_task', 'strftime', 'run_all_tests', 'main', 'cherry_aiFinalTest', 'list_all', 'close', 'test_func', 'AsyncClient', 'get', 'keys', 'fetchval', 'ping', 'print', 'now', 'str', 'is_ready', 'delete_by_id', 'split', 'isoformat', 'Redis', 'any', 'basicConfig', 'initialize_pool', 'len', 'generate_report', 'dump', 'exit', 'fetch_one', 'error', 'strip', 'warning', 'open', 'UnifiedDatabase', 'info', 'connect_to_local', 'items', 'insert', 'fetch_object_by_id', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 352
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_deployment_config",
            "line": 35,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_prerequisites",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_pulumi_stack",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_infrastructure",
            "line": 119,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_kubernetes_resources",
            "line": 162,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_health_checks",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_monitoring",
            "line": 233,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "perform_blue_green_deployment",
            "line": 255,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_deploy_to_environment",
            "line": 290,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_run_smoke_tests",
            "line": 296,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_switch_traffic",
            "line": 310,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_deployment_health",
            "line": 316,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_rollback_deployment",
            "line": 321,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_deployment_report",
            "line": 326,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiDeployment",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'setup_kubernetes_resources', 'add_argument', 'run', 'setup_pulumi_stack', 'run_health_checks', 'strftime', 'loads', 'sleep', 'main', '_deploy_to_environment', 'parse_args', '_run_smoke_tests', 'append', 'get', 'mkdir', 'print', 'now', 'str', '_switch_traffic', 'dumps', '_load_deployment_config', 'isoformat', 'deploy_infrastructure', 'basicConfig', '_check_deployment_health', 'getenv', 'len', 'setup_monitoring', 'home', '_rollback_deployment', 'exit', 'cherry_aiDeployment', 'error', 'warning', 'Exception', 'write_text', 'exists', 'check_prerequisites', 'generate_deployment_report', 'chdir', 'info', 'ArgumentParser', 'perform_blue_green_deployment', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_secrets_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urlparse",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_secrets",
            "line": 24,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_github_secrets",
            "line": 33,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_local_secrets",
            "line": 53,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_database_url",
            "line": 86,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_required",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_database_url",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_to_env",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_to_env_file",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_database_connection",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_database",
            "line": 187,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SecretsManager",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'setup_database', 'ValueError', 'lstrip', 'SecretsManager', 'urlparse', 'startswith', 'main', 'cursor', 'update', '_load_secrets', 'close', 'get', 'print', '_parse_database_url', 'str', '_load_local_secrets', 'split', 'get_database_url', 'fetchone', 'export_to_env', 'len', 'exit', '_load_github_secrets', 'execute', 'strip', 'open', 'save_to_env_file', 'exists', 'write', 'items', 'verify_database_connection', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/complete_domain_coordination.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 237
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "domain_infrastructure_conductor",
            "item": "DomainInfrastructureconductor",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'chmod', 'run', 'DomainInfrastructureconductor', 'main', 'create_airbyte_automation_script', 'create_domain_api_gateway', 'create_airbyte_config', 'print', 'str', 'create_domain_interfaces', 'create_github_actions_workflow', 'create_weaviate_cluster_config', 'create_pulumi_infrastructure', 'create_weaviate_provisioning_script', 'open', 'write', 'items', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/generate_env_from_pulumi.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_pulumi_config",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_env_file",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'read_text', 'Path', 'generate_env_file', 'getcwd', 'lower', 'split', 'replace', 'get_pulumi_config', 'write_text', 'run', 'exists', 'chdir', 'get', 'items', 'loads', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ai_code_assistant.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "scripts.setup_secrets_manager",
            "item": "SecretsManager",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AICodeAssistant",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'code_review', 'Path', 'interactive_session', 'getLogger', 'read', 'post', 'ask_claude', 'run', 'SecretsManager', 'startswith', 'generate_code', 'main', 'ClientSession', 'AICodeAssistant', 'join', 'dirname', 'input', 'append', 'get', 'print', 'ask_openai', 'str', 'split', 'basicConfig', 'upper', 'text', 'json', 'explain_code', 'abspath', 'strip', 'lower', 'open', 'exists'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/roo_integration_standalone.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "init_database",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_execution",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_mode_stats",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "StandaloneRooIntegration",
            "line": 10,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'commit', 'execute', 'close', 'dumps', 'StandaloneRooIntegration', 'fetchall', 'print', 'connect', 'init_database', 'cursor'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/check_venv.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 1
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_virtual_environment",
            "line": 5,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'hasattr', 'check_virtual_environment', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/check_dependencies.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 1
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 2
          },
          {
            "module": "sys",
            "alias": null,
            "line": 3
          },
          {
            "module": "pkg_resources",
            "alias": null,
            "line": 5
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_installed_packages",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_required_packages",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_dependencies",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'strip', 'lower', 'split', 'open', 'add_argument', 'get_installed_packages', 'ArgumentParser', 'append', 'run', 'check_dependencies', 'items', 'startswith', 'get_required_packages', 'print', 'parse_args', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/mcp_integration_check.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "re",
            "alias": null,
            "line": 14
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 15
          },
          {
            "module": "sys",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 259,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_ai_context_files",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mcp_configuration",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_integration_files",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mcp_servers_running",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_launch_scripts",
            "line": 167,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 243,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPIntegrationChecker",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'list', 'run', 'main', 'check_ai_context_files', 'check_mcp_servers_running', 'load', 'append', 'MCPIntegrationChecker', 'keys', 'get', 'check_integration_files', 'print', 'check_mcp_configuration', 'access', 'any', 'len', 'generate_report', 'exit', 'open', 'exists', 'check_launch_scripts', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_api_keys.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_from_environment",
            "line": 19,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_api_key",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_to_env_file",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_to_environment",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "display_status",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SimpleSecretsManager",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'SimpleSecretsManager', '_load_from_environment', 'strip', 'add_api_key', 'split', 'open', 'sorted', 'save_to_env_file', 'display_status', 'write', 'get', 'items', 'len', 'main', 'print', 'export_to_environment', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/conductor_daemon.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'Path', 'open', 'load', 'run', 'load_dotenv', 'now', 'get', 'items', 'sleep', 'insert', 'run_scheduled_workflows', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/architecture_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "analyze_directory_structure",
            "line": 29,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_domain_separation",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_infrastructure_flexibility",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_service_integration",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_recommendations",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_analysis_report",
            "line": 305,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_analysis",
            "line": 328,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ArchitectureAnalyzer",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'chmod', 'list', 'analyze_service_integration', 'generate_recommendations', 'min', 'glob', 'endswith', 'round', 'analyze_infrastructure_flexibility', 'analyze_directory_structure', 'append', 'save_analysis_report', 'print', 'now', 'walk', 'str', 'relative_to', 'ArchitectureAnalyzer', 'isoformat', 'any', 'len', 'sum', 'dump', 'defaultdict', 'run_analysis', 'strip', 'analyze_domain_separation', 'lower', 'all', 'open', 'values', 'write', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 242
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "shared.enhanced_circuit_breaker",
            "item": "EnhancedCircuitBreaker",
            "alias": null,
            "line": 244,
            "level": 0
          },
          {
            "module": "shared.enhanced_circuit_breaker",
            "item": "circuit_breaker_manager",
            "alias": null,
            "line": 244,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "validate_all",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_rate_limits",
            "line": 53,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_weaviate_configs",
            "line": 110,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_airbyte_configs",
            "line": 148,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_nginx_routing",
            "line": 180,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_circuit_breakers",
            "line": 228,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_domain_isolation",
            "line": 255,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_print_results",
            "line": 284,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DomainInfrastructureValidator",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'DomainInfrastructureValidator', 'main', '_validate_rate_limits', 'load', '_validate_domain_isolation', 'append', 'get', '_validate_weaviate_configs', '_print_results', 'print', 'str', '_validate_airbyte_configs', 'len', 'exit', 'validate_all', 'open', 'exists', 'insert', '_validate_nginx_routing', '_validate_circuit_breakers'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/start_cherry_ai_services.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_docker",
            "line": 31,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_docker_compose",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_postgresql",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_redis",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "ensure_weaviate_running",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_mcp_server",
            "line": 169,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_mcp_health_endpoint",
            "line": 211,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 300,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiServiceManager",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'chmod', 'cherry_aiServiceManager', 'run', 'sleep', 'main', 'start_mcp_server', 'start_all_services', 'start_redis', 'start_postgresql', 'mkdir', 'print', 'format', 'poll', 'str', 'check_docker', 'basicConfig', 'Popen', 'create_mcp_health_endpoint', 'ensure_weaviate_running', 'generate_report', 'exit', 'all', 'open', 'write_text', 'values', 'exists', 'info', 'items', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_docs.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'read_text', 'rglob', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 16
          },
          {
            "module": "secrets",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_command",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ComprehensiveProductionDeploy",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'log', 'chmod', 'mkdir', 'write_text', 'print', 'append', 'run', 'strftime', 'now'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/automation_manager.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_weaviate_simple.py": {
      "imports": {
        "standard": [
          {
            "module": "weaviate",
            "alias": null,
            "line": 7
          },
          {
            "module": "weaviate.classes",
            "alias": "wvc",
            "line": 9
          }
        ],
        "from": [
          {
            "module": "weaviate",
            "item": "WeaviateClient",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_weaviate",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'is_ready', 'none', 'list_all', 'close', 'test_weaviate', 'connect_to_local', 'len', 'print', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/infrastructure_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "requests",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pymongo",
            "item": "MongoClient",
            "alias": null,
            "line": 60,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "print_status",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_header",
            "line": 29,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_env_var",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_digitalocean_api",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mongodb_connection",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_weaviate_connection",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_github_pat",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_pulumi_state",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 119,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getcwd', 'run', 'strftime', 'loads', 'main', 'check_pulumi_state', 'check_env_var', 'next', 'get', 'test_mongodb_connection', 'print', 'now', 'print_header', 'str', 'test_weaviate_connection', 'basename', 'len', 'server_info', 'sum', 'test_github_pat', 'exit', 'json', 'center', 'MongoClient', 'list_database_names', 'values', 'exists', 'chdir', 'items', 'test_digitalocean_api', 'print_status'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
          "line": 60,
          "module": "pymongo",
          "item": "MongoClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "pulumi",
            "alias": null,
            "line": 120
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 121
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 122
          },
          {
            "module": "fastapi",
            "alias": null,
            "line": 123
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp_server.servers.base_mcp_server",
            "item": "BaseMCPServer",
            "alias": null,
            "line": 223,
            "level": 0
          },
          {
            "module": "core.shared.utils",
            "item": "setup_logging",
            "alias": null,
            "line": 224,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 360,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "verify_file_structure",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_python_environment",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_mcp_servers",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_configurations",
            "line": 167,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_basic_functionality",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_recommendations",
            "line": 258,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 289,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiVerification",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'enumerate', 'generate_recommendations', 'run', 'strftime', 'sleep', 'main', 'isinstance', 'endswith', 'load', 'test_func', 'append', 'get', 'print', 'now', 'int', 'str', 'split', 'dumps', 'isoformat', 'basicConfig', 'len', 'upper', 'generate_report', 'dump', 'exit', 'read_text', 'strip', 'warning', 'all', 'cherry_aiVerification', 'open', 'write_text', 'values', 'test_async', 'exists', 'unlink', 'info', 'items', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_mcp_connection.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          },
          {
            "module": "mcp",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'Path', 'test_environment', '__import__', 'main', 'run', 'load_dotenv', 'get', 'insert', 'test_mcp_import', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/health_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "socket",
            "alias": null,
            "line": 16
          },
          {
            "module": "sys",
            "alias": null,
            "line": 17
          },
          {
            "module": "time",
            "alias": null,
            "line": 18
          },
          {
            "module": "requests",
            "alias": null,
            "line": 22
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 288
          },
          {
            "module": "os",
            "alias": null,
            "line": 272
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 286,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_port",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_service_health",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_all_services",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "send_notification",
            "line": 118,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wait_for_service",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_prerequisites",
            "line": 237,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HealthMonitor",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'debug', 'add_argument', 'check_port', 'run', 'check_service_health', 'monitor_continuously', 'sleep', 'main', 'print_help', 'parse_args', 'round', 'pop', 'append', 'check_all_services', 'connect_ex', 'get', 'now', 'socket', 'str', 'dumps', 'isoformat', 'basicConfig', 'len', 'upper', 'send_notification', 'settimeout', 'exit', 'json', 'error', 'warning', 'HealthMonitor', 'hasattr', 'exists', 'check_prerequisites', 'wait_for_service', 'time', 'info', 'setLevel', 'items', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_weaviate_migration.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 22
          },
          {
            "module": "json",
            "alias": null,
            "line": 23
          },
          {
            "module": "logging",
            "alias": null,
            "line": 24
          },
          {
            "module": "os",
            "alias": null,
            "line": 25
          },
          {
            "module": "sys",
            "alias": null,
            "line": 26
          },
          {
            "module": "time",
            "alias": null,
            "line": 27
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 28
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 32
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 33
          },
          {
            "module": "psycopg2.extras",
            "alias": null,
            "line": 34
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 36
          },
          {
            "module": "redis",
            "alias": null,
            "line": 41
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "sentence_transformers",
            "item": "SentenceTransformer",
            "alias": null,
            "line": 35,
            "level": 0
          },
          {
            "module": "tqdm",
            "item": "tqdm",
            "alias": null,
            "line": 37,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "parse_args",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "connect_to_weaviate",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "connect_to_postgres",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "connect_to_dragonfly",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_embedding_model",
            "line": 179,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_collections",
            "line": 196,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_collection_schema",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_insert_retrieve",
            "line": 278,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_vector_search",
            "line": 350,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_hybrid_search",
            "line": 410,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_postgres_integration",
            "line": 467,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_dragonfly_integration",
            "line": 564,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_performance_tests",
            "line": 622,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 725,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'commit', 'add_argument', 'min', 'sleep', 'connect_to_weaviate', 'load_embedding_model', 'parse_args', 'next', 'encode', 'get', 'range', 'from_url', 'zip', 'dumps', 'split', 'test_postgres_integration', 'basicConfig', 'items', 'ArgumentParser', 'validate_collection_schema', 'do', 'connect', 'FileHandler', 'create', 'getLogger', 'uuid4', 'enumerate', 'AuthApiKey', 'validate_collections', 'strftime', 'StreamHandler', 'join', 'append', 'ping', 'test_hybrid_search', 'SentenceTransformer', 'with_limit', 'sum', 'ConnectionError', 'dump', 'error', 'connect_to_dragonfly', 'execute', 'hgetall', 'test_dragonfly_integration', 'open', 'setLevel', 'get_by_id', 'hset', 'main', 'isinstance', 'cursor', 'Client', 'now', 'is_ready', 'int', 'max', 'test_insert_retrieve', 'fetchone', 'tolist', 'Json', 'exit', 'all', 'test_vector_search', 'values', 'info', 'run_performance_tests', 'with_near_vector', 'delete', 'str', 'sorted', 'isoformat', 'len', 'warning', 'connect_to_postgres', 'with_hybrid', 'time'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
          "line": 35,
          "module": "sentence_transformers",
          "item": "SentenceTransformer",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/setup_cherry_ai_environment.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "run",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_environment",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "install_dependencies",
            "line": 111,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_configurations",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_ai_context",
            "line": 168,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_setup",
            "line": 261,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 305,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiSetup",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'run', 'startswith', 'append', 'setup_environment', 'print', 'str', 'split', 'sorted', 'setup_ai_context', 'copy', 'cherry_aiSetup', 'print_summary', 'getenv', 'install_dependencies', 'update_configurations', 'strip', 'open', 'exists', 'write', 'items', 'validate_setup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/initialize_weaviate.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_coordination_schema",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_weaviate",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'is_ready', 'str', 'create_coordination_schema', 'AuthApiKey', 'Client', 'dumps', 'create', 'get', 'initialize_weaviate', 'create_class', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 15
          },
          {
            "module": "os",
            "alias": null,
            "line": 16
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 17
          },
          {
            "module": "sys",
            "alias": null,
            "line": 18
          },
          {
            "module": "time",
            "alias": null,
            "line": 19
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 23
          },
          {
            "module": "requests",
            "alias": null,
            "line": 24
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 223,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_python_version",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_venv",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_command",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_status",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cmd_status",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cmd_start",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cmd_stop",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cmd_query",
            "line": 160,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cmd_health",
            "line": 182,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiCLI",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_service_status', 'post', 'Path', 'add_argument', 'run', 'sleep', 'main', 'parse_args', 'print_help', 'cmd_stop', 'get', 'cmd_start', 'process_iter', 'print', 'str', 'check_venv', 'cherry_aiCLI', 'check_python_version', 'len', 'Popen', 'exit', 'json', 'cmd_health', 'strip', 'open', 'run_command', 'cmd_status', 'add_subparsers', 'exists', 'add_parser', 'chdir', 'items', 'ArgumentParser', 'cmd_query'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/refactoring_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "json",
            "alias": null,
            "line": 16
          },
          {
            "module": "os",
            "alias": null,
            "line": 17
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 18
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 19
          },
          {
            "module": "sys",
            "alias": null,
            "line": 20
          },
          {
            "module": "time",
            "alias": null,
            "line": 21
          },
          {
            "module": "logging",
            "alias": null,
            "line": 27
          },
          {
            "module": "click",
            "alias": null,
            "line": 29
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "asdict",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "Progress",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "SpinnerColumn",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "TextColumn",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "BarColumn",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "TimeElapsedColumn",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "rich.panel",
            "item": "Panel",
            "alias": null,
            "line": 33,
            "level": 0
          },
          {
            "module": "rich.tree",
            "item": "Tree",
            "alias": null,
            "line": 34,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "cli",
            "line": 641,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3d1310>"
            ]
          },
          {
            "name": "preview",
            "line": 647,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3d3190>",
              "<ast.Call object at 0x7a6b7f3d3090>"
            ]
          },
          {
            "name": "execute",
            "line": 661,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3fcb90>",
              "<ast.Call object at 0x7a6b7f3fcd90>",
              "<ast.Call object at 0x7a6b7f3fd310>"
            ]
          },
          {
            "name": "rollback",
            "line": 673,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3fec10>",
              "<ast.Call object at 0x7a6b7f3fee10>"
            ]
          },
          {
            "name": "status",
            "line": 684,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3ffbd0>"
            ]
          },
          {
            "name": "validate",
            "line": 690,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3e7c10>"
            ]
          },
          {
            "name": "__post_init__",
            "line": 85,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 98,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_state",
            "line": 105,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_state",
            "line": 128,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_define_tasks",
            "line": 147,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_backup",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "preview_phase",
            "line": 309,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rollback_to_point",
            "line": 419,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "show_status",
            "line": 449,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Phase",
            "line": 43,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskStatus",
            "line": 51,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Task",
            "line": 60,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MigrationState",
            "line": 77,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Refactoringconductor",
            "line": 95,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Progress', 'read', 'group', 'add_row', 'run', 'Phase', 'strftime', 'startswith', 'sleep', 'BarColumn', 'move', '_load_state', 'asdict', 'update', 'show_status', 'join', 'add_column', 'is_file', 'option', 'create_backup', 'replace', 'load', 'append', 'fromisoformat', 'get', '_define_tasks', 'preview_phase', 'print', 'mkdir', 'now', 'sort', 'remove_task', 'Refactoringconductor', 'command', 'str', 'SpinnerColumn', 'title', 'execute_func', 'split', 'argument', 'sorted', 'add_task', '_save_state', 'isoformat', 'basicConfig', 'Task', 'confirm', 'ignore_patterns', 'len', 'sum', 'TimeElapsedColumn', 'dump', 'error', 'Table', 'execute_phase', 'TextColumn', 'strip', 'lower', 'warning', 'open', 'MigrationState', 'values', 'exists', 'write', 'rollback_to_point', 'Console', 'info', 'copytree', 'items', 'cwd', 'cli'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 12,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "implement_rate_limiting",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_circuit_breakers",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "enable_incremental_sync",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_retry_logic",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_all_optimizations",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructureOptimizer",
            "line": 11,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'run_all_optimizations', 'enable_incremental_sync', 'open', 'add_retry_logic', 'print', 'implement_rate_limiting', 'load', 'write', 'InfrastructureOptimizer', 'exists', 'get', 'items', 'add_circuit_breakers', 'mkdir', 'dump'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/final_cleanup.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 245,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 11,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "find_outdated_files",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_files_with_gcp_references",
            "line": 97,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_file_content",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_config_files",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "FinalCleanup",
            "line": 8,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'list', 'run', 'update_config_files', 'glob', 'main', 'find_outdated_files', 'input', 'is_file', 'replace', 'append', 'rglob', 'find_files_with_gcp_references', 'FinalCleanup', 'print', 'extend', 'str', 'relative_to', 'sub', 'sorted', 'any', 'len', 'update_file_content', 'read_text', 'lower', 'set', 'write_text', 'exists', 'unlink', 'items', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/next_phase_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_critical_path",
            "line": 108,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_identify_parallel_tracks",
            "line": 113,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_phase_tasks",
            "line": 120,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_agent_lifecycle_template",
            "line": 253,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_agent_health_template",
            "line": 475,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_persona_config_template",
            "line": 723,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_metrics_pipeline_template",
            "line": 1006,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ml_registry_template",
            "line": 1128,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "NextPhaseconductor",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'enumerate', '_persona_config_template', 'run', '_agent_lifecycle_template', 'create_initial_templates', '_identify_parallel_tracks', 'join', 'append', 'generate_technical_roadmap', 'get', '_calculate_critical_path', 'print', 'now', '_ml_registry_template', 'isoformat', 'upper', 'NextPhaseconductor', 'open', 'write', 'items', '_agent_health_template', '_metrics_pipeline_template', '_generate_phase_tasks'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/technical_roadmap_generator.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 498,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_define_phases",
            "line": 19,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_roadmap",
            "line": 284,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_critical_path",
            "line": 364,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_identify_parallel_work",
            "line": 372,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_resources",
            "line": 387,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_assess_risks",
            "line": 410,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_define_success_metrics",
            "line": 439,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_ci_cd_config",
            "line": 464,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TechnicalRoadmapGenerator",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'main', 'TechnicalRoadmapGenerator', 'join', 'fromisoformat', 'append', '_define_success_metrics', '_calculate_resources', '_calculate_critical_path', 'now', 'print', 'generate_ci_cd_config', 'max', 'isoformat', 'generate_roadmap', 'len', '_define_phases', 'timedelta', 'sum', 'dump', 'open', 'values', 'items', '_assess_risks', '_identify_parallel_work'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/create_first_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_templates",
            "item": "create_agent_from_answers",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'test_agent', 'len', 'abspath', 'dirname', 'get_agent_manager', 'add_task', 'run', 'register_agent', 'main', 'stop', 'start', 'sleep', 'publish', 'insert', 'create_agent_from_answers', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deep_cleanup.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "re",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 249,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 12,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "analyze_file",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "recommend_action",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_all_gcp_files",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DeepCleanup",
            "line": 9,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'run', 'stat', 'main', 'join', 'input', 'is_file', 'findall', 'append', 'rglob', 'print', 'extend', 'search', 'str', 'relative_to', 'sorted', 'DeepCleanup', 'any', 'len', 'dump', 'read_text', 'recommend_action', 'lower', 'open', 'unlink', 'items', 'analyze_file', 'find_all_gcp_files'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/update_dependencies.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 53
          },
          {
            "module": "json",
            "alias": null,
            "line": 68
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_pip_tools",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compile_requirements",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_outdated",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "security_audit",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'run', 'strftime', 'loads', 'main', 'input', 'append', 'get', 'now', 'security_audit', 'check_outdated', 'basicConfig', 'len', 'exit', 'error', 'strip', 'warning', 'compile_requirements', 'open', 'write', 'info', 'check_pip_tools'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/fix_remaining_issues.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "fix_file",
            "line": 7,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'Path', 'read', 'join', 'fix_file', 'sub', 'open', 'split', 'exists', 'write', 'items', 'len', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_database_consolidation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_postgresql_operations",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_weaviate_operations",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_unified_operations",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'add_to_knowledge_base', 'get_system_stats', 'search_memories', 'delete_agent', 'search_agent_context', 'strftime', 'test_weaviate_operations', 'main', 'dirname', 'append', 'get', 'store_agent_interaction', 'create_agent', 'store_conversation', 'now', 'str', 'create_session', 'health_check', 'test_postgresql_operations', 'store_memory', 'basicConfig', 'len', 'exit', 'error', 'abspath', 'search_knowledge', 'get_agent', 'get_stats', 'create_audit_log', 'info', 'test_unified_operations', 'insert', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/check_pre_commit_status.py": {
      "imports": {
        "standard": [
          {
            "module": "subprocess",
            "alias": null,
            "line": 4
          },
          {
            "module": "sys",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_command",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_hook_status",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_flake8_issues",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mypy_issues",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'run', 'count', 'main', 'endswith', 'append', 'get', 'print', 'check_flake8_issues', 'split', 'sorted', 'any', 'check_mypy_issues', 'len', 'sum', 'exit', 'defaultdict', 'strip', 'set', 'run_command', 'values', 'items', 'check_hook_status'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/complete_conductor_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_test_environment",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_conductor_config",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_mcp_test_script",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'chmod', 'create_mcp_test_script', 'open', 'load', 'setup_test_environment', 'write', 'update_conductor_config', 'main', 'print', 'system', 'dump'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_admin_ui.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 19
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 20
          },
          {
            "module": "sys",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "__future__",
            "item": "annotations",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Final",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run",
            "line": 29,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Path', 'strip', 'add_argument', 'run', 'exists', 'write', 'resolve', 'decode', 'check_output', 'startswith', 'ArgumentParser', 'main', 'print', 'parse_args', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/verify_enhancements.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "importlib.util",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.database.extensions.cache_extensions",
            "item": "CacheExtensionMixin",
            "alias": null,
            "line": 84,
            "level": 0
          },
          {
            "module": "shared.database.extensions.session_extensions",
            "item": "SessionExtensionMixin",
            "alias": null,
            "line": 96,
            "level": 0
          },
          {
            "module": "shared.database.extensions.memory_extensions",
            "item": "MemoryExtensionMixin",
            "alias": null,
            "line": 108,
            "level": 0
          },
          {
            "module": "shared.database.extensions.pool_extensions",
            "item": "PoolExtensionMixin",
            "alias": null,
            "line": 120,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "verify_file_exists",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_module_imports",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'verify_file_exists', 'endswith', 'abspath', 'dirname', 'hasattr', 'replace', 'exists', 'spec_from_file_location', 'verify_module_imports', 'insert', 'main', 'print', 'module_from_spec'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ui_integration_spec.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 14,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_package_json",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_app_structure",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_deployment_config",
            "line": 453,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_ui_spec",
            "line": 566,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UIIntegrationSpec",
            "line": 11,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'UIIntegrationSpec', 'Path', 'open', 'create_deployment_config', 'print', 'write', 'generate_ui_spec', 'items', 'create_app_structure', 'create_package_json', 'mkdir', 'dump'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/version_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 15
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 638
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Info",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "start_http_server",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "REGISTRY",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "VersionRegistry",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Dependency",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "ComponentType",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Version",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Severity",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 109,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_affected_components",
            "line": 458,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_health_status",
            "line": 486,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_count_by_type",
            "line": 526,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 605,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HealthStatus",
            "line": 71,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AlertLevel",
            "line": 78,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "HealthCheck",
            "line": 86,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Alert",
            "line": 95,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "VersionMonitor",
            "line": 106,
            "bases": [],
            "decorators": []
          },
          {
            "name": "HealthCheckAPI",
            "line": 602,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'field', 'debug', '_check_version_conflicts', 'list', '_get_affected_components', 'check_vulnerabilities', 'Gauge', 'add_argument', 'run', '_count_by_type', 'check_alerts', 'scan_all', '_check_vulnerabilities', 'labels', 'run_health_checks', 'startswith', 'sleep', 'main', '_monitoring_loop', 'parse_args', 'isinstance', 'update_metrics', 'Counter', '_send_alert_resolution', 'replace', 'append', 'start_http_server', 'HealthCheck', 'get', 'stop', 'keys', 'now', 'Info', 'extend', 'print', 'str', 'max', 'title', 'dumps', '_send_alert', 'sorted', 'inc', 'isoformat', 'generate_dashboard_data', 'any', 'basicConfig', 'VersionRegistry', 'timedelta', 'len', 'sum', '_check_update_frequency', 'VersionMonitor', '_get_trend_data', 'error', 'warning', 'Histogram', '_check_outdated_dependencies', 'values', 'get_health_status', 'set', 'Alert', 'gather', 'info', '_check_license_compliance', 'items', 'start', 'ArgumentParser', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ml_model_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_registry",
            "line": 46,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_model",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_model",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "promote_model",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_registry",
            "line": 91,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ModelVersion",
            "line": 17,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MLModelRegistry",
            "line": 37,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'ValueError', 'ModelVersion', 'load', 'get', 'mkdir', 'now', 'register_model', 'sorted', 'to_dict', 'isoformat', '_save_registry', 'dump', 'promote_model', 'get_model', 'open', '_load_registry', 'values', 'exists', 'info', 'MLModelRegistry', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/performance_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 12
          },
          {
            "module": "statistics",
            "alias": null,
            "line": 15
          },
          {
            "module": "requests",
            "alias": null,
            "line": 694
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PerformanceAnalyzer",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'run', 'PerformanceAnalyzer', 'implement_optimizations', 'with_meta_count', 'min', 'analyze_vector_storage_efficiency', 'strftime', 'sleep', 'main', 'analyze_database_performance', 'isinstance', 'cursor', 'WeaviateManager', 'store_context', 'DatabaseLogger', 'replace', 'append', 'log_action', 'get', 'fetchall', 'range', 'print', 'now', 'median', 'str', 'analyze_workflow_execution_times', 'int', 'max', 'title', 'analyze_api_latencies', 'dumps', 'fetchone', 'isoformat', 'any', 'generate_optimization_recommendations', 'len', 'upper', 'mean', 'dump', 'run_full_analysis', 'stdev', 'execute', 'retrieve_context', 'open', 'aggregate', 'time', '_get_connection', 'items', 'do'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/system_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 12
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 16
          },
          {
            "module": "requests",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedWorkflowconductor",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "AgentRole",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskPriority",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WorkflowContext",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.eigencode.mock_analyzer",
            "item": "get_mock_analyzer",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "scripts.system_preparedness",
            "item": "SystemPreparednessChecker",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "scripts.optimize_without_eigencode",
            "item": "SystemOptimizer",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 205,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 231,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 381,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 381,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "SecretManager",
            "alias": null,
            "line": 754,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_validation_report",
            "line": 845,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_recommendations",
            "line": 872,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_display_summary",
            "line": 925,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SystemValidator",
            "line": 31,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'run_workflow', 'TaskDefinition', 'run', '_run_integration_tests', '_run_security_tests', 'main', 'isinstance', '_generate_validation_report', 'SystemValidator', 'WeaviateManager', 'store_context', 'rmdir', 'DatabaseLogger', 'test_func', 'append', 'execute_workflow', '_generate_recommendations', 'log_action', 'get', 'range', 'print', 'mkdir', 'create_workflow', 'now', 'str', 'int', 'Process', 'isoformat', 'any', 'len', 'sum', 'memory_info', 'dump', 'exit', 'validator', 'read_text', 'all', 'retrieve_context', '_run_performance_tests', 'write_text', 'EnhancedWorkflowconductor', 'open', '_validate_components', 'exists', '_display_summary', 'get_mock_analyzer', 'unlink', 'time', 'get_agent_metrics', 'items', 'run_full_validation', 'analyze_codebase', 'values', '_run_stress_tests', 'gather', 'get_secret'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 485
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedWorkflowconductor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "ai_components.coordination.conductor_integration_update",
            "item": "UpdatedAgentCoordinator",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.coordination.conductor_integration_update",
            "item": "update_conductor_config",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.agents.claude_integration",
            "item": "get_claude_integration",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "scripts.system_validation",
            "item": "SystemValidator",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "scripts.system_preparedness",
            "item": "SystemPreparednessChecker",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 289,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "AgentRole",
            "alias": null,
            "line": 289,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskPriority",
            "alias": null,
            "line": 289,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 325,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_update_configurations",
            "line": 98,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_roo_code_configs",
            "line": 124,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_mcp_configs",
            "line": 150,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_deployment_report",
            "line": 396,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnhancedSystemDeployer",
            "line": 29,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'TaskDefinition', 'run', 'get_enhanced_cursor_ai', 'update_conductor_config', 'generate_code', 'main', 'SystemPreparednessChecker', 'SystemValidator', 'DatabaseLogger', '_update_configurations', 'load', 'test_func', 'replace', 'review_code', 'append', 'UpdatedAgentCoordinator', 'execute_workflow', 'log_action', 'get', '_update_roo_code_configs', '_test_integrations', 'run_full_check', 'mkdir', 'print', 'create_workflow', '_check_system_preparedness', 'now', 'str', 'int', 'analyze_project', 'analyze_architecture', 'title', 'isoformat', 'get_claude_integration', 'len', 'upper', 'run_full_validation', 'dump', '_validate_system', '_deploy_components', 'exit', 'deploy_func', 'Exception', 'deploy_system', 'all', '_update_mcp_configs', '_validate_performance', 'open', 'EnhancedWorkflowconductor', 'write_text', 'values', 'exists', '_generate_deployment_report', 'time', 'items', 'print_exc', 'EnhancedSystemDeployer'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/health_check.py": {
      "imports": {
        "standard": [
          {
            "module": "requests",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "sys",
            "alias": null,
            "line": 5
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_service",
            "line": 7,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'get', 'check_service', 'items', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai_status.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_service",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'strip', 'open', 'load', 'run', 'exists', 'now', 'keys', 'check_service', 'get', 'strftime', 'items', 'len', 'startswith', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_design_automation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "ai_components.design.design_conductor",
            "item": "Designconductor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "ai_components.design.recraft_integration",
            "item": "RecraftDesignGenerator",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.design.dalle_integration",
            "item": "DALLEImageGenerator",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "IntelligentCache",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "scripts.comprehensive_ai_validation",
            "item": "ComprehensiveAIValidation",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 189,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "display_deployment_summary",
            "line": 520,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DesignAutomationDeployment",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'__import__', 'Path', '_check_prerequisites', 'get_performance_metrics', '_deploy_recraft_integration', 'RecraftDesignGenerator', 'run', 'generate_design_image', 'display_deployment_summary', 'generate_design_assets', 'main', '_optimize_system_performance', 'update', 'join', 'close', 'bool', 'replace', 'append', 'DALLEImageGenerator', 'get', '_deploy_caching_system', 'execute_query', 'create_design_project', '_setup_databases', 'print', 'now', 'str', 'DesignAutomationDeployment', 'title', 'initialize_database', 'isoformat', 'generate_design', '_test_system_integration', 'len', 'analyze_design_requirements', 'upper', 'sum', 'dump', 'exit', 'Designconductor', 'Exception', 'all', 'deploy_complete_system', 'open', 'set', 'values', '_generate_deployment_report', 'items', '_deploy_dalle_integration', 'optimize_cache', '_deploy_design_conductor', 'IntelligentCache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/bench_weaviate.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 1
          },
          {
            "module": "time",
            "alias": null,
            "line": 2
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 3
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 16
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'perf_counter', 'post', 'AsyncClient', 'run', 'raise_for_status', 'getenv', 'print', 'measure_latency'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/update_github_secrets.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 18
          },
          {
            "module": "os",
            "alias": null,
            "line": 19
          },
          {
            "module": "re",
            "alias": null,
            "line": 20
          },
          {
            "module": "sys",
            "alias": null,
            "line": 21
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 24
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_workflow",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_yaml",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "extract_secrets",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_naming_conventions",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_workflow",
            "line": 179,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_analysis",
            "line": 195,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SecretAnalyzer",
            "line": 32,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'safe_load', 'read', 'group', 'add_argument', 'count', 'parse_yaml', 'startswith', 'main', 'isinstance', 'parse_args', 'join', 'load_workflow', 'replace', 'findall', 'append', 'get', 'print', 'extend', 'analyze_naming_conventions', 'fix_workflow', 'compile', 'sorted', 'SecretAnalyzer', 'len', 'generate_report', 'exit', 'run_analysis', 'match', 'open', 'set', 'exists', 'write', 'items', 'ArgumentParser', 'extract_secrets'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/verify_roo_mcp_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMCPAdapter",
            "alias": null,
            "line": 67,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_roo_interface",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mcp_integration",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_actual_connections",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_enhancements",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_real_status",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'abspath', 'dirname', 'check_roo_interface', 'open', 'load', 'check_real_status', 'RooMCPAdapter', 'exists', 'check_actual_connections', 'analyze_enhancements', 'items', 'check_mcp_integration', 'insert', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_syntax.py": {
      "imports": {
        "standard": [
          {
            "module": "ast",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_python_file",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_python_files",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Path', 'endswith', 'relative_to', 'read', 'index', 'open', 'append', 'parse', 'exit', 'len', 'main', 'print', 'validate_python_file', 'cwd', 'find_python_files', 'walk'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/version_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 16
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 17
          },
          {
            "module": "re",
            "alias": null,
            "line": 18
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 618
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "asdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "parse",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__str__",
            "line": 80,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__lt__",
            "line": 89,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "affects_version",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "calculate_update_priority",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_component_type",
            "line": 183,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "get_component_type",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_requirement",
            "line": 235,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_component_type",
            "line": 297,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_component_type",
            "line": 351,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 416,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "save_registry",
            "line": 482,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_lock_file",
            "line": 507,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 534,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_recommendations",
            "line": 583,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ComponentType",
            "line": 28,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Severity",
            "line": 38,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Version",
            "line": 47,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Vulnerability",
            "line": 111,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Dependency",
            "line": 127,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DependencyScanner",
            "line": 174,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "PythonScanner",
            "line": 187,
            "bases": [
              "DependencyScanner"
            ],
            "decorators": []
          },
          {
            "name": "JavaScriptScanner",
            "line": 294,
            "bases": [
              "DependencyScanner"
            ],
            "decorators": []
          },
          {
            "name": "DockerScanner",
            "line": 348,
            "bases": [
              "DependencyScanner"
            ],
            "decorators": []
          },
          {
            "name": "VersionRegistry",
            "line": 413,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_scan_pyproject', 'group', 'add_argument', 'stat', 'lstrip', 'min', 'DockerScanner', 'parse_args', 'encode', '_generate_recommendations', 'get', 'split', 'dumps', 'basicConfig', 'strip', 'sha256', 'parse', 'items', 'ArgumentParser', 'getLogger', 'read', 'enumerate', 'check_vulnerabilities', 'run', 'startswith', 'glob', '_scan_dockerfile', 'load', 'findall', 'append', 'Dependency', 'print', 'save_registry', 'any', 'sum', 'dump', 'error', 'match', 'open', 'exists', 'gather', 'setLevel', '_parse_requirement', 'rsplit', 'Path', 'generate_lock_file', '_scan_requirements_file', 'scan_all', 'calculate_update_priority', 'main', 'isinstance', 'Version', 'now', '_scan_package_json', 'int', 'scan', 'PythonScanner', 'JavaScriptScanner', 'values', 'info', 'field', 'fromtimestamp', 'update', 'hexdigest', 'sort', 'str', 'relative_to', 'sorted', 'to_dict', 'isoformat', 'resolve', 'VersionRegistry', 'len', 'generate_report', 'cls', 'Vulnerability', 'warning', 'set'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/eigencode_installer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "requests",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log_attempt",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EigenCodeInstaller",
            "line": 30,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'run_all_methods', 'run', 'log_attempt', 'main', 'WeaviateManager', 'store_context', 'head', 'DatabaseLogger', 'EigenCodeInstaller', 'replace', 'install_from_file', 'append', 'log_action', 'get', 'print', 'now', 'str', 'split', 'dumps', 'method_func', 'isoformat', 'basicConfig', 'len', 'makedirs', 'dump', 'exit', 'json', 'error', 'strip', 'warning', 'lower', 'check_url_availability', 'open', 'exists', 'write', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/enhanced_provisioning.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_state",
            "line": 34,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_checkpoint",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rollback_point",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 72,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "provision_with_retry",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "provision_infrastructure",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_provision_network",
            "line": 129,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_provision_databases",
            "line": 165,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_provision_services",
            "line": 195,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_provision_monitoring",
            "line": 213,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_should_rollback",
            "line": 230,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rollback_to_last_checkpoint",
            "line": 235,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_provisioning",
            "line": 252,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_network",
            "line": 272,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_databases",
            "line": 277,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_services",
            "line": 282,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_monitoring",
            "line": 287,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_vpc",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_security_groups",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_postgres",
            "line": 169,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_weaviate_clusters",
            "line": 182,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_services",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_monitoring",
            "line": 217,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ProvisioningState",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedProvisioner",
            "line": 69,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', '_validate_databases', 'list', '_provision_network', '_provision_databases', 'format_exc', 'min', 'sleep', '_load_state', '_validate_monitoring', 'get_rollback_point', 'StreamHandler', 'pop', '_provision_services', 'load', 'append', 'validate_provisioning', 'keys', 'range', 'rollback_to_last_checkpoint', 'now', 'str', 'func', 'provision_infrastructure', 'dumps', '_validate_services', 'isoformat', 'basicConfig', 'dump', '_provision_monitoring', 'provision_with_retry', 'exit', 'ProvisioningState', 'error', '_should_rollback', 'warning', 'save', 'all', 'open', 'add_checkpoint', 'values', 'exists', 'EnhancedProvisioner', 'info', '_validate_network', 'items', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "requests",
            "alias": null,
            "line": 16
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 17
          },
          {
            "module": "openai",
            "alias": null,
            "line": 508
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 1929
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_design_files",
            "line": 527,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_color_variations",
            "line": 750,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_lighten_color",
            "line": 764,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_darken_color",
            "line": 769,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_component_code",
            "line": 774,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_component_styles",
            "line": 954,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_readme_content",
            "line": 1141,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_design_principles",
            "line": 1213,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_component_guide",
            "line": 1271,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_integration_guide",
            "line": 1360,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UIUXDesignSystemMaintainer",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'__import__', 'Path', '_check_dalle_health', 'chmod', '_phase_performance_optimization', '_generate_color_variations', '_phase_quick_start_validation', 'run', '_generate_maintenance_report', 'sleep', 'main', 'isinstance', '_check_design_files', '_implement_caching_strategy', 'WeaviateManager', 'store_context', '_phase_integration_testing', '_log_error', 'endswith', 'DatabaseLogger', '_phase_component_library_update', 'replace', 'encode', 'append', 'log_action', 'get', '_generate_integration_guide', 'hexdigest', '_generate_component_index', 'range', 'mkdir', 'print', '_optimize_component_bundles', '_check_n8n_health', '_check_recraft_health', 'str', '_generate_design_asset', 'now', 'int', '_optimize_design_assets', 'title', 'UIUXDesignSystemMaintainer', 'dumps', '_phase_documentation_update', 'isoformat', 'getenv', 'len', 'maintain_design_system', '_phase_health_check', '_generate_api_documentation', 'sum', '_check_dependencies', '_generate_component_guide', 'dump', 'exit', '_create_quick_start_script', 'upper', '_generate_design_principles', 'md5', '_generate_readme_content', 'all', 'open', '_lighten_color', 'values', 'exists', 'write', '_phase_design_asset_generation', 'time', '_run_quick_start_test', '_implement_lazy_loading', 'items', 'print_exc', '_generate_component_code', '_darken_color', '_generate_component_styles'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_cursor_ai_database.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'Path', 'close', 'run', 'initialize_database', 'append', 'setup_cursor_ai_database', 'get', 'execute_query', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/start_mcp_servers.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 35,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "start_server",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Path', 'poll', 'start_server', 'sleep', 'terminate', 'run', 'append', 'copy', 'load_dotenv', 'len', 'Popen', 'insert', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/symphony_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "signal",
            "alias": null,
            "line": 13
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 14
          },
          {
            "module": "sys",
            "alias": null,
            "line": 15
          },
          {
            "module": "threading",
            "alias": null,
            "line": 19
          },
          {
            "module": "time",
            "alias": null,
            "line": 20
          },
          {
            "module": "schedule",
            "alias": null,
            "line": 23
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 488
          },
          {
            "module": "croniter",
            "alias": null,
            "line": 359
          },
          {
            "module": "requests",
            "alias": null,
            "line": 346
          },
          {
            "module": "daemon",
            "alias": null,
            "line": 544
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "signal_handler",
            "line": 479,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 486,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "duration",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 77,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_config",
            "line": 94,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_state",
            "line": 183,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_state",
            "line": 212,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_can_run_task",
            "line": 242,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_send_notification",
            "line": 339,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_schedule_tasks",
            "line": 357,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_scheduler_loop",
            "line": 398,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "stop",
            "line": 429,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "status",
            "line": 446,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_task_manually",
            "line": 470,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_and_run",
            "line": 384,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskStatus",
            "line": 37,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskResult",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Task",
            "line": 61,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Symphonyconductor",
            "line": 74,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'TaskStatus', 'Path', 'post', 'getLogger', 'field', 'run_pending', 'Thread', 'add_argument', '_load_config', 'run', 'croniter', 'get_next', 'startswith', 'sleep', 'create_subprocess_shell', 'main', 'parse_args', '_load_state', 'StreamHandler', 'TaskResult', 'join', 'getpid', 'DaemonContext', 'status', 'kill', 'load', 'replace', 'fromisoformat', 'append', 'get', 'stop', '_send_notification', '_schedule_tasks', 'every', 'now', 'mkdir', 'print', 'wait_for', 'str', 'int', '_run_task', 'at', 'signal', 'split', 'dumps', '_save_state', 'Symphonyconductor', 'isoformat', 'decode', 'basicConfig', 'Task', 'communicate', 'timedelta', 'run_task_manually', 'dump', 'exit', 'read_text', 'error', 'warning', 'Exception', 'hasattr', 'open', 'terminate', 'write_text', 'values', 'exists', 'wait', 'unlink', 'info', 'start', 'items', 'ArgumentParser', 'do', 'FileHandler', '_can_run_task'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
          "line": 23,
          "module": "schedule",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
          "line": 544,
          "module": "daemon",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 9
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 144
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "auto_mode_selector",
            "item": "AutoModeSelector",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 142,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "suggest_mode",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_workflow",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_statistics",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "interactive_mode",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RooconductorInterface",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'commit', 'enumerate', 'add_argument', 'get_statistics', 'main', 'parse_args', 'cursor', 'input', 'close', 'RooconductorInterface', 'append', 'execute_workflow', 'fetchall', 'interactive_mode', 'print', 'now', 'str', 'dumps', 'fetchone', 'isoformat', 'len', 'AutoModeSelector', 'execute', 'strip', 'suggest_mode', 'ArgumentParser', 'insert', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ai_infrastructure_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "detect_anomalies",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "calculate_trend",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "estimate_time_to_threshold",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AIInfrastructureMonitor",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'std', 'run', 'estimate_time_to_threshold', 'self_heal', 'sleep', 'arange', 'float', 'abs', 'predict_failures', 'append', 'polyfit', 'now', 'monitor_loop', 'str', 'optimize_memory', 'max', 'normal', 'isoformat', 'basicConfig', 'len', 'mean', 'dump', 'error', 'calculate_trend', 'warning', 'open', 'scale_up_resources', 'collect_metrics', 'detect_anomalies', 'info', 'AIInfrastructureMonitor', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "shared.weaviate_client",
            "item": "WeaviateClient",
            "alias": null,
            "line": 45,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'fetch_one', 'WeaviateClient', 'run', 'print', 'exists', 'get', 'validate_database', 'validate_endpoints', 'UnifiedDatabase', 'ClientSession', 'validate_weaviate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/validate_integration.py",
          "line": 45,
          "module": "shared.weaviate_client",
          "item": "WeaviateClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/review_ai_context.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_python_version",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_ai_context_files",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_project_structure",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_existing_tools",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'endswith', 'read', 'check_project_structure', 'warning', 'open', 'check_existing_tools', 'append', 'exists', 'listdir', 'basicConfig', 'check_python_version', 'info', 'len', 'validate_ai_context_files', 'main', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_ai_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "scripts.setup_cursor_ai_database",
            "item": "setup_cursor_ai_database",
            "alias": null,
            "line": 155,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "setup_claude_database",
            "alias": null,
            "line": 166,
            "level": 0
          },
          {
            "module": "ai_components.github_copilot.copilot_integration",
            "item": "setup_copilot_database",
            "alias": null,
            "line": 177,
            "level": 0
          },
          {
            "module": "scripts.comprehensive_ai_validation",
            "item": "setup_validation_database",
            "alias": null,
            "line": 188,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 210,
            "level": 0
          },
          {
            "module": "ai_components.github_copilot.copilot_integration",
            "item": "GitHubCopilotClient",
            "alias": null,
            "line": 234,
            "level": 0
          },
          {
            "module": "scripts.ai_system_conductor",
            "item": "AISystemconductor",
            "alias": null,
            "line": 268,
            "level": 0
          },
          {
            "module": "scripts.comprehensive_ai_validation",
            "item": "AISystemValidator",
            "alias": null,
            "line": 338,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeAnalyzer",
            "alias": null,
            "line": 222,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 298,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeAnalyzer",
            "alias": null,
            "line": 305,
            "level": 0
          },
          {
            "module": "ai_components.github_copilot.copilot_integration",
            "item": "GitHubCopilotClient",
            "alias": null,
            "line": 317,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AISystemDeployer",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'__import__', 'Path', '_check_prerequisites', 'get_performance_metrics', 'enumerate', 'run', 'setup_claude_database', 'setup_cursor_ai_database', 'ClaudeAnalyzer', 'strftime', 'generate_code', 'main', 'get_code_completions', 'join', 'setup_validation_database', 'GitHubCopilotClient', 'replace', 'append', 'get', 'setup_copilot_database', '_test_components', '_setup_databases', 'mkdir', 'print', 'now', 'str', 'title', 'AISystemDeployer', 'validate_all_components', 'AISystemconductor', 'isoformat', 'any', 'len', 'sum', 'dump', 'exit', 'Exception', 'deploy_system', 'all', 'open', 'values', 'exists', '_generate_deployment_report', '_initialize_ai_tools', 'items', '_run_validation', 'CursorAIClient', 'AISystemValidator', 'test_integration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/config_inventory.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 1
          },
          {
            "module": "os",
            "alias": null,
            "line": 2
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'endswith', 'join', 'lower', 'dumps', 'append', 'startswith', 'print', 'walk'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/performance_test.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 15
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 16
          },
          {
            "module": "requests",
            "alias": null,
            "line": 17
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 426
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "kubernetes",
            "item": "client",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "kubernetes",
            "item": "config",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 44,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_resource_metrics",
            "line": 349,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_print_result",
            "line": 380,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 397,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestResult",
            "line": 25,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PerformanceTester",
            "line": 41,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'add_argument', 'run', 'test_memory_operations', 'test_agent_execution', '_print_result', 'main', 'parse_args', 'ClientSession', 'load_incluster_config', 'float', 'memory_operation', 'join', 'PerformanceTester', 'ClientTimeout', 'append', 'percentile', 'test_concurrent_agents', 'get', 'agent_tasks', 'range', 'print', 'now', 'execute_request', 'str', 'get_resource_metrics', 'TestResult', 'Semaphore', 'isoformat', 'bounded_operation', 'basicConfig', 'CoreV1Api', 'rstrip', 'load_kube_config', 'len', 'generate_report', 'mean', 'json', 'error', 'bounded_request', 'warning', 'open', 'array', 'write', 'gather', 'time', 'info', 'items', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_summary",
            "line": 463,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructureImprovementconductor",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'chmod', 'run', '_create_provisioning_scripts', '_create_api_gateway_scripts', 'append', 'phase_3_monitoring_and_ai_tools', 'mkdir', 'print', 'now', 'str', 'phase_4_ci_cd_integration', 'phase_2_provisioning_enhancements', 'isoformat', '_create_ci_cd_integration', 'dump', 'open', 'InfrastructureImprovementconductor', 'phase_1_api_gateway_improvements', 'write', '_generate_summary', '_create_monitoring_tools', 'items', 'cherry_aite_improvements'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/live_integration_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "urllib.request",
            "alias": null,
            "line": 10
          },
          {
            "module": "urllib.parse",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 14
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "auto_mode_selector",
            "item": "AutoModeSelector",
            "alias": null,
            "line": 36,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 20,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "print_section",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demo_1_mode_selection",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demo_2_parallel_execution",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demo_3_mcp_integration",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demo_4_database_operations",
            "line": 195,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demo_5_workflow_coordination",
            "line": 259,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_final_report",
            "line": 320,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_all_demos",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_execute",
            "line": 280,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LiveIntegrationDemo",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'commit', 'read', 'run', 'loads', 'cursor', 'close', 'replace', 'encode', 'append', 'run_all_demos', 'get', 'print_section', 'fetchall', 'can_execute', 'range', 'urlopen', 'print', 'now', 'str', 'title', 'dumps', 'Request', 'isoformat', 'decode', 'demo', 'len', 'AutoModeSelector', 'sum', 'dump', 'LiveIntegrationDemo', 'execute', 'suggest_mode', 'all', 'open', 'generate_final_report', 'items', 'insert', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/rollback_infrastructure.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 268
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 266,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_state",
            "line": 34,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_rollback_points",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rollback_to_checkpoint",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_find_checkpoint",
            "line": 98,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_rollback_network",
            "line": 105,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_rollback_database",
            "line": 124,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_rollback_services",
            "line": 139,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_rollback_monitoring",
            "line": 148,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_rollback_history",
            "line": 157,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_rollback",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_rollback_plan",
            "line": 200,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "emergency_rollback",
            "line": 248,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructureRollback",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'enumerate', 'list', 'create_rollback_plan', 'add_argument', 'InfrastructureRollback', 'startswith', '_rollback_monitoring', 'main', 'parse_args', '_load_state', 'rollback_to_checkpoint', 'StreamHandler', 'index', 'join', 'input', 'load', 'append', 'get', 'keys', 'print', '_find_checkpoint', 'now', 'str', 'split', 'isoformat', 'any', 'basicConfig', '_rollback_database', 'upper', 'validate_rollback', '_rollback_services', 'dump', 'exit', 'error', 'reversed', '_save_rollback_history', 'warning', 'lower', 'open', 'exists', 'info', '_rollback_network', 'items', 'emergency_rollback', 'ArgumentParser', 'list_rollback_points', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ai_code_reviewer.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 18
          },
          {
            "module": "ast",
            "alias": null,
            "line": 19
          },
          {
            "module": "logging",
            "alias": null,
            "line": 20
          },
          {
            "module": "os",
            "alias": null,
            "line": 21
          },
          {
            "module": "re",
            "alias": null,
            "line": 22
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 23
          },
          {
            "module": "sys",
            "alias": null,
            "line": 24
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 318,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_file",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_analyze_ast",
            "line": 157,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_for_duplicates",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_git_changes",
            "line": 213,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "full_project_scan",
            "line": 250,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 278,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AICodeReviewer",
            "line": 30,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'read', 'getcwd', 'add_argument', 'run', 'main', 'isinstance', 'parse_args', 'print_help', 'endswith', 'join', 'AICodeReviewer', 'append', 'get', 'extend', 'walk', 'split', 'check_git_changes', 'basename', 'any', 'basicConfig', 'full_project_scan', 'check_file', 'len', '_analyze_ast', 'sum', 'generate_report', 'exit', 'error', 'strip', 'check_for_duplicates', 'open', 'values', 'exists', 'write', 'setLevel', 'info', 'parse', 'items', 'ArgumentParser', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 14
          },
          {
            "module": "sys",
            "alias": null,
            "line": 15
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "json",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": "get_connection_manager",
            "line": 25,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": "get_unified_postgresql",
            "line": 26,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "get_unified_database",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager",
            "item": "close_connection_manager",
            "alias": null,
            "line": 400,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql",
            "item": "close_unified_postgresql",
            "alias": null,
            "line": 401,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "close_unified_database",
            "alias": null,
            "line": 402,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 353,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedPostgreSQLMigration",
            "line": 32,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'cleanup_deprecated_tables', 'list', 'close_unified_postgresql', 'run', 'strftime', 'loads', 'main', 'isinstance', 'run_migration', 'dict', 'input', 'replace', 'create_backup', 'get_unified_database', 'UnifiedPostgreSQLMigration', 'append', 'rglob', 'get', 'fetchval', 'close_connection_manager', 'mkdir', 'get_connection_manager', 'update_code_references', 'str', 'get_unified_postgresql', 'health_check', 'isoformat', 'print_summary', 'basicConfig', 'close_unified_database', 'migrate_sessions', 'validate_migration', 'migrate_cache', 'len', 'cache_set', 'dump', 'exit', 'read_text', 'error', 'initialize', 'execute', 'Exception', 'lower', 'warning', 'open', 'write_text', 'utcnow', 'fetch', 'info', 'items', 'session_create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
          "line": 27,
          "module": "shared.database.unified_db_v2",
          "item": "get_unified_database",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
          "line": 402,
          "module": "shared.database.unified_db_v2",
          "item": "close_unified_database",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 7
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "run",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_header",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_environment",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_env",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_services",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_env",
            "line": 178,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_project",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_tests",
            "line": 244,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 272,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiSetupWizard",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'run', 'cherry_aiSetupWizard', 'check_environment', 'strftime', 'startswith', 'save_env', 'input', 'bool', 'load_env', 'run_tests', 'get', 'print', 'print_header', 'split', 'setup_project', 'print_summary', 'configure_services', 'copy', 'getenv', 'setdefault', 'strip', 'all', 'open', 'exists', 'write', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/how_to_use_roo_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "print_section",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "show_usage_guide",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 112,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'strip', 'input', 'exists', 'print_section', 'show_usage_guide', 'main', 'print', 'system'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "requests",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 209,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_process",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_port",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_http_endpoint",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_docker_containers",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_summary",
            "line": 111,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiDeploymentSummary",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'check_port', 'run', 'check_process', 'strftime', 'loads', 'main', 'join', 'append', 'get', 'now', 'print', 'str', 'split', 'basicConfig', 'get_docker_containers', 'strip', 'write_text', 'check_http_endpoint', 'info', 'cherry_aiDeploymentSummary', 'generate_summary'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/migrate_to_portkey.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 106,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_existing_keys",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_portkey_config",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_code_references",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'update_code_references', 'bool', 'values', 'append', 'any', 'load_dotenv', 'get', 'exists', 'generate_portkey_config', 'items', 'check_existing_keys', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/secure_api_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_secure_env",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "ensure_gitignore_security",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_setup",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'verify_setup', 'read_text', 'join', 'ensure_gitignore_security', 'strip', 'split', 'open', 'sorted', 'values', 'append', 'exists', 'write', 'get', 'startswith', 'len', 'print', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 405
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 144
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 403,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_service",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_postgresql",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_redis",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_docker_services",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_mcp_servers",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_conductor_api",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_cherry_ai_roo_integration",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_roo_config",
            "line": 208,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_integration_test",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_systemd_service",
            "line": 320,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_all",
            "line": 350,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiAutoStarter",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'chmod', 'add_argument', 'run', 'run_integration_test', 'start_docker_services', 'start_conductor_api', 'setsid', 'sleep', 'main', 'parse_args', 'start_redis', 'kill', 'start_postgresql', 'start_all', 'get', 'fork', 'mkdir', 'print', 'str', 'create_roo_config', 'start_mcp_servers', 'int', 'cherry_aiAutoStarter', 'initialize_cherry_ai_roo_integration', 'split', 'create_systemd_service', 'any', 'Popen', 'dump', 'exit', 'strip', 'open', 'write_text', 'exists', 'chdir', 'check_service', 'unlink', 'ArgumentParser', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/fix_coordination_config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_command",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_database_configuration",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_conflicting_files",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_gitignore",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_local_environment",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_ai_conductor_imports",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_systemd_services",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_configuration",
            "line": 203,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 239,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'run', 'remove', 'main', 'remove_conflicting_files', 'join', 'setup_local_environment', 'append', 'create_systemd_services', 'print', 'fix_ai_conductor_imports', 'str', 'split', 'verify_configuration', 'update_gitignore', 'geteuid', 'read_text', 'strip', 'fix_database_configuration', 'open', 'write_text', 'run_command', 'exists', 'write'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/check_env_config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 204,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_env_var",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_portkey_virtual_key",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_section",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_ai_service_config",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'len', 'check_env_var', 'bool', 'append', 'any', 'exists', 'get', 'load_dotenv', 'print_section', 'items', 'check_ai_service_config', 'validate_portkey_virtual_key', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/initialize_unified_postgresql.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": "get_connection_manager",
            "line": 17,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "close_connection_manager",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedPostgreSQLInitializer",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'create_triggers', 'optimize_settings', 'run', 'create_functions', 'main', 'create_initial_data', 'join', 'verify_installation', 'append', 'UnifiedPostgreSQLInitializer', 'fetchval', 'close_connection_manager', 'print', 'get_connection_manager', 'str', 'create_schemas', 'print_summary', 'basicConfig', 'len', 'error', 'initialize', 'execute', 'Exception', 'warning', 'fetch', 'create_tables', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/agent_health_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "random",
            "alias": null,
            "line": 51
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "is_healthy",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_severity",
            "line": 103,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_trend",
            "line": 152,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_health_score",
            "line": 170,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_dashboard_data",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_overall_health",
            "line": 211,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HealthMetric",
            "line": 17,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AgentHealthMonitor",
            "line": 32,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'HealthMetric', 'run', 'AgentHealthMonitor', 'uniform', 'min', 'sleep', 'main', '_calculate_trend', '_calculate_severity', '_create_alert', 'append', 'get', 'range', 'now', 'print', 'randint', 'max', 'get_dashboard_data', 'dumps', 'isoformat', '_calculate_health_score', 'collect_agent_metrics', 'timedelta', 'len', 'sum', 'warning', 'monitor_agent', '_calculate_overall_health', 'items', 'analyze_trends'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/quick_start_design_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "ai_components.design.design_conductor",
            "item": "Designconductor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "ai_components.design.recraft_integration",
            "item": "RecraftDesignGenerator",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.design.dalle_integration",
            "item": "DALLEImageGenerator",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": null,
            "line": 280,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 280,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_show_usage_examples",
            "line": 358,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DesignSystemQuickStart",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'get_performance_metrics', 'RecraftDesignGenerator', 'enumerate', 'run', 'generate_design_image', 'generate_design_assets', 'sleep', 'main', 'generate_code_from_design', '_show_performance_summary', 'append', 'run_complete_demo', 'DALLEImageGenerator', 'get', 'create_design_project', 'keys', 'range', 'print', 'now', 'str', 'generate_icon_set', 'get_cache', 'DesignSystemQuickStart', 'isoformat', 'generate_design', '_run_single_demo', 'len', 'analyze_design_requirements', 'dump', 'exit', 'Designconductor', '_show_usage_examples', 'open', 'set', 'values', '_demo_individual_components', 'time', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "ast",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "importlib.util",
            "alias": null,
            "line": 15
          },
          {
            "module": "warnings",
            "alias": null,
            "line": 896
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 897,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 694,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 889,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 20,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "audit_all",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "discover_modules",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_ast",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 135,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_configurations",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_env_file",
            "line": 168,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_code_duplication",
            "line": 179,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_naming_conflicts",
            "line": 225,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "identify_component",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_dependencies",
            "line": 281,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_requirements_conflicts",
            "line": 317,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_configurations",
            "line": 344,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_env_var_consistency",
            "line": 372,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_integration_points",
            "line": 402,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_conductor_integration",
            "line": 433,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_error_handling",
            "line": 456,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_coding_patterns",
            "line": 494,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_api_contracts",
            "line": 539,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_circular_dependencies",
            "line": 573,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_version_compatibility",
            "line": 615,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_runtime_safety",
            "line": 636,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 669,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "propose_fixes",
            "line": 711,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_fix_script",
            "line": 788,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_cycle",
            "line": 585,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CodebaseAuditor",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'analyze_dependencies', 'Path', 'read', 'chmod', 'list', 'filterwarnings', 'analyze_naming_conflicts', 'group', 'analyze_integration_points', 'check_env_var_consistency', 'stat', 'count', 'lstrip', 'audit_all', 'analyze_ast', 'strftime', 'startswith', 'remove', 'main', 'validate_version_compatibility', 'isinstance', 'check_conductor_integration', 'update', 'endswith', 'index', 'join', 'pop', 'analyze_error_handling', 'propose_fixes', 'analyze_coding_patterns', 'load_configurations', 'load', 'findall', 'analyze_configurations', 'append', 'rglob', 'replace', 'get', 'keys', 'validate_circular_dependencies', 'add', 'check_requirements_conflicts', 'validate_runtime_safety', 'discover_modules', 'print', 'walk', 'create_fix_script', 'now', 'str', 'relative_to', 'parse_env_file', 'split', 'analyze_code_duplication', 'isoformat', 'any', 'len', 'upper', 'generate_report', 'sum', 'find_cycle', 'dump', 'defaultdict', 'CodebaseAuditor', 'strip', 'match', 'open', 'set', 'values', 'get_name', 'write', 'exists', 'parse', 'items', 'analyze_api_contracts', 'identify_component', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 16
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 311
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 312
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 313
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 314
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 775
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 342,
            "level": 0
          },
          {
            "module": "ai_components.agents.claude_integration",
            "item": "get_claude_integration",
            "alias": null,
            "line": 365,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedWorkflowconductor",
            "alias": null,
            "line": 388,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 388,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "AgentRole",
            "alias": null,
            "line": 388,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskPriority",
            "alias": null,
            "line": 388,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 447,
            "level": 0
          },
          {
            "module": "ai_components.agents.claude_integration",
            "item": "get_claude_integration",
            "alias": null,
            "line": 448,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 473,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 497,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedWorkflowconductor",
            "alias": null,
            "line": 519,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 519,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "AgentRole",
            "alias": null,
            "line": 519,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskPriority",
            "alias": null,
            "line": 519,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 594,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 620,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_environment_variables",
            "line": 267,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_system_resources",
            "line": 295,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_existing_processes",
            "line": 334,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_measure_resource_usage",
            "line": 557,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_performance_score",
            "line": 567,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_monitoring_setup",
            "line": 639,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_documentation",
            "line": 650,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnhancedSystemDeploymentTester",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'cpu_count', '_test_cursor_claude_synergy', 'get_enhanced_cursor_ai', 'disk_usage', '_generate_final_report', '_phase_integration_testing', '_log_error', '_test_conductor_integration', '_test_analysis_performance', 'bool', 'EnhancedSystemDeploymentTester', 'get', 'range', 'create_workflow', 'Process', 'dumps', '_check_existing_processes', 'virtual_memory', 'EnhancedWorkflowconductor', '_test_claude_integration', 'items', '_check_database', 'TaskDefinition', 'run', 'generate_code', '_check_environment_variables', 'cpu_percent', '_test_generation_performance', 'load', 'append', '_check_monitoring_setup', 'print', 'extend', '_phase_production_readiness', 'any', 'upper', 'sum', '_check_dependencies', 'dump', 'open', '_test_database_integration', 'exists', '_test_cursor_ai_integration', 'Path', '_phase_deployment', 'main', '_log_phase', 'store_context', '_phase_performance_validation', '_test_circuit_breakers', '_test_caching', 'now', 'int', 'analyze_project', '_test_error_handling', 'get_claude_integration', 'exit', 'Exception', 'all', 'values', 'print_exc', 'num_threads', '_phase_pre_deployment', '_calculate_performance_score', 'WeaviateManager', 'DatabaseLogger', 'execute_workflow', 'log_action', 'str', 'analyze_architecture', 'run_full_deployment_and_test', 'isoformat', 'len', '_check_documentation', 'memory_info', '_measure_resource_usage', 'time', 'open_files', '_test_parallel_execution', '_check_system_resources'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ai_system_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeProjectAnalyzer",
            "alias": null,
            "line": 121,
            "level": 0
          },
          {
            "module": "ai_components.github_copilot.copilot_integration",
            "item": "GitHubCopilotClient",
            "alias": null,
            "line": 138,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 74,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_ai_tools",
            "line": 116,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_tool_score",
            "line": 208,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_metrics",
            "line": 363,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_tools",
            "line": 408,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_system_metrics",
            "line": 425,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskType",
            "line": 27,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AITool",
            "line": 38,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskRequest",
            "line": 49,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TaskResult",
            "line": 60,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AISystemconductor",
            "line": 71,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'ValueError', 'run', '_log_task_execution', 'generate_code', 'main', 'TaskResult', 'index', 'round', 'GitHubCopilotClient', 'process_task', 'append', 'get', '_get_fallback_tool', 'print', 'get_code_suggestions', 'now', 'str', 'analyze_project', 'max', 'dumps', '_execute_with_tool', 'AISystemconductor', 'initialize_database', 'TaskRequest', 'len', 'sum', 'error', 'ClaudeProjectAnalyzer', 'warning', 'select_best_tool', 'values', '_calculate_tool_score', 'time', '_initialize_ai_tools', 'info', 'execute_query', 'field', '_update_metrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_weaviate_collections.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 24
          },
          {
            "module": "json",
            "alias": null,
            "line": 25
          },
          {
            "module": "logging",
            "alias": null,
            "line": 26
          },
          {
            "module": "os",
            "alias": null,
            "line": 27
          },
          {
            "module": "sys",
            "alias": null,
            "line": 28
          },
          {
            "module": "time",
            "alias": null,
            "line": 29
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 32
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "weaviate.exceptions",
            "item": "WeaviateBaseError",
            "alias": null,
            "line": 33,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "parse_args",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "connect_to_weaviate",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "collection_exists",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_collection",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_personal_collection_config",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_payready_collection_config",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_paragonrx_collection_config",
            "line": 309,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_session_collection_config",
            "line": 392,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_collection",
            "line": 484,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "enable_acorn",
            "line": 516,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 551,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'AuthApiKey', 'add_argument', 'create_class', 'sleep', 'main', 'connect_to_weaviate', 'parse_args', 'StreamHandler', 'Client', 'get_personal_collection_config', 'get', 'get_payready_collection_config', 'range', 'get_paragonrx_collection_config', 'is_ready', 'get_nodes_status', 'str', 'create_collection', 'any', 'basicConfig', 'len', 'enable_acorn', 'ConnectionError', 'exit', 'error', 'warning', 'verify_collection', 'get_session_collection_config', 'info', 'ArgumentParser', 'collection_exists', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/persona_config_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "asdict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 55,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_default_personas",
            "line": 61,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_persona",
            "line": 200,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_persona",
            "line": 207,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona",
            "line": 219,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_persona",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_personas",
            "line": 246,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaTrait",
            "line": 16,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "PersonaConfig",
            "line": 28,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PersonaConfigManager",
            "line": 52,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'save_persona', 'ValueError', 'update_persona', 'glob', 'asdict', 'load_persona', 'list_personas', 'PersonaConfig', 'load', 'append', 'keys', 'PersonaTrait', 'mkdir', 'print', 'to_dict', 'PersonaConfigManager', 'cls', 'dump', 'warning', 'hasattr', 'open', 'exists', 'from_dict', 'get_persona', 'info', 'items', 'setattr', '_load_default_personas'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/configure_airbyte.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "requests",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 197,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_postgres_source",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_weaviate_destination",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_connection",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_sync_schedule",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_connection",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AirbyteConfigurer",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'create_connection', 'ValueError', 'AirbyteConfigurer', 'test_connection', 'main', 'dirname', 'create_postgres_source', 'get', 'print', 'now', 'int', 'str', 'isoformat', 'create_weaviate_destination', 'makedirs', 'dump', 'exit', 'json', 'create_sync_schedule', 'Exception', 'open'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/comprehensive_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 12
          },
          {
            "module": "requests",
            "alias": null,
            "line": 16
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 17
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 18
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration",
            "item": "CursorAIClient",
            "alias": null,
            "line": 166,
            "level": 0
          },
          {
            "module": "ai_components.roo_code.roo_integration",
            "item": "RooCodeClient",
            "alias": null,
            "line": 189,
            "level": 0
          },
          {
            "module": "scripts.error_handling_enhancements",
            "item": "ErrorRecoveryconductor",
            "alias": null,
            "line": 556,
            "level": 0
          },
          {
            "module": "scripts.performance_analyzer",
            "item": "PerformanceAnalyzer",
            "alias": null,
            "line": 592,
            "level": 0
          },
          {
            "module": "scripts.security_audit",
            "item": "SecurityAuditor",
            "alias": null,
            "line": 631,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "calculate_overall_status",
            "line": 732,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SystemValidator",
            "line": 30,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'TaskDefinition', 'safe_load', 'validate_security', 'list', 'run', 'PerformanceAnalyzer', 'calculate_overall_status', 'strftime', 'main', 'analyze_database_performance', 'float', 'SystemValidator', 'WeaviateManager', 'store_context', 'cursor', 'validate_performance', 'DatabaseLogger', 'expanduser', 'append', 'execute_workflow', 'get', 'check_api_secret_handling', 'delete', 'keys', 'fetchall', 'range', 'print', 'create_workflow', 'now', 'str', 'is_ready', 'int', 'analyze_workflow_execution_times', 'max', 'dumps', 'SecurityAuditor', 'fetchone', 'validate_components', 'isoformat', 'validate_integrations', 'Workflowconductor', 'validate_cicd', 'RooCodeClient', 'len', 'upper', 'ConnectionError', 'dump', 'exit', 'json', 'validator', 'validate_all', 'execute', 'strip', 'all', 'open', 'retrieve_context', 'validate_workflows', 'values', 'execute_with_recovery', 'exists', 'validate_monitoring', 'time', '_get_connection', 'items', 'ErrorRecoveryconductor', 'CursorAIClient'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
          "line": 166,
          "module": "ai_components.cursor_ai.cursor_integration",
          "item": "CursorAIClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
          "line": 189,
          "module": "ai_components.roo_code.roo_integration",
          "item": "RooCodeClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/proof_of_functionality.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 5
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "generate_proof",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Path', 'execute', 'close', 'open', 'run', 'fetchone', 'values', 'isoformat', 'exists', 'now', 'len', 'generate_proof', 'sum', 'print', 'connect', 'dump', 'cursor'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 40
          },
          {
            "module": "weaviate.classes",
            "alias": "wvc",
            "line": 41
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 160
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 195
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "ConductorServer",
            "alias": null,
            "line": 89,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "get_all_agents",
            "alias": null,
            "line": 96,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "run_agent_task",
            "alias": null,
            "line": 96,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 122,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 262,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiIntegrationTest",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'cherry_aiIntegrationTest', 'run', 'get_all_agents', 'run_agent_task', 'strftime', 'run_all_tests', 'main', 'close', 'test_func', 'AsyncClient', 'get', 'print', 'now', 'str', 'delete_by_id', 'isoformat', 'basicConfig', 'ConductorServer', 'len', 'generate_report', 'dump', 'exit', 'fetch_one', 'error', 'warning', 'open', 'UnifiedDatabase', 'info', 'connect_to_local', 'items', 'insert', 'fetch_object_by_id'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/domain_separation_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "re",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "ast",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "analyze_file_content",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_imports",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_cross_domain_references",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_codebase",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_database_schemas",
            "line": 187,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_api_endpoints",
            "line": 225,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_dependency_graph",
            "line": 264,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_refactoring_checklist",
            "line": 283,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 332,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_report",
            "line": 375,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 407,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_analysis",
            "line": 429,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DomainSeparationAnalyzer",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'chmod', 'list', 'generate_dependency_graph', 'scan_codebase', 'analyze_file_content', 'startswith', 'glob', 'isinstance', 'DomainSeparationAnalyzer', 'check_cross_domain_references', 'update', 'endswith', 'analyze_imports', 'findall', 'save_report', 'append', 'get', 'add', 'generate_refactoring_checklist', 'print', 'now', 'walk', 'extend', 'str', 'analyze_database_schemas', 'analyze_api_endpoints', 'relative_to', 'max', 'split', 'sorted', 'isoformat', 'print_summary', 'any', 'len', 'upper', 'generate_report', 'sum', 'dump', 'defaultdict', 'run_analysis', 'lower', 'open', 'set', 'values', 'write', 'exists', 'parse', 'items', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/eigencode_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "requests",
            "alias": null,
            "line": 12
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 13
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 17
          },
          {
            "module": "smtplib",
            "alias": null,
            "line": 18
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 395
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "email.mime.text",
            "item": "MIMEText",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "email.mime.multipart",
            "item": "MIMEMultipart",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_categorize_url",
            "line": 165,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_notification_message",
            "line": 206,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_enabled_notifications",
            "line": 270,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EigenCodeMonitor",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'starttls', 'send_notifications', 'SMTP', 'add_argument', 'run', '_send_slack_notification', 'check_all_sources', 'strftime', 'loads', 'EigenCodeMonitor', 'sleep', 'main', 'parse_args', '_send_email_notification', 'attach', 'WeaviateManager', 'store_context', 'generate_monitoring_report', 'head', 'DatabaseLogger', 'MIMEMultipart', 'append', 'log_action', 'get', 'print', 'now', 'str', 'int', 'login', 'dumps', 'MIMEText', 'isoformat', 'any', 'len', '_categorize_url', 'upper', 'dump', 'json', 'run_continuous_monitoring', 'send_message', 'lower', 'retrieve_context', 'open', 'check_url_availability', '_get_enabled_notifications', '_format_notification_message', 'time', 'items', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/integration_plan.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "phase_1_backend_integration",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_2_database_migrations",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_3_ui_integration",
            "line": 208,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "phase_4_deployment",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_integration_scripts",
            "line": 332,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_nginx_config",
            "line": 425,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_integration_plan",
            "line": 493,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IntegrationPlan",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'chmod', 'enumerate', 'append', 'phase_2_database_migrations', 'phase_1_backend_integration', 'print', 'mkdir', 'now', 'create_integration_scripts', 'isoformat', 'phase_4_deployment', 'phase_3_ui_integration', 'dump', 'IntegrationPlan', 'open', 'create_nginx_config', 'generate_integration_plan', 'write', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/initialize_enhanced_system.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "get_unified_database",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_unified_postgresql_enhanced', 'session_list', 'getLogger', 'initialize_enhanced_system', 'error', 'abspath', 'dirname', 'get_connection_manager_enhanced', 'get_pool_stats', 'memory_snapshot_list', 'cache_get_by_tags', 'run', 'get_unified_database', 'health_check', 'basicConfig', 'info', 'len', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/initialize_enhanced_system.py",
          "line": 17,
          "module": "shared.database.unified_db_v2",
          "item": "get_unified_database",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/setup_llm_configuration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "create_async_engine",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "sqlalchemy.orm",
            "item": "sessionmaker",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "Base",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.llm_router",
            "item": "UseCase",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.llm_router",
            "item": "ModelTier",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.llm_router",
            "item": "UnifiedLLMRouter",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'commit', 'Path', 'enumerate', 'async_session', 'run', 'UnifiedLLMRouter', 'startswith', 'main', 'run_sync', 'create_async_engine', 'migrate_existing_config', 'begin', 'dispose', 'replace', 'append', 'get', 'scalar', 'update_env_example', 'print', 'str', 'getenv', 'sessionmaker', 'read_text', 'execute', 'open', 'exists', 'write', 'create_tables', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
          "line": 21,
          "module": "core.llm_router",
          "item": "UseCase",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
          "line": 21,
          "module": "core.llm_router",
          "item": "ModelTier",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
          "line": 21,
          "module": "core.llm_router",
          "item": "UnifiedLLMRouter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/parallel_mode_executor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ParallelModeExecutor",
            "line": 8,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'ParallelModeExecutor', 'len', 'total_seconds', 'dumps', 'run', 'print', 'isoformat', 'execute_parallel', 'gather', 'execute_mode', 'items', 'sleep', 'strftime', 'main', 'now'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 294,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 87,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "purge_all",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_delete_files",
            "line": 120,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_delete_directories",
            "line": 129,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_python_files",
            "line": 149,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_shell_scripts",
            "line": 160,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_documentation",
            "line": 167,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_config_files",
            "line": 174,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_file",
            "line": 190,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_python_content",
            "line": 203,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_shell_content",
            "line": 228,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_doc_content",
            "line": 246,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_yaml_content",
            "line": 256,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_env_content",
            "line": 277,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructurePurger",
            "line": 86,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'rmtree', '_clean_documentation', 'startswith', 'main', 'glob', '_clean_python_files', 'join', 'input', 'is_file', 'append', 'rglob', 'system', 'print', 'is_dir', 'InfrastructurePurger', '_delete_files', '_delete_directories', 'relative_to', 'split', 'sub', '_clean_file', 'any', 'cwd', 'read_text', 'lower', 'write_text', 'values', 'exists', 'unlink', '_clean_shell_scripts', 'cleaner_func', '_clean_config_files', 'purge_all', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/migrate_database.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'read', 'list', 'execute', 'open', 'run', 'print', 'glob', 'UnifiedDatabase', 'sorted', 'run_migrations', 'mkdir'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_integration_complete.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "auto_mode_selector",
            "item": "AutoModeSelector",
            "alias": null,
            "line": 102,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 12,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "test",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_database",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mode_files",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_scripts",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_enhancements",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_all_tests",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IntegrationTester",
            "line": 9,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'commit', 'list', 'run_all_tests', 'glob', 'cursor', 'close', 'load', 'fetchall', 'test_scripts', 'print', 'test_database', 'str', 'fetchone', 'test_mode_files', 'len', 'exit', 'test', 'execute', 'suggest_mode', 'open', 'IntegrationTester', 'exists', 'test_enhancements', 'insert', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/mobile_app_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_mobile_api",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_android_sdk",
            "line": 218,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_analytics_integration",
            "line": 680,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_all",
            "line": 950,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MobileIntegration",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'setup_all', 'write_text', 'print', 'create_mobile_api', 'create_android_sdk', 'create_analytics_integration', 'mkdir', 'MobileIntegration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DomainInfrastructureconductor",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'create_weaviate_provisioning_script', 'chmod', 'lower', 'open', 'print', 'append', 'write', 'create_airbyte_config', 'gather', 'items', 'mkdir', 'create_weaviate_cluster_config', 'create_domain_api_gateway', 'dump'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/auto_mode_selector.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 4
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "suggest_mode",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "AutoModeSelector",
            "line": 6,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'max', 'suggest_mode', 'lower', 'items', 'AutoModeSelector', 'sum', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 79,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_config",
            "line": 88,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_assign_to_pool",
            "line": 111,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_count_by_state",
            "line": 188,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentState",
            "line": 17,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Agent",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AgentLifecycleManager",
            "line": 76,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'Agent', 'AgentLifecycleManager', 'execute_task', 'ValueError', 'run', '_load_config', 'remove', 'sleep', 'get_metrics', 'main', 'append', 'terminate_agent', 'get', 'create_agent', 'print', 'now', 'str', '_process_task', '_count_by_state', 'dumps', 'health_check', 'len', 'sum', '_assign_to_pool', 'initialize', 'terminate', 'values', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "prepare_ml_structure",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_model_registry_schema",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_ml_pipeline_templates",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_ml_configs",
            "line": 435,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_ml_requirements",
            "line": 542,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "prepare_ml_infrastructure",
            "line": 580,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MLInfrastructurePrep",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MLInfrastructurePrep', 'Path', 'create_ml_pipeline_templates', 'chmod', 'prepare_ml_infrastructure', 'open', 'print', 'create_model_registry_schema', 'create_ml_configs', 'write', 'prepare_ml_structure', 'items', 'mkdir', 'create_ml_requirements', 'dump'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_roo_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mcp_integration",
            "item": "UnifiedContextManager",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "RooMode",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "TransitionType",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMCPAdapter",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "ai_components.coordination.unified_api_router",
            "item": "UnifiedAPIRouter",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 28,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 37,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "display_results",
            "line": 281,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IntegrationTester",
            "line": 34,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'ModeTransitionManager', 'Path', 'getLogger', 'add_row', 'execute_transition', 'run', 'RooMCPAdapter', 'run_all_tests', 'can_request', 'main', 'add_column', 'close', 'replace', 'test_func', 'append', 'range', 'print', 'display_results', 'str', 'UnifiedContextManager', 'sync_context_bidirectional', 'basicConfig', 'initiate_transition', 'UnifiedAPIRouter', 'getenv', 'len', 'sum', 'get_service_health', 'fetch_one', 'Table', 'record_failure', 'execute', 'execute_mode_task', 'IntegrationTester', 'Console', 'insert', 'UnifiedDatabase', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "re",
            "alias": null,
            "line": 5
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "fix_unused_imports",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_f_strings_without_placeholders",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_escape_sequences",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_type_annotations",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_python_files",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "replace_f_string",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'read', 'group', 'fix_f_strings_without_placeholders', 'run', 'readlines', 'startswith', 'main', 'endswith', 'fix_escape_sequences', 'append', 'get', 'print', 'walk', 'str', 'writelines', 'sub', 'split', 'len', 'strip', 'open', 'exists', 'write', 'fix_unused_imports', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/metrics_pipeline.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_config",
            "line": 46,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_processor",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_sink",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Metric",
            "line": 17,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MetricsPipeline",
            "line": 37,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_process_metrics', '_load_config', 'run', 'Metric', 'main', 'append', 'clear', 'now', 'MetricsPipeline', 'isoformat', 'process', 'len', 'ingest', 'flush', 'type', 'write', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_advanced_caching.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 170
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 232
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "IntelligentCache",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "scripts.ai_system_conductor",
            "item": "AISystemconductor",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "generate_recommendations",
            "line": 302,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AdvancedCachingSetup",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'get_performance_metrics', 'enumerate', 'run', 'generate_recommendations', 'generate_code', '_integrate_with_conductor', 'main', '_test_integration', '_initialize_cache', 'append', 'get', 'range', 'mkdir', 'print', 'extend', 'now', 'str', '_configure_optimization', 'AISystemconductor', 'setup_caching_system', 'isoformat', '_establish_baseline', 'exit', 'AdvancedCachingSetup', 'virtual_memory', 'Exception', 'set', 'write_text', 'time', 'IntelligentCache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "pexpect",
            "alias": null,
            "line": 16
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 696
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 422,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 451,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_cli_availability",
            "line": 380,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_performance_improvement",
            "line": 511,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_display_progress_bar",
            "line": 546,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnhancedCLIWorkflowRunner",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', '_phase_workflow_creation', 'run', 'get_enhanced_cursor_ai', 'run_cli_workflow_experience', 'sleep', 'generate_code', 'main', 'isinstance', '_validate_cli_configuration', 'WeaviateManager', 'store_context', '_generate_experience_report', '_log_error', 'index', 'DatabaseLogger', 'replace', '_execute_cli_command', 'append', 'log_action', 'get', '_phase_optimization', 'print', 'now', '_check_cli_availability', 'str', 'int', 'analyze_project', '_simulate_generation_command', 'title', 'dumps', 'isoformat', 'any', '_phase_cli_setup', '_calculate_performance_improvement', 'len', 'EnhancedCLIWorkflowRunner', '_display_progress_bar', 'sum', '_phase_code_analysis', 'upper', '_test_cli_help', 'dump', 'exit', 'splitlines', '_phase_complete_project', '_simulate_optimization_command', 'all', 'open', 'values', '_phase_code_generation', 'exists', '_execute_project_step', 'time', 'items', 'print_exc', '_simulate_analysis_command'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
          "line": 16,
          "module": "pexpect",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/scripts/conductor_startup_automation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "mcp",
            "alias": null,
            "line": 54
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 366,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 366,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 366,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "conductorAutomation",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'log', 'chmod', 'TaskDefinition', 'getcwd', 'run', 'strftime', 'startswith', 'sleep', 'main', 'join', 'append', 'execute_workflow', 'get', 'create_automation_daemon', 'mkdir', 'print', 'now', 'create_workflow', 'test_coordination', 'str', 'start_mcp_servers', 'int', 'poll', 'conductorAutomation', 'start_database_services', 'isoformat', 'copy', 'Workflowconductor', 'setup_monitoring', 'generate_startup_report', 'Popen', 'len', 'dump', 'populate_initial_data', 'open', 'terminate', 'values', 'write', 'load_dotenv', 'check_prerequisites', 'time', 'items', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/version_updater.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 17
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 18
          },
          {
            "module": "os",
            "alias": null,
            "line": 19
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 651
          },
          {
            "module": "re",
            "alias": null,
            "line": 485
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Version",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Dependency",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "ComponentType",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "VersionRegistry",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Severity",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "version_manager",
            "item": "Vulnerability",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "calculate_risk_score",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 90,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_matches_strategy",
            "line": 188,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_update_report",
            "line": 615,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UpdateStrategy",
            "line": 28,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "UpdateStatus",
            "line": 36,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "UpdateCandidate",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "UpdateResult",
            "line": 77,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DependencyUpdater",
            "line": 87,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'UpdateResult', 'add_argument', 'ValueError', 'rmtree', 'min', 'parse_args', '_update_python_dependency', 'DependencyUpdater', 'mkdir', 'split', 'dumps', 'basicConfig', 'UpdateCandidate', 'strip', 'parse', 'copytree', '_create_backup', 'ArgumentParser', '_check_version_update', 'getLogger', 'read', 'check_vulnerabilities', 'FileNotFoundError', 'run', 'readlines', 'strftime', 'startswith', 'glob', '_run_tests', 'join', 'load', 'append', 'print', 'writelines', '_matches_strategy', '_get_pypi_latest', 'upper', 'copy2', 'sum', 'dump', 'error', 'open', 'exists', 'apply_updates', 'escape', 'scan_all', 'main', '_rollback', 'now', 'int', 'find_updates', 'max', '_apply_dependency_update', 'all', 'values', 'write', 'info', 'field', '_get_latest_version', '_check_breaking_changes', '_update_docker_dependency', '_create_security_update', 'rglob', 'apply_update', '_update_javascript_dependency', 'calculate_risk_score', 'sort', 'str', 'relative_to', 'sub', 'isoformat', 'VersionRegistry', 'len', '_get_docker_latest', 'warning', '_get_npm_latest', 'generate_update_report', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/pip_forever_fix.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_command",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_installed_packages",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_constraints_file",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_lock_file",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "analyze_conflicts",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_deployment_requirements",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_forever_fix_config",
            "line": 166,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'chmod', 'get_installed_packages', 'run', 'analyze_conflicts', 'strftime', 'loads', 'check_output', 'main', 'join', 'append', 'get', 'print', 'now', 'split', 'sorted', 'create_forever_fix_config', 'isoformat', 'decode', 'len', 'makedirs', 'dump', 'exit', 'create_lock_file', 'create_deployment_requirements', 'strip', 'open', 'run_command', 'write', 'items', 'generate_constraints_file'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai_system_status.py": {
      "imports": {
        "standard": [
          {
            "module": "subprocess",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "glob",
            "alias": null,
            "line": 129
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_service",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_docker_containers",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'max', 'strip', 'split', 'open', 'load', 'run', 'glob', 'now', 'check_service', 'get_docker_containers', 'strftime', 'len', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_infrastructure.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_command",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_pulumi_stack",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_kubernetes_connection",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_namespace_resources",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_pod_status",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_services",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_pulumi_outputs",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'isinstance', 'join', 'test_func', 'run', 'run_command', 'append', 'get', 'loads', 'len', 'items', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_api_connections.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "urllib.request",
            "alias": null,
            "line": 31
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_openrouter_connection",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_database_connection",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mcp_server",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'test_mcp_server', 'sum', 'values', 'exists', 'test_openrouter_connection', 'test_database_connection', 'getenv', 'len', 'urlopen', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 466
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 232,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeAnalyzer",
            "alias": null,
            "line": 277,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AISystemValidator",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'get_performance_metrics', 'enumerate', 'list', 'isdigit', 'test_integration', 'run', '_validate_claude', 'min', 'ClaudeAnalyzer', 'strftime', 'generate_code', 'main', '_validate_cursor_ai', 'ClientSession', 'glob', 'isinstance', 'WeaviateManager', 'update', 'setup_validation_database', 'close', 'load', 'replace', 'ClientTimeout', '_validate_roo_code', 'append', 'get', 'range', 'print', 'extend', 'now', 'str', 'int', '_get_pg_version', 'analyze_code', 'analyze_project', 'save_validation_report', 'title', 'split', 'validate_all_components', 'dumps', 'initialize_database', 'isoformat', 'len', 'locals', 'sum', '_generate_assessment', 'compare_with_cursor_ai', '_validate_database_systems', 'dump', 'json', '_test_performance', 'virtual_memory', '_measure_response_time', 'warning', 'all', 'open', 'values', 'exists', '_test_scalability', 'gather', 'time', '_validate_mcp_servers', 'items', 'execute_query', '_test_security', 'CursorAIClient', 'AISystemValidator', '_validate_factory_ai'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/system_preparedness.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "platform",
            "alias": null,
            "line": 11
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "time",
            "alias": null,
            "line": 14
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 19
          },
          {
            "module": "requests",
            "alias": null,
            "line": 20
          },
          {
            "module": "socket",
            "alias": null,
            "line": 424
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "ai_components.eigencode.mock_analyzer",
            "item": "get_mock_analyzer",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 491,
            "level": 0
          },
          {
            "module": "ai_components.conductor_cli_enhanced",
            "item": "EnhancedconductorCLI",
            "alias": null,
            "line": 495,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_gather_system_info",
            "line": 77,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_network",
            "line": 94,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_relevant_env_vars",
            "line": 102,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_write_permissions",
            "line": 165,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_execute_permissions",
            "line": 175,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_api_keys",
            "line": 218,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_recommendations",
            "line": 562,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_requirement_action",
            "line": 619,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_integration_action",
            "line": 634,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_results",
            "line": 647,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_display_summary",
            "line": 667,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SystemPreparednessChecker",
            "line": 29,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_get_requirement_action', 'cpu_count', 'disk_usage', 'round', 'bool', '_generate_recommendations', 'get', 'connect_ex', 'keys', 'mkdir', 'socket', '_test_file_operations', '_check_write_permissions', 'settimeout', '_check_database_connection', 'python_version', 'version', 'virtual_memory', 'retrieve_context', 'write_text', 'unlink', 'items', '_save_results', 'getcwd', 'enumerate', 'run', 'join', '_check_network', 'load', 'append', '_run_sandbox_tests', 'system', 'print', 'upper', 'sum', '_check_dependencies', 'dump', 'lower', 'open', 'exists', '_display_summary', 'analyze_codebase', 'Path', '_test_integration_components', 'loads', 'main', 'isinstance', 'close', '_check_weaviate_connection', 'now', '_check_execute_permissions', 'int', 'communicate', 'read_text', 'all', 'values', '_test_network_operations', '_test_process_execution', '_check_integration_readiness', '_check_api_keys', 'SystemPreparednessChecker', 'WeaviateManager', 'DatabaseLogger', 'log_action', 'run_full_check', '_get_integration_action', 'create_subprocess_exec', 'str', 'isoformat', '_check_requirements', 'len', '_gather_system_info', 'get_mock_analyzer', 'time', 'gethostbyname', '_get_relevant_env_vars', '_test_mock_analyzer', 'TemporaryDirectory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_config.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "jsonschema",
            "item": "validate",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "jsonschema",
            "item": "ValidationError",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_yaml_config",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_workflow_config",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'validate', 'Path', 'safe_load', 'open', 'load', 'validate_yaml_config', 'get', 'validate_workflow_config', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/verify_local_deployment.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "requests",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "signal",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "start_service",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_service_health",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_postgres",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_redis",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_weaviate",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_mcp_servers",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start_api_server",
            "line": 182,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_services",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup",
            "line": 225,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 245,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "signal_handler",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LocalDeploymentVerifier",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'run', 'check_service_health', 'sleep', 'main', 'verify_services', 'start_redis', 'kill', 'close', 'append', 'get', 'start_weaviate', 'mkdir', 'print', 'str', 'start_mcp_servers', 'signal', 'copy', 'LocalDeploymentVerifier', 'start_api_server', 'start_service', 'Popen', 'upper', 'exit', 'strip', 'open', 'terminate', 'start_postgres', 'exists', 'wait', 'time', 'items', 'cleanup', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cleanup_engine.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 449
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 411,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "transient_file",
            "line": 406,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 75,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_json",
            "line": 89,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_find_scheduled_scripts",
            "line": 104,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_safe_to_remove",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "interactive_cleanup",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "non_interactive_cleanup",
            "line": 288,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_view_file",
            "line": 331,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_perform_delete",
            "line": 342,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_json",
            "line": 367,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 374,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_for_cleanup",
            "line": 413,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 431,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "safety_score",
            "line": 302,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 433,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f599e50>"
            ]
          }
        ],
        "classes": [
          {
            "name": "IntelligentCleanup",
            "line": 74,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', '_load_json', 'is_safe_to_remove', 'debug', 'add_argument', 'run', 'min', 'fromtimestamp', 'check_output', 'strftime', 'startswith', 'parse_args', '_view_file', 'StreamHandler', 'join', '_perform_delete', 'input', 'load', 'fromisoformat', 'replace', 'is_file', 'append', 'get', 'add', 'print', 'IntelligentCleanup', 'now', 'sort', 'str', 'int', 'func', 'non_interactive_cleanup', 'relative_to', 'register_for_cleanup', 'split', 'dumps', '_save_json', 'compile', 'isoformat', 'any', 'basicConfig', 'resolve', 'wraps', 'len', 'timedelta', 'generate_report', 'splitlines', 'dump', 'exit', 'read_text', 'error', '_find_scheduled_scripts', 'strip', 'warning', 'interactive_cleanup', 'lower', 'open', 'set', 'match', 'exists', 'unlink', 'info', 'ArgumentParser', 'FileHandler', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/initialize_roo_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "rich.panel",
            "item": "Panel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "Progress",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "SpinnerColumn",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "TextColumn",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mcp_integration",
            "item": "UnifiedContextManager",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMCPAdapter",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMode",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.unified_api_router",
            "item": "UnifiedAPIRouter",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "display_configuration",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'ModeTransitionManager', 'safe_load', 'getLogger', 'Progress', 'close_session', 'Path', 'wrap_mode_as_agent', 'add_row', 'run', 'RooMCPAdapter', '_make_routing_decision', 'check_environment', 'suggest_transition', 'main', 'update', 'StreamHandler', 'join', 'add_column', 'close', 'test_func', 'append', 'print', 'str', 'UnifiedContextManager', 'SpinnerColumn', 'create_session', 'run_database_migration', 'sync_context_bidirectional', 'split', 'add_task', 'track_mode_transition', 'basicConfig', 'transform_context', 'UnifiedAPIRouter', 'getenv', 'len', 'get_service_health', 'exit', 'read_text', 'error', 'Table', 'TextColumn', 'strip', 'execute', 'display_configuration', 'open', 'exists', 'Console', 'fit', 'items', 'insert', 'UnifiedDatabase', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/smoke_tests.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 8
          },
          {
            "module": "requests",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 66
          },
          {
            "module": "os",
            "alias": null,
            "line": 98
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 99
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 100,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 166,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 166,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 166,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 287,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "test_mcp_server_health",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mcp_task_creation",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_database_connection",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_weaviate_connection",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_conductor_service",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_monitoring_stack",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_all_tests",
            "line": 195,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SmokeTestRunner",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'TaskDefinition', 'AuthApiKey', 'SmokeTestRunner', 'add_argument', 'run', 'strftime', 'run_all_tests', 'main', 'parse_args', 'cursor', 'test_workflow_execution', 'close', 'Client', 'test_func', 'append', 'execute_workflow', 'get', 'print', 'create_workflow', 'now', 'is_ready', 'str', 'fetchone', 'isoformat', 'Workflowconductor', 'len', 'sum', 'dump', 'exit', 'json', 'execute', 'open', 'ArgumentParser', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_cherry_ai_system.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 15
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 16
          },
          {
            "module": "socket",
            "alias": null,
            "line": 87
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 394
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 402
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 398
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 406
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_environment",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_command",
            "line": 55,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_services",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_port",
            "line": 85,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_process",
            "line": 94,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_recommendations",
            "line": 239,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 263,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiSystemTest",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', '_check_port', 'run', 'generate_recommendations', 'FormData', 'check_environment', 'test_api_endpoints', 'strftime', 'startswith', 'test_search_modes', 'run_all_tests', 'check_services', 'main', 'test_personas', 'ClientSession', '_check_process', 'rmdir', 'close', 'replace', 'encode', 'append', 'connect_ex', 'get', 'process_iter', 'print', 'mkdir', 'now', 'socket', '_check_command', 'str', 'title', 'split', 'dumps', 'isoformat', 'any', 'getenv', 'len', 'upper', 'generate_report', 'write_bytes', 'settimeout', 'dump', 'json', 'cherry_aiSystemTest', 'all', 'open', 'hasattr', 'write_text', 'lower', 'values', 'exists', 'test_file_processing', 'unlink', 'items', 'add_field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/verify_environment.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "print_status",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_python_version",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_virtual_env",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_required_files",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_environment_variables",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_git_config",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_dependencies",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_gcp_auth",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_directory_structure",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 174,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'check_environment_variables', 'Path', 'read', 'run', 'check_dependencies', 'loads', 'main', 'join', 'bool', 'expanduser', 'append', 'get', 'print', 'is_dir', 'str', 'copy', 'check_python_version', 'check_required_files', 'exit', 'check_gcp_auth', 'strip', 'all', 'hasattr', 'check_directory_structure', 'check_virtual_env', 'values', 'open', 'exists', 'items', 'check_git_config', 'print_status'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 12
          },
          {
            "module": "ast",
            "alias": null,
            "line": 16
          },
          {
            "module": "re",
            "alias": null,
            "line": 17
          },
          {
            "module": "logging",
            "alias": null,
            "line": 18
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 882
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 880,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_latest_audit_report",
            "line": 45,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_checkpoint",
            "line": 59,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_checkpoint",
            "line": 69,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_log_fix",
            "line": 82,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_debug_file_operation",
            "line": 103,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_runtime_errors",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_fix_unterminated_strings",
            "line": 166,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_fix_indentation",
            "line": 191,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_fix_triple_quotes",
            "line": 220,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_mcp_servers",
            "line": 236,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_dependencies",
            "line": 312,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "consolidate_duplicates",
            "line": 379,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_configurations",
            "line": 498,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_version_conflicts",
            "line": 630,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_api_contracts",
            "line": 701,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "fix_error_handling",
            "line": 754,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 826,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_final_report",
            "line": 862,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aitedCodebaseFix",
            "line": 31,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'debug', 'list', 'enumerate', 'group', 'add_argument', 'run', 'stat', 'format_exc', 'count', 'min', 'lstrip', '_debug_file_operation', 'strftime', 'startswith', 'main', 'glob', 'parse_args', 'isinstance', '_fix_triple_quotes', 'StreamHandler', 'endswith', 'join', 'abs', 'pop', 'load', 'findall', 'append', 'get', 'keys', '_save_checkpoint', 'add', 'oct', 'print', 'mkdir', 'now', 'str', 'phase_func', 'int', 'max', 'split', 'sub', 'isoformat', '_fix_unterminated_strings', 'basicConfig', 'rstrip', '_log_fix', 'FileHandler', 'len', 'copy2', 'sum', '_fix_indentation', 'dump', 'exit', '_save_final_report', 'error', 'read_text', 'strip', 'warning', 'lower', 'open', 'set', 'write_text', 'values', 'with_suffix', 'exists', 'info', '_load_checkpoint', 'ArgumentParser', '_load_latest_audit_report', 'cwd', 'cherry_aitedCodebaseFix', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/eigencode_installer_simple.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 8
          },
          {
            "module": "requests",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "log_message",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_url",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "download_file",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'timestamp', 'run', 'strftime', 'remove', 'download_file', 'check_url', 'log_message', 'main', 'endswith', 'join', 'head', 'expanduser', 'get', 'now', 'print', 'isoformat', 'len', 'makedirs', 'dump', 'exit', 'json', 'strip', 'lower', 'open', 'exists', 'write'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "run",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clean_archives",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_services",
            "line": 105,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_config",
            "line": 175,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_mcp",
            "line": 221,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_mcp_servers",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_automation",
            "line": 437,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_setup",
            "line": 523,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 547,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiCompleteSetup",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'chmod', 'run', 'rmtree', 'cherry_aiCompleteSetup', 'strftime', 'startswith', 'setup_mcp', 'join', 'bool', 'replace', 'append', 'get', 'keys', 'add', 'mkdir', 'print', 'save_config', 'str', 'relative_to', 'split', 'dumps', 'sorted', 'print_summary', 'configure_services', 'create_mcp_servers', 'len', 'create_automation', 'dump', 'strip', 'open', 'set', 'exists', 'write', 'clean_archives', 'items', 'format', 'validate_setup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_postgres_connection.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 5
          },
          {
            "module": "os",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 70,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'fetch_one', 'pop', 'close', 'split', 'run', 'test_connections', 'UnifiedDatabase', 'initialize_pool', 'fetchval', 'print', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 17,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_core_files",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_directory_structure",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_search_engine_modules",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_ui_components",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_environment_setup",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_next_steps",
            "line": 135,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 174,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_report",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ImplementationStatus",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'check_search_engine_modules', 'Path', 'enumerate', 'check_ui_components', 'strftime', 'check_core_files', 'join', 'save_report', 'append', 'get', 'print', 'now', 'generate_next_steps', 'access', 'check_environment_setup', 'isoformat', 'ImplementationStatus', 'generate_report', 'dump', 'all', 'open', 'check_directory_structure', 'write_text', 'values', 'exists', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "calculate_overall_score",
            "line": 435,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructureRobustnessAnalyzer",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'chmod', 'run', 'calculate_overall_score', 'count', 'glob', 'isinstance', 'generate_optimization_script', 'round', 'load', 'append', 'get', 'print', 'now', 'analyze_api_routing', 'identify_ai_automation_improvements', 'isoformat', 'any', 'analyze_provisioning_scripts', 'len', 'upper', 'analyze_airbyte_configuration', 'dump', 'run_analysis', 'lower', 'open', 'InfrastructureRobustnessAnalyzer', 'exists', 'write', 'items', 'analyze_weaviate_configuration', 'analyze_domain_interfaces'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/mcp_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "mcp",
            "item": "MCPClient",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp",
            "item": "Tool",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 213,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPConfig",
            "line": 20,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MCPIntegration",
            "line": 28,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MCPAgentInterface",
            "line": 208,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MCPAgentInterface', 'getLogger', 'enumerate', 'list_available_tools', 'answer_question', 'run', 'MCPClient', 'main', 'join', 'close', 'query_mongodb', 'MCPIntegration', 'append', 'get', 'semantic_search', 'print', 'str', 'dumps', 'list_tools', 'any', 'basicConfig', 'error', 'initialize', 'call_tool', 'lower', 'MCPConfig', 'info', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/validate_environment.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_python",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_venv",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_npm",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'join', 'strip', 'check_venv', 'check_python', 'map', 'run', 'get', 'main', 'print', 'check_npm', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/monitoring_improvements.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 10
          },
          {
            "module": "requests",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 678,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_prometheus_config",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_alert_rules",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_grafana_dashboards",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_postgres_exporter",
            "line": 459,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_monitoring_stack",
            "line": 507,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_custom_metrics_endpoint",
            "line": 585,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_monitoring_stack",
            "line": 632,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MonitoringEnhancer",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'deploy_monitoring_stack', 'create_custom_metrics_endpoint', 'create_prometheus_config', 'main', 'isinstance', 'store_context', 'WeaviateManager', 'DatabaseLogger', 'replace', 'append', 'log_action', 'get', 'MonitoringEnhancer', 'mkdir', 'print', 'now', 'str', 'setup_postgres_exporter', 'dumps', 'isoformat', 'len', 'dump', 'verify_monitoring_stack', 'create_grafana_dashboards', 'json', 'open', 'write', 'items', 'create_alert_rules'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/python_codebase_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "ast",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "importlib.util",
            "alias": null,
            "line": 12
          },
          {
            "module": "signal",
            "alias": null,
            "line": 231
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "collections",
            "item": "Counter",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 591,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "find_python_files",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_file_safely",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "extract_imports",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "extract_definitions",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_name",
            "line": 155,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_import_resolution",
            "line": 165,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_can_resolve_import",
            "line": 197,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "detect_circular_dependencies",
            "line": 280,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_unused_definitions",
            "line": 313,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_duplicates",
            "line": 360,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_import_styles",
            "line": 385,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_analysis",
            "line": 414,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 495,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "dfs",
            "line": 282,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "timeout_handler",
            "line": 233,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PythonCodebaseAnalyzer",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'enumerate', 'parse_file_safely', '_get_name', '_can_resolve_import', 'min', 'find_duplicates', 'strftime', 'startswith', 'main', 'isinstance', 'update', 'endswith', 'index', 'join', 'replace', 'TimeoutError', 'append', 'rglob', 'get', 'add', 'range', 'print', 'extend', 'walk', 'dfs', 'now', 'str', 'PythonCodebaseAnalyzer', 'extract_definitions', 'relative_to', 'signal', 'split', 'isoformat', 'copy', 'alarm', 'resolve', 'len', 'generate_report', 'detect_circular_dependencies', 'find_spec', 'dump', 'defaultdict', 'run_analysis', 'hasattr', 'open', 'set', 'check_import_resolution', 'exists', 'check_import_styles', 'extract_imports', 'parse', 'items', 'find_unused_definitions', 'find_python_files'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/demo_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "warnings",
            "alias": null,
            "line": 264
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Path', 'TaskDefinition', 'filterwarnings', 'timestamp', 'run', 'remove', 'main', 'append', 'execute_workflow', 'get', 'demo_task_decomposition', 'create_workflow', 'print', 'demo_agent_coordination', 'now', 'str', 'int', 'dumps', 'len', 'Workflowconductor', 'demo_context_management', 'demo_workflow_optimization', 'items', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_nl_and_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "IntentClassifier",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "ResponseGenerator",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "IntentCategory",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SimpleAgent",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'timestamp', 'run', 'test_natural_language', 'strftime', 'main', 'dirname', 'process_task', 'IntentClassifier', 'append', 'test_nl_to_agent', 'ResponseGenerator', 'get', 'classify', 'SimpleAgent', 'now', 'print', 'isoformat', 'len', 'abspath', 'lower', 'test_simple_agent', 'insert', 'generate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/vultr_provision.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 14
          },
          {
            "module": "sys",
            "alias": null,
            "line": 15
          },
          {
            "module": "requests",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "__future__",
            "item": "annotations",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_headers",
            "line": 22,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_instance",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "attach_volume",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'post', 'add_argument', 'raise_for_status', 'get', '_headers', 'exit', 'ArgumentParser', 'attach_volume', 'main', 'print', 'parse_args', 'create_instance', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/rapid_production_deploy.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_command",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RapidProductionDeploy",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'RapidProductionDeploy', 'Path', 'log', 'chmod', 'setup_basic_monitoring', 'run_deployment', 'setup_cdn_optimization', 'run', 'strftime', 'sleep', 'main', 'fix_postgresql_connection', 'join', 'total_seconds', 'append', 'hex', 'mkdir', 'print', 'deploy_to_production', 'now', 'str', 'urandom', 'write_text', 'run_command', 'setup_ssl_certificates'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "sqlite3",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "auto_mode_selector",
            "item": "AutoModeSelector",
            "alias": null,
            "line": 43,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_conductor_status",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "auto_select_mode",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_to_conductor",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "launch_roo_with_mode",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "interactive_launcher",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RooEnhancedLauncher",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'commit', 'check_conductor_status', 'run', 'main', 'cursor', 'join', 'input', 'close', 'auto_select_mode', 'insert', 'log_to_conductor', 'print', 'RooEnhancedLauncher', 'str', 'dumps', 'len', 'AutoModeSelector', 'launch_roo_with_mode', 'execute', 'strip', 'suggest_mode', 'lower', 'exists', 'interactive_launcher', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/architect_advanced_system.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_directory_structure",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_search_engine_module",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_file_ingestion_module",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_multimedia_module",
            "line": 213,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_operator_mode_module",
            "line": 265,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_ui_module",
            "line": 308,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_persona_module",
            "line": 356,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "design_data_flows",
            "line": 408,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_module_templates",
            "line": 447,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_api_specifications",
            "line": 602,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_architecture_report",
            "line": 688,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AdvancedSystemArchitect",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'chmod', 'AdvancedSystemArchitect', 'design_data_flows', 'design_ui_module', 'design_operator_mode_module', 'design_search_engine_module', 'generate_architecture_report', 'mkdir', 'print', 'now', 'design_persona_module', 'isoformat', 'design_multimedia_module', 'dump', 'design_file_ingestion_module', 'open', 'write', 'create_directory_structure', 'create_module_templates', 'create_api_specifications', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/code_inventory.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 1
          },
          {
            "module": "os",
            "alias": null,
            "line": 2
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'endswith', 'access', 'join', 'dumps', 'append', 'startswith', 'print', 'walk'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/security_audit.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "re",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 12
          },
          {
            "module": "secrets",
            "alias": null,
            "line": 13
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 17
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 18
          },
          {
            "module": "requests",
            "alias": null,
            "line": 20
          },
          {
            "module": "math",
            "alias": null,
            "line": 742
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 818
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "cryptography.fernet",
            "item": "Fernet",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_finding",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_api_secret_handling",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_workflow_secrets",
            "line": 186,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_mcp_server_security",
            "line": 211,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "assess_weaviate_airbyte_access",
            "line": 340,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "review_postgresql_security",
            "line": 430,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_security_report",
            "line": 536,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_security_score",
            "line": 649,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_entropy",
            "line": 661,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "implement_security_enhancements",
            "line": 674,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_dict",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SecurityAuditor",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'read', 'log2', 'list', 'enumerate', 'group', 'run', 'count', 'strftime', 'startswith', 'check_dict', 'main', 'isinstance', 'glob', 'cursor', 'store_context', 'WeaviateManager', 'endswith', 'join', 'review_postgresql_security', 'DatabaseLogger', 'add_finding', 'append', 'log_action', 'check_api_secret_handling', 'get', 'fetchall', 'assess_weaviate_airbyte_access', 'validate_mcp_server_security', 'range', 'print', 'extend', 'walk', 'now', 'str', 'int', 'max', 'dumps', 'SecurityAuditor', 'fetchone', 'isoformat', 'any', 'generate_security_report', 'len', 'upper', '_calculate_entropy', 'dump', 'exit', '_check_workflow_secrets', 'implement_security_enhancements', 'execute', 'match', 'lower', 'open', 'finditer', 'exists', '_get_connection', 'items', 'chr', 'start', '_calculate_security_score'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_new_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "redis",
            "alias": null,
            "line": 91
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 144
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.mongodb_manager",
            "item": "MongoDBMemoryManager",
            "alias": null,
            "line": 52,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 183,
            "level": 0
          },
          {
            "module": "litellm",
            "item": "completion",
            "alias": null,
            "line": 246,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 272,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SetupTester",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'read', 'AuthApiKey', 'run', 'completion', 'run_all_tests', 'main', 'test_docker_compose', 'test_redis_connection', 'join', 'dirname', 'close', 'Client', 'append', 'get', 'delete', 'test_mongodb_connection', 'ping', 'insert', 'print', 'MongoDBMemoryManager', 'int', 'is_ready', 'str', 'test_settings_import', 'test_weaviate_connection', 'get_settings', 'store_memory', 'print_summary', 'Redis', 'getenv', 'len', 'sum', 'SetupTester', 'abspath', 'test_environment_variables', 'Exception', 'hasattr', 'open', 'set', 'lower', 'values', 'clear_agent_memories', 'items', 'test_llm_connections', 'retrieve_memories'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_roo_integration_simple.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_file_exists",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_config_valid",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'test_file_exists', 'Path', 'endswith', 'read', 'abspath', 'dirname', 'open', 'load', 'exists', 'test_config_valid', 'len', 'insert', 'main', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_tool_system.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "core.conductor.src.tools.executor",
            "item": "ToolExecutor",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.tools.registry",
            "item": "ToolRegistry",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_execution_stats', 'search_tools', 'run', 'register_implementation', 'test_tool_system', 'join', 'dirname', 'ToolExecutor', 'append', 'export_to_markdown', 'get_tool', 'print', 'ToolRegistry', 'sorted', 'len', 'makedirs', 'execute', 'abspath', 'open', 'set', 'to_function_calling_schema', 'values', 'write'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/error_handling_enhancements.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 20
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 620,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 74,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_on_success",
            "line": 116,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_failure",
            "line": 124,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_log_state_change",
            "line": 137,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 159,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_circuit_breaker",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_delay",
            "line": 263,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 278,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_fallback",
            "line": 284,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_service_health",
            "line": 351,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_health",
            "line": 371,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 379,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log_error_with_context",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_stack_frames",
            "line": 448,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_recovery_suggestions",
            "line": 460,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 513,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_register_fallbacks",
            "line": 522,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 624,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RetryStrategy",
            "line": 32,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RetryConfig",
            "line": 41,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CircuitBreakerConfig",
            "line": 57,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CircuitBreakerState",
            "line": 64,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "EnhancedCircuitBreaker",
            "line": 71,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedRetryHandler",
            "line": 156,
            "bases": [],
            "decorators": []
          },
          {
            "name": "GracefulDegradationHandler",
            "line": 275,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedLoggingHandler",
            "line": 376,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ErrorRecoveryconductor",
            "line": 510,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedWorkflowconductor",
            "line": 623,
            "bases": [
              "Workflowconductor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'primary_func', 'Path', '_attempt_recovery', 'getLogger', 'run', 'format_exc', 'min', '_extract_stack_frames', 'sleep', 'main', 'isinstance', 'execute_with_fallback', 'WeaviateManager', 'store_context', 'StreamHandler', 'EnhancedRetryHandler', 'GracefulDegradationHandler', 'DatabaseLogger', '_generate_recovery_suggestions', 'log_error_with_context', '_register_fallbacks', 'append', 'execute_workflow', 'get_circuit_breaker', 'log_action', '_update_service_health', 'get', 'range', 'enhance_conductor_error_handling', 'now', 'print', 'extend', '_on_success', 'setFormatter', 'str', 'int', '_calculate_delay', 'func', 'max', 'dumps', 'addHandler', 'EnhancedCircuitBreaker', 'isoformat', 'retry_with_backoff', 'any', 'extract_stack', '_log_state_change', '__init__', 'ConnectionError', 'super', 'get_service_health', 'type', 'call', '_on_failure', 'error', 'RetryConfig', 'Exception', 'lower', 'hasattr', 'open', 'Formatter', 'execute_with_recovery', 'register_fallback', 'write', 'EnhancedLoggingHandler', 'time', 'setLevel', 'CircuitBreakerConfig', 'ErrorRecoveryconductor', 'items', 'field', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_postgres_schema.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.database.postgresql_client",
            "item": "PostgreSQLClient",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_schema",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "insert_default_agents",
            "line": 172,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_schema",
            "line": 186,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'commit', 'getLogger', 'add_argument', 'PostgreSQLClient', 'main', 'parse_args', 'cursor', 'dirname', 'close', 'insert_default_agents', 'verify_schema', 'create_agent', 'get_connection', 'split', 'health_check', 'basicConfig', 'setup_schema', 'len', 'exit', 'error', 'abspath', 'warning', 'execute', 'strip', 'info', 'execute_query', 'ArgumentParser', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_conductor_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 148
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 139
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 32,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'TaskDefinition', 'run', 'strftime', 'startswith', 'main', 'join', 'close', 'append', 'execute_workflow', 'get', 'create_workflow', 'print', 'now', 'test_conductor', 'str', 'split', 'Workflowconductor', 'len', 'exit', 'strip', 'hasattr', 'open', 'exists', 'items', 'print_exc'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 101,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiDeployer",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'chmod', 'run', 'deploy', 'cherry_aiDeployer', 'strftime', 'sleep', 'main', 'total_seconds', 'append', 'step_func', 'now', 'str', 'split', 'isoformat', 'basicConfig', 'len', 'Popen', 'dump', 'read_text', 'error', 'strip', 'warning', 'open', 'write_text', 'exists', 'load_dotenv', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_design_system.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "IntelligentCache",
            "alias": null,
            "line": 71,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 71,
            "level": 0
          },
          {
            "module": "ai_components.design.recraft_integration",
            "item": "RecraftDesignGenerator",
            "alias": null,
            "line": 78,
            "level": 0
          },
          {
            "module": "ai_components.design.dalle_integration",
            "item": "DALLEImageGenerator",
            "alias": null,
            "line": 85,
            "level": 0
          },
          {
            "module": "ai_components.design.design_conductor",
            "item": "Designconductor",
            "alias": null,
            "line": 92,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "IntelligentCache",
            "alias": null,
            "line": 114,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 114,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_summary",
            "line": 321,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SimpleDesignSystemTest",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'get_performance_metrics', 'run', 'main', 'join', 'bool', 'append', 'get', 'run_tests', 'print', 'now', 'str', 'int', '_test_cache_system', 'isoformat', '_test_system_integration', 'len', 'sum', 'SimpleDesignSystemTest', 'dump', 'exit', 'type', 'open', '_test_imports', 'values', '_test_mock_design_generation', '_generate_summary', 'time', 'items', 'IntelligentCache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_natural_language.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 12
          },
          {
            "module": "requests",
            "alias": null,
            "line": 87
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'post', 'len', 'join', 'test_text_command', 'enumerate', 'dumps', 'AsyncClient', 'run', 'raise_for_status', 'get', 'getenv', 'test_websocket', 'exit', 'main', 'print', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/simple_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "http.server",
            "alias": null,
            "line": 5
          },
          {
            "module": "socketserver",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "urllib.parse",
            "item": "urlparse",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "parse_qs",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "do_GET",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "do_POST",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPHandler",
            "line": 9,
            "bases": [
              "BaseHTTPRequestHandler"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'int', 'send_header', 'end_headers', 'read', 'split', 'dumps', 'encode', 'write', 'send_response', 'startswith', 'print', 'serve_forever', 'TCPServer'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/setup_ai_services.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeProjectAnalyzer",
            "alias": null,
            "line": 191,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 192,
            "level": 0
          },
          {
            "module": "ai_components.github_copilot.copilot_integration",
            "item": "GitHubCopilotClient",
            "alias": null,
            "line": 193,
            "level": 0
          },
          {
            "module": "scripts.ai_system_conductor",
            "item": "AISystemconductor",
            "alias": null,
            "line": 194,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_existing_env",
            "line": 12,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_github_integration",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_anthropic_claude",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_openai",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_openrouter",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_simulation_services",
            "line": 115,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_env_file",
            "line": 130,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_configuration",
            "line": 184,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "show_next_steps",
            "line": 213,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'show_next_steps', 'setup_anthropic_claude', 'setup_github_integration', 'startswith', 'main', 'update_env_file', 'update', 'input', 'get', 'keys', 'check_existing_env', 'print', 'extend', 'setup_openrouter', 'setup_simulation_services', 'split', 'AISystemconductor', 'test_configuration', 'len', 'setup_openai', 'strip', 'open', 'exists', 'write', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/fix_python_version_permanently.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "update_file",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_version_lock_file",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_environment_validator",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 258,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'read', 'create_environment_validator', 'warning', 'sub', 'open', 'create_version_lock_file', 'run', 'exists', 'write', 'basicConfig', 'info', 'main', 'update_file'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_coordination_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "scripts.setup_api_keys",
            "item": "SimpleSecretsManager",
            "alias": null,
            "line": 107,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urlparse",
            "alias": null,
            "line": 59,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_environment",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_database",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_api_keys",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_conductor_import",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'lstrip', 'urlparse', 'startswith', 'main', 'append', 'get', 'print', 'test_database', 'str', 'test_environment', 'split', 'test_conductor_import', 'len', 'sum', 'exit', 'test_api_keys', 'strip', 'open', 'exists', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 10
          },
          {
            "module": "importlib.util",
            "alias": null,
            "line": 198
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "load_dotenv",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 357,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_mcp_configuration",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_conductor_config",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mcp_server_syntax",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_environment_variables",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mcp_server_connections",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_roo_mode_availability",
            "line": 232,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_conductor_components",
            "line": 269,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 294,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_summary",
            "line": 332,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "conductorMCPVerifier",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'check_environment_variables', 'Path', 'list', 'run', 'conductorMCPVerifier', 'main', 'glob', 'endswith', 'bool', 'load', 'replace', 'append', 'get', 'keys', 'spec_from_file_location', 'test_mcp_server_connections', 'print', 'now', 'check_mcp_configuration', 'str', 'isoformat', 'print_summary', 'len', 'generate_report', 'dump', 'exit', 'check_roo_mode_availability', 'verify_conductor_components', 'strip', 'check_conductor_config', 'all', 'open', 'hasattr', 'values', 'test_mcp_server_syntax', 'exists', 'load_dotenv', 'items', 'exec_module', 'insert', 'module_from_spec'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/optimize_without_eigencode.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "threading",
            "alias": null,
            "line": 12
          },
          {
            "module": "multiprocessing",
            "alias": null,
            "line": 17
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "concurrent.futures",
            "item": "ThreadPoolExecutor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "concurrent.futures",
            "item": "ProcessPoolExecutor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "AgentCoordinator",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.eigencode.mock_analyzer",
            "item": "get_mock_analyzer",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_performance_report",
            "line": 537,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 642,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_config",
            "line": 649,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SystemOptimizer",
            "line": 30,
            "bases": [],
            "decorators": []
          },
          {
            "name": "OptimizedWorkflowExecutor",
            "line": 639,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'cpu_count', 'run', '_load_config', '_generate_performance_report', 'min', 'main', '_implement_caching_strategy', 'WeaviateManager', 'cpu_percent', 'DatabaseLogger', 'execute_optimized_workflow', 'load', 'append', 'run_full_optimization', '_optimize_resource_usage', 'log_action', 'execute_workflow', '_configure_load_balancing', '_asdict', 'get', 'net_io_counters', 'mkdir', 'print', 'now', 'str', 'int', 'OptimizedWorkflowExecutor', '_optimize_context_management', 'disk_io_counters', 'isoformat', 'Workflowconductor', 'len', 'ThreadPoolExecutor', 'dump', '_optimize_agent_coordination', 'virtual_memory', '_optimize_database_performance', 'open', 'exists', 'get_mock_analyzer', 'time', 'items', '_optimize_parallel_execution', 'SystemOptimizer'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 43
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 71
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 156
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 192
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 232
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 119
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 177
          },
          {
            "module": "redis",
            "alias": null,
            "line": 135
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "weaviate.classes.init",
            "item": "Auth",
            "alias": null,
            "line": 44,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 222,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "generate_report",
            "line": 317,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiConnectionTester",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'run', 'strftime', 'run_all_tests', 'main', 'test_redis_connection', 'list_all', 'close', 'AsyncClient', 'append', 'test_mcp_servers', 'get', 'keys', 'fetchval', 'test_postgresql_connection', 'ping', 'print', 'now', 'str', 'is_ready', 'test_unified_database', 'test_weaviate_connection', 'split', 'isoformat', 'Redis', 'basicConfig', 'cherry_aiConnectionTester', 'test_conductor_api', 'getenv', 'len', 'upper', 'sum', 'generate_report', 'dump', 'exit', 'warning', 'open', 'values', 'test_docker_services', 'info', 'connect_to_local', 'items', 'insert', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_specialized_agents.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "PersonalAgent",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "PayReadyAgent",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "ParagonMedicalResearchAgent",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "AgentType",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "UserPreference",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "ApartmentListing",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "ClinicalTrial",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "get_specialized_agent",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "process_agent_task",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "agent",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f2e6190>"
            ]
          },
          {
            "name": "agent",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f39c5d0>"
            ]
          },
          {
            "name": "agent",
            "line": 217,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f344f50>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestPersonalAgent",
            "line": 23,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPayReadyAgent",
            "line": 127,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestParagonMedicalResearchAgent",
            "line": 213,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestAgentRegistry",
            "line": 328,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'search_clinical_trials', 'learn_preference', 'get_specialized_agent', 'analyze_listing', '_extract_and_rank_results', 'main', 'isinstance', '_filter_by_distance', 'object', 'ClinicalTrial', 'process_task', '_calculate_neighborhood_score', 'process_agent_task', 'adaptive_search', 'PersonalAgent', 'ParagonMedicalResearchAgent', 'AsyncMock', 'PayReadyAgent', 'raises', 'len', 'patch', '_calculate_relevance_score', 'market_analysis', 'Mock', '_calculate_tech_score', 'UserPreference', 'setup_trial_alert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_example.py": {
      "imports": {
        "standard": [
          {
            "module": "unittest",
            "alias": null,
            "line": 1
          }
        ],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_simple_assertion",
            "line": 4,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestExample",
            "line": 3,
            "bases": [
              "TestCase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'main', 'assertEqual'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_unified_postgresql.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": "get_connection_manager",
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "close_connection_manager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": "get_unified_postgresql",
            "line": 19,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "close_unified_postgresql",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "get_unified_database",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "close_unified_database",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "event_loop",
            "line": 453,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f360650>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestConnectionManager",
            "line": 25,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestUnifiedPostgreSQL",
            "line": 82,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestUnifiedDatabase",
            "line": 308,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestBackgroundTasks",
            "line": 409,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_performance_metrics', 'uuid4', 'list', 'audit_log', 'close_unified_postgresql', 'agent_list', 'session_delete', 'delete_agent', 'sleep', 'workflow_update', 'main', 'fixture', 'memory_snapshot_create', 'close', 'agent_update', 'cache_get_by_tags', 'cache_get', 'workflow_get', 'append', 'get_unified_database', 'agent_create', 'update_agent', 'get_event_loop_policy', 'fetchval', 'create_agent', 'close_connection_manager', 'range', 'create_workflow', 'get_connection_manager', 'cache_delete', 'session_update', '_cleanup_expired_sessions', 'get_unified_postgresql', 'memory_snapshot_get', 'health_check', 'any', 'session_get', 'close_unified_database', 'cache_set', 'workflow_delete', 'workflow_list', 'len', 'agent_get', 'audit_query', 'new_event_loop', 'delete_workflow', 'session_list', 'get_pool_stats', 'memory_snapshot_list', '_cleanup_expired_cache', 'get_agent', 'gather', 'time', 'workflow_create', 'session_create', 'agent_delete', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
          "line": 23,
          "module": "shared.database.unified_db_v2",
          "item": "get_unified_database",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
          "line": 23,
          "module": "shared.database.unified_db_v2",
          "item": "close_unified_database",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/conftest.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_persona_for_tests",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f39ca10>"
            ]
          },
          {
            "name": "mock_llm_client",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f39c090>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'PersonaConfig', 'patch', 'basicConfig', 'AsyncMock', 'fixture', 'type'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_llm_intelligent_router.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "IntelligentLLMRouter",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "QueryClassifier",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "QueryType",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "ModelProfile",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "RoutingDecision",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "classifier",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f5afd90>"
            ]
          },
          {
            "name": "router",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f53da10>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestQueryClassifier",
            "line": 18,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestIntelligentLLMRouter",
            "line": 86,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Exception', 'lower', 'QueryClassifier', 'RoutingDecision', 'route_query', 'append', 'get_routing_analytics', 'utcnow', '_select_optimal_model', 'AsyncMock', 'Mock', 'len', 'IntelligentLLMRouter', 'classify', 'main', 'object', 'patch'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          "line": 10,
          "module": "core.llm_intelligent_router",
          "item": "IntelligentLLMRouter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          "line": 10,
          "module": "core.llm_intelligent_router",
          "item": "QueryClassifier",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          "line": 10,
          "module": "core.llm_intelligent_router",
          "item": "QueryType",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          "line": 10,
          "module": "core.llm_intelligent_router",
          "item": "ModelProfile",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
          "line": 10,
          "module": "core.llm_intelligent_router",
          "item": "RoutingDecision",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/test_data_ingestion.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 11
          },
          {
            "module": "zipfile",
            "alias": null,
            "line": 12
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.data_ingestion.parsers",
            "item": "SlackParser",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.data_ingestion.parsers",
            "item": "ZipHandler",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.data_ingestion.storage",
            "item": "PostgresAdapter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.data_ingestion.storage",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.data_ingestion.interfaces.parser",
            "item": "ParsedData",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.data_ingestion.interfaces.storage",
            "item": "StorageResult",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.data_ingestion.interfaces.storage",
            "item": "StorageType",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "slack_message_data",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f309350>"
            ]
          },
          {
            "name": "slack_users_data",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f47b390>"
            ]
          },
          {
            "name": "postgres_config",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f47b490>"
            ]
          },
          {
            "name": "weaviate_config",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f4bdb10>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestSlackParser",
            "line": 101,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestZipHandler",
            "line": 200,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPostgresAdapter",
            "line": 254,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestWeaviateAdapter",
            "line": 311,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestDataIngestionPipeline",
            "line": 352,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPerformance",
            "line": 400,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestErrorHandling",
            "line": 439,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'uuid4', 'WeaviateAdapter', 'PostgresAdapter', 'loads', 'sleep', 'ZipFile', 'main', 'validate', 'disconnect', 'ZipHandler', 'StorageResult', '_prepare_data_object', 'total_seconds', 'encode', 'append', 'is_connected', 'SlackParser', 'store', 'range', 'str', 'dumps', 'raises', 'len', 'seek', 'all', 'NamedTemporaryFile', 'writestr', 'extract_metadata', 'utcnow', 'unlink', 'parse'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_enhanced_methods.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_unified_postgresql_enhanced', 'uuid4', 'get_connection_manager_enhanced', 'run', 'session_delete', 'get_pool_recommendations', 'memory_snapshot_create', 'cache_get_by_tags', 'get', 'memory_snapshot_delete', 'print', 'cache_get_many', 'cache_delete', 'memory_snapshot_get', 'cache_set', 'len', 'sum', 'session_analytics', 'test_enhanced_methods', 'session_list', 'get_pool_stats', 'memory_snapshot_list', 'get_extended_pool_stats', 'values', 'session_create', 'cache_info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_mvp_imports.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 6
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "ContextualMemory",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "enhanced_vector_memory_system",
            "item": "EnhancedVectorMemorySystem",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataAggregationconductor",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataSourceConfig",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "enhanced_natural_language_interface",
            "item": "ConversationMode",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "enhanced_natural_language_interface",
            "item": "EnhancedNaturalLanguageInterface",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "mvp_cherry_ai_ai",
            "item": "cherry_aiAIMVP",
            "alias": null,
            "line": 51,
            "level": 0
          },
          {
            "module": "enhanced_natural_language_interface",
            "item": "ConversationMode",
            "alias": null,
            "line": 63,
            "level": 0
          },
          {
            "module": "data_source_integrations",
            "item": "DataSourceConfig",
            "alias": null,
            "line": 78,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_enhanced_vector_memory_system_import",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_data_source_integrations_import",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_enhanced_natural_language_interface_import",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_mvp_cherry_ai_ai_import",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_conversation_mode_enum",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_data_source_config_creation",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestMVPImports",
            "line": 15,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestBasicFunctionality",
            "line": 57,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'Path', 'DataSourceConfig', 'skip', 'insert', 'main'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
          "line": 21,
          "module": "enhanced_vector_memory_system",
          "item": "ContextualMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
          "line": 21,
          "module": "enhanced_vector_memory_system",
          "item": "EnhancedVectorMemorySystem",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_infrastructure.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "Environment",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceHealth",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceRegistry",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceStatus",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "Event",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "EventBus",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "EventPriority",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_settings_defaults",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_environment_detection",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_event_history",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_statistics",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handler",
            "line": 166,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestConfiguration",
            "line": 13,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestServiceRegistry",
            "line": 53,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestEventBus",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'register_service', 'dict', 'ServiceRegistry', 'get_event_history', 'Settings', 'get_service', 'get_stats', 'publish_sync', 'ServiceHealth', 'health_check_all', 'subscribe', 'append', 'AsyncMock', 'len', 'publish', 'EventBus', 'main', 'range'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_llm_router_core.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "UseCase",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "ModelTier",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "RouterConfig",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "ModelMapping",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.cache_manager",
            "item": "CacheManager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.connection_manager",
            "item": "ConnectionManager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.connection_manager",
            "item": "CircuitBreakerState",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.health_monitor",
            "item": "HealthMonitor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.health_monitor",
            "item": "HealthStatus",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.llm_router_enhanced",
            "item": "UnifiedLLMRouter",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_circuit_breaker_state",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_custom_mapping",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestCacheManager",
            "line": 19,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestConnectionManager",
            "line": 92,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestHealthMonitor",
            "line": 152,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestUnifiedLLMRouter",
            "line": 217,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestIntegration",
            "line": 315,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MagicMock', 'run', 'UnifiedLLMRouter', 'register_health_check', 'add_custom_mapping', 'sleep', 'get_metrics', 'check_provider_health', 'main', 'complete', 'ModelMapping', 'get_client', 'close', 'stop', 'get', 'delete', 'RouterConfig', 'range', 'CacheManager', 'CircuitBreakerState', 'remove_custom_mapping', 'AsyncMock', 'ConnectionManager', 'raises', 'patch', 'initialize', 'HealthMonitor', 'set', 'assert_called_once', 'get_health_status', 'request', 'get_model_mapping', 'time', 'start', 'Mock'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
          "line": 14,
          "module": "core.cache_manager",
          "item": "CacheManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
          "line": 17,
          "module": "core.llm_router_enhanced",
          "item": "UnifiedLLMRouter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/test_resources.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "io",
            "item": "BytesIO",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "fastapi.testclient",
            "item": "TestClient",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMEmbeddingResponse",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMUsage",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.main",
            "item": "app",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_memory_service",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f489cd0>"
            ]
          },
          {
            "name": "mock_litellm_client_instance",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f382a50>"
            ]
          },
          {
            "name": "mock_weaviate_adapter_instance",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f383890>"
            ]
          },
          {
            "name": "test_upload_csv_success",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f2fb850>",
              "<ast.Call object at 0x7a6b7f598d10>",
              "<ast.Call object at 0x7a6b7f59b450>"
            ]
          },
          {
            "name": "test_upload_jsonl_success",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f390090>",
              "<ast.Call object at 0x7a6b7f3928d0>",
              "<ast.Call object at 0x7a6b7f391110>"
            ]
          },
          {
            "name": "test_upload_json_success",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1b5210>",
              "<ast.Call object at 0x7a6b7f41e4d0>",
              "<ast.Call object at 0x7a6b7f41d950>"
            ]
          },
          {
            "name": "test_upload_unsupported_file_type",
            "line": 167,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3fd390>",
              "<ast.Call object at 0x7a6b7f3fd750>",
              "<ast.Call object at 0x7a6b7f3fdc10>"
            ]
          },
          {
            "name": "test_upload_embedding_error",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f432390>",
              "<ast.Call object at 0x7a6b7f431c90>",
              "<ast.Call object at 0x7a6b7f431e10>"
            ]
          },
          {
            "name": "test_upload_memory_service_store_error",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f372790>",
              "<ast.Call object at 0x7a6b7f370990>",
              "<ast.Call object at 0x7a6b7f371490>"
            ]
          },
          {
            "name": "test_upload_weaviate_store_error",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3cbbd0>",
              "<ast.Call object at 0x7a6b7f3c8290>",
              "<ast.Call object at 0x7a6b7f3c9e50>"
            ]
          },
          {
            "name": "test_upload_file_save_error",
            "line": 319,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f484910>",
              "<ast.Call object at 0x7a6b7f3959d0>",
              "<ast.Call object at 0x7a6b7f394290>",
              "<ast.Call object at 0x7a6b7f395290>"
            ]
          },
          {
            "name": "test_upload_no_filename",
            "line": 356,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f37bf10>",
              "<ast.Call object at 0x7a6b7f37a490>",
              "<ast.Call object at 0x7a6b7f378650>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'MagicMock', 'post', 'assert_any_call', 'LLMEmbeddingResponse', 'BytesIO', 'Exception', 'hasattr', 'encode', 'TestClient', 'assert_called_once', 'assert_called', 'AsyncMock', 'assert_not_called', 'LLMUsage', 'patch', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_agent_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "Agentconductor",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "Workflow",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "WorkflowTask",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "WorkflowStatus",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "TaskStatus",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "get_agent_conductor",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "create_comprehensive_search_workflow",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "AgentType",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_circuit_breaker_initial_state",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_circuit_breaker_opens_after_threshold",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_circuit_breaker_resets_on_success",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_circuit_breaker_recovery_timeout",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_task_creation",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "conductor",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f33dcd0>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestCircuitBreaker",
            "line": 23,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestWorkflowTask",
            "line": 72,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestAgentconductor",
            "line": 91,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestWorkflowCreation",
            "line": 346,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Workflow', 'put', '_execute_single_task', 'main', 'cancel_workflow', 'WorkflowTask', 'create_comprehensive_search_workflow', 'next', '_create_checkpoint', 'Agentconductor', 'execute_workflow', 'can_execute', 'get_workflow_status', 'range', 'create_workflow', '_build_execution_plan', 'record_success', 'any', 'AsyncMock', 'raises', 'len', 'timedelta', 'CircuitBreaker', 'patch', 'record_failure', '_message_processor', 'Exception', 'set', 'utcnow', 'get_agent_conductor', 'Mock'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/test_api_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 5
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "httpx",
            "item": "AsyncClient",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi.testclient",
            "item": "TestClient",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "agent.app.main",
            "item": "app",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "AgentType",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "QueryType",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "TestLLMcoordinationAPI",
            "line": 16,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestErrorHandling",
            "line": 317,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'Exception', 'all', 'ValueError', 'AsyncClient', 'get', 'AsyncMock', 'Mock', 'len', 'main', 'isinstance', 'patch', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/test_api_integration.py",
          "line": 14,
          "module": "core.llm_intelligent_router",
          "item": "QueryType",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/factory_integration/context_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 16
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 17
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "OrderedDict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "weaviate.exceptions",
            "item": "WeaviateException",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "cache_manager",
            "item": "CacheManager",
            "alias": null,
            "line": 22,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 72,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ContextMetadata",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ContextVersion",
            "line": 37,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedContextManager",
            "line": 47,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'Field', '_get_context_data', 'rand', 'ValueError', 'create_task', '_sync_loop', 'fetchrow', 'sleep', 'get_metrics', 'ContextMetadata', 'store_context', 'update', 'dict', 'join', 'encode', 'get_context', 'append', '_generate_embeddings', 'get', 'stop', 'fetchval', 'with_near_vector', '_get_context_metadata', '_store_version_history', 'str', 'acquire', '_store_in_weaviate', 'max', '_store_context_metadata', 'dumps', 'tolist', 'isoformat', 'copy', 'with_limit', 'len', '_get_context_version', 'error', 'execute', 'map', 'set', 'utcnow', 'fetch', 'info', 'start', 'cancel', 'items', 'do', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/factory_integration/__init__.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 30
          },
          {
            "module": "os",
            "alias": null,
            "line": 31
          }
        ],
        "from": [],
        "relative": [
          {
            "module": "factory.bridge",
            "item": "FactoryBridgeGateway",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "factory.context",
            "item": "FactoryContextManager",
            "alias": null,
            "line": 22,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_factory_integration",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'join', 'basicConfig', 'EnvironmentError', 'info', 'getenv'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/factory_integration/cache_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "time",
            "alias": null,
            "line": 14
          },
          {
            "module": "aioredis",
            "alias": null,
            "line": 19
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "OrderedDict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "hit_rate",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "l1_hit_rate",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 69,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 175,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 306,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 450,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 467,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CacheEntry",
            "line": 25,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CacheMetrics",
            "line": 35,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "L1Cache",
            "line": 62,
            "bases": [],
            "decorators": []
          },
          {
            "name": "L2Cache",
            "line": 168,
            "bases": [],
            "decorators": []
          },
          {
            "name": "L3Cache",
            "line": 299,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CacheManager",
            "line": 458,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Field', 'create_task', 'fetchrow', 'loads', 'sleep', 'get_metrics', 'move_to_end', 'Lock', 'disconnect', 'L3Cache', 'close', 'setex', 'append', 'stop', 'get', 'delete', 'cleanup_expired', 'clear', 'OrderedDict', 'clear_pattern', 'CacheManager', 'popitem', 'acquire', 'int', 'from_url', '_warm_cache_loop', 'scan_iter', 'max', 'L1Cache', 'L2Cache', 'dumps', '_cleanup_loop', 'split', 'warm_cache', 'len', 'timedelta', 'error', 'CacheEntry', 'execute', 'warning', 'set', 'utcnow', 'gather', 'time', 'info', 'fetch', 'start', 'cancel', 'connect', 'CacheMetrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/infra/vultr_deployment.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 5
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "export",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Database', 'export', 'FirewallGroup', 'Instance', 'ObjectStorage', 'Config', 'FirewallRule', 'get', 'ReservedIp', 'StartupScript', 'InstanceIpv4', 'Vpc'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/vultr_deployment.py",
          "line": 6,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 22
          },
          {
            "module": "pulumi",
            "alias": null,
            "line": 24
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 25
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 26
          }
        ],
        "from": [
          {
            "module": "components.postgres_component",
            "item": "PostgresComponent",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "components.vector_droplet_component",
            "item": "VectorDropletComponent",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 31,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'AppSpecStaticSiteArgs', 'export', 'FirewallInboundRuleArgs', 'Firewall', 'concat', 'warn', 'App', 'join', 'dirname', 'Config', 'FirewallOutboundRuleArgs', 'get', 'ResourceOptions', 'Droplet', 'isdir', 'get_bool', 'apply', 'Command', 'ConnectionArgs', 'VectorDropletComponent', 'require_secret', 'require', 'abspath', 'get_droplet', 'all', 'AppSpecArgs', 'get_int', 'AppSpecStaticSiteEnvVarArgs', 'PostgresComponent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
          "line": 25,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
          "line": 26,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
          "line": 27,
          "module": "components.postgres_component",
          "item": "PostgresComponent",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
          "line": 30,
          "module": "components.vector_droplet_component",
          "item": "VectorDropletComponent",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/__main__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 4
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 5
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Database', 'export', 'require', 'Config', 'get_stack', 'Vpc', 'Kubernetes'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/__main__.py",
          "line": 5,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "redis",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_redis_config",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_verify_connection",
            "line": 42,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_command",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_handle_vector_search",
            "line": 87,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DatabaseCommand",
            "line": 18,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPRedisServer",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'ValueError', 'StrictRedis', 'get', 'MCPRedisServer', 'execute_command', 'ping', '_verify_connection', 'int', 'str', 'FastAPI', 'get_redis_config', 'basicConfig', 'getenv', '_handle_vector_search', 'ConnectionError', 'error', 'lower', 'set', 'info', 'HTTPException'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/infra/vultr_single_node_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 1
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "components.vultr_server_component",
            "item": "VultrServerComponent",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'export', 'VultrServerComponent', 'require', 'split', 'Config', 'get', 'get_int', 'get_secret'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/vultr_single_node_stack.py",
          "line": 3,
          "module": "components.vultr_server_component",
          "item": "VultrServerComponent",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/do_superagi_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "pulumi",
            "alias": null,
            "line": 15
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 16
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 17
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'AppSpecStaticSiteArgs', 'export', 'read', 'FirewallInboundRuleArgs', 'Firewall', 'RunError', 'concat', 'warn', 'App', 'join', 'dirname', 'expanduser', 'Config', 'FirewallOutboundRuleArgs', 'get', 'ResourceOptions', 'SshKey', 'Droplet', 'apply', 'Command', 'ConnectionArgs', 'require_secret', 'require', 'abspath', 'all', 'open', 'AppSpecArgs', 'isdir', 'get_secret'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
          "line": 16,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
          "line": 17,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/core_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 8
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_esc_environment",
            "line": 28,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_setup_networking",
            "line": 46,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_setup_databases",
            "line": 63,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_setup_compute",
            "line": 117,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CoreStack",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'export', 'App', 'DatabaseCluster', 'require', '_setup_esc_environment', 'FirewallInboundRuleArgs', 'Firewall', '_setup_networking', 'Config', '_setup_compute', 'AppSpecArgs', 'get', 'Droplet', 'Vpc', '_setup_databases', 'concat', 'CoreStack'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/core_stack.py",
          "line": 9,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/.factory/context.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 286,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 63,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_config",
            "line": 74,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_context",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_context",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_active_context",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_context",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "merge_contexts",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_context_chain",
            "line": 186,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_context",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "import_context",
            "line": 241,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup_old_contexts",
            "line": 259,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DroidContext",
            "line": 21,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "FactoryContextManager",
            "line": 60,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'uuid4', 'list', '_load_config', 'UUID', 'loads', 'update', 'pop', 'fromisoformat', 'append', 'get', 'export_context', 'add', 'DroidContext', 'now', 'extend', 'print', 'str', 'dumps', 'to_dict', 'FactoryContextManager', 'isoformat', 'create_context', 'len', 'timedelta', 'cls', 'error', 'reversed', 'warning', 'get_context_chain', 'open', 'from_dict', 'info', 'update_context', 'items', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.factory/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/deploy/superagi_config.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi",
            "alias": null,
            "line": 9
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_validate_config",
            "line": 31,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_deploy_container",
            "line": 38,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SuperAGIDeployment",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'export', 'getLogger', 'ValueError', 'App', 'AppSpecEnvArgs', 'Config', 'keys', 'get', 'issubset', 'basicConfig', 'SuperAGIDeployment', 'ContainerRegistry', 'AppSpecServiceHealthCheckArgs', '_validate_config', 'require', '_deploy_container', 'set', 'AppSpecArgs', 'AppSpecServiceArgs', 'AppSpecServiceImageArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/deploy/superagi_config.py",
          "line": 10,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/async_server.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "config",
            "item": "MCPConfig",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "config",
            "item": "get_config_path_from_env",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "config",
            "item": "load_config",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "ConfigFileError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "ConfigValidationError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MCPError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryDeleteError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryNotFoundError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemorySyncError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryWriteError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "ToolExecutionError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "ToolNotEnabledError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "WorkflowExecutionError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "WorkflowNotFoundError",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "storage.async_memory_store",
            "item": "AsyncMemoryStore",
            "alias": null,
            "line": 36,
            "level": 1
          },
          {
            "module": "tools.tool_manager",
            "item": "ToolManager",
            "alias": null,
            "line": 37,
            "level": 1
          },
          {
            "module": "workflows.workflow_manager",
            "item": "WorkflowManager",
            "alias": null,
            "line": 38,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 319,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 125,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_configure_exception_handlers",
            "line": 183,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_configure_routes",
            "line": 218,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 310,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "StatusResponse",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryRequest",
            "line": 56,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryResponse",
            "line": 65,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemorySyncRequest",
            "line": 71,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ExecuteRequest",
            "line": 79,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ExecuteResponse",
            "line": 87,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowRequest",
            "line": 92,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CrossToolWorkflowRequest",
            "line": 99,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowResponse",
            "line": 105,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SuccessResponse",
            "line": 110,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ErrorResponse",
            "line": 115,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AsyncMCPServer",
            "line": 122,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_configure_routes', 'exception_handler', 'getLogger', 'post', 'load_config', 'ToolExecutionError', 'add_argument', 'run', '_configure_exception_handlers', 'get_config_path_from_env', 'get_available_workflows', 'JSONResponse', 'main', 'parse_args', 'MemoryNotFoundError', 'sync', 'StreamHandler', 'WorkflowExecutionError', 'dict', 'execute_workflow', 'execute_cross_tool_workflow', 'get', 'delete', 'WorkflowNotFoundError', 'MemorySyncError', 'FastAPI', 'add_middleware', 'to_dict', 'basicConfig', 'MemoryDeleteError', 'AsyncMemoryStore', 'len', 'WorkflowManager', 'error', 'execute', 'ToolManager', 'set', 'MemoryWriteError', 'AsyncMCPServer', 'MCPConfig', 'ToolNotEnabledError', 'info', 'items', 'get_enabled_tools', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/mcp_server_runner.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 22
          }
        ],
        "from": [
          {
            "module": "mcp_server.main",
            "item": "main_async",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'main_async', 'add_argument', 'run', 'ArgumentParser', 'main', 'parse_args', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/memory_sync_engine.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 18
          },
          {
            "module": "json",
            "alias": null,
            "line": 19
          },
          {
            "module": "logging",
            "alias": null,
            "line": 20
          },
          {
            "module": "time",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 119,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "is_expired",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_access",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compute_hash",
            "line": 153,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_hash",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compress",
            "line": 166,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "decompress",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 269,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "estimate_tokens",
            "line": 274,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_fit_entry",
            "line": 282,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_entry",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_entry",
            "line": 299,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_budget",
            "line": 304,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_for_tool",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 368,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 372,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_keys",
            "line": 376,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_by_hash",
            "line": 380,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 387,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "save",
            "line": 392,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 415,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_keys",
            "line": 429,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_by_hash",
            "line": 433,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 463,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_tool_adapter",
            "line": 477,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_memory",
            "line": 481,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_memory",
            "line": 499,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory",
            "line": 520,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_memory",
            "line": 572,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_resolve_conflict",
            "line": 588,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_pending_operations",
            "line": 607,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_process_operation",
            "line": 625,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_compress_for_tool",
            "line": 679,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_context_window",
            "line": 703,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_status",
            "line": 746,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryType",
            "line": 33,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryScope",
            "line": 39,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ToolType",
            "line": 45,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CompressionLevel",
            "line": 53,
            "bases": [
              "int",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "StorageTier",
            "line": 63,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryMetadata",
            "line": 71,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryEntry",
            "line": 84,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryCompressionEngine",
            "line": 162,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TokenBudgetManager",
            "line": 266,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MemoryStorage",
            "line": 361,
            "bases": [],
            "decorators": []
          },
          {
            "name": "InMemoryStorage",
            "line": 384,
            "bases": [
              "MemoryStorage"
            ],
            "decorators": []
          },
          {
            "name": "SyncEvent",
            "line": 441,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "SyncOperation",
            "line": 450,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemorySyncEngine",
            "line": 460,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', 'sync_update', 'SyncOperation', 'can_fit_entry', 'sync_delete', 'get_by_hash', 'startswith', 'isinstance', 'is_expired', 'update_access', '_process_operation', 'TokenBudgetManager', 'join', 'MemoryEntry', '_compress_for_tool', 'encode', 'MemoryMetadata', 'append', 'get_available_budget', 'get', 'MemoryCompressionEngine', 'delete', 'keys', 'sync_create', 'hexdigest', 'sort', 'list_keys', 'str', 'estimate_tokens', 'max', 'split', 'dumps', 'sorted', 'basicConfig', 'compress', 'len', 'cls', 'create_memory', 'compute_hash', 'warning', 'save', 'sha256', 'set', 'update_hash', 'time', 'info', 'items', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          },
          {
            "module": "time",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "simple_mcp",
            "item": "SimpleMemoryStore",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "simulate_coding_session",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "open_file",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_file",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close_file",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_cursor",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_selection",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_context",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 103,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "on_file_opened",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_file_changed",
            "line": 115,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_cursor_moved",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_selection_changed",
            "line": 130,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_context",
            "line": 135,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_completion",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LightweightIDEContext",
            "line": 28,
            "bases": [],
            "decorators": []
          },
          {
            "name": "FastIDEIntegration",
            "line": 100,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'on_cursor_moved', 'SimpleMemoryStore', 'min', 'simulate_coding_session', 'StreamHandler', 'join', 'on_file_opened', 'dirname', 'next', 'update_selection', 'replace', 'append', 'get_context', 'open_file', 'get', 'keys', 'print', 'update_file', 'max', 'split', 'iter', 'LightweightIDEContext', 'basicConfig', 'len', 'abspath', 'set', 'generate_completion', '_update_context', 'on_file_changed', 'info', 'time', 'update_cursor', 'FastIDEIntegration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/health_check.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "flask",
            "item": "jsonify",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "register_health_endpoints",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3ddbd0>"
            ]
          },
          {
            "name": "readiness_check",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3deb10>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'jsonify', 'route'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/test_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 4
          },
          {
            "module": "sys",
            "alias": null,
            "line": 5
          },
          {
            "module": "os",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "servers.conductor_server",
            "item": "get_all_agents",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "servers.conductor_server",
            "item": "run_agent_task",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "servers.conductor_server",
            "item": "run_workflow",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'run_workflow', 'abspath', 'dirname', 'run', 'get_all_agents', 'test_functions', 'run_agent_task', 'insert', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/demo_memory_sync.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "sys",
            "alias": null,
            "line": 13
          },
          {
            "module": "time",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "CompressionLevel",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "MemoryEntry",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "MemoryScope",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "MemorySyncEngine",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "MemoryType",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "memory_sync_engine",
            "item": "ToolType",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_demo_environment",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_demo_memories",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_all_operations",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "display_memory_stats",
            "line": 273,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_memory_retrieval",
            "line": 316,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_context_window_optimization",
            "line": 349,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 398,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "sync_create",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "sync_update",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "sync_delete",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_count",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_stats",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MockToolAdapter",
            "line": 37,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'get_memory_status', 'add_argument', 'demonstrate_memory_retrieval', 'display_memory_stats', 'process_all_operations', 'get_memory', 'main', 'parse_args', 'demonstrate_context_window_optimization', 'StreamHandler', 'MemoryEntry', 'MemoryMetadata', 'get_available_budget', 'get', 'range', 'process_pending_operations', 'print', 'MockToolAdapter', 'str', 'dumps', 'optimize_context_window', 'setup_demo_environment', 'InMemoryStorage', 'to_dict', 'basicConfig', 'len', 'upper', 'create_demo_memories', 'create_memory', 'warning', 'register_tool_adapter', 'MemorySyncEngine', 'setLevel', 'info', 'time', 'items', 'ArgumentParser', 'get_memory_stats'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "CompressionLevel",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "InMemoryStorage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "MemoryEntry",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "MemoryMetadata",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "MemoryScope",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "MemorySyncEngine",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "MemoryType",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
          "line": 18,
          "module": "memory_sync_engine",
          "item": "ToolType",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/main.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 22
          }
        ],
        "from": [
          {
            "module": "mcp_server.main",
            "item": "main_async",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'main_async', 'add_argument', 'run', 'ArgumentParser', 'main', 'parse_args', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/run_optimized_server.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "sys",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "simple_mcp",
            "item": "SimpleMCPServer",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_config",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_for_memory",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_for_cpu",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_for_speed",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_server",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'load_config', 'run_server', 'cpu_count', 'add_argument', 'run', 'main', 'parse_args', 'StreamHandler', 'dirname', 'load', 'optimize_for_speed', 'append', 'get', 'optimize_for_cpu', 'print', 'optimize_for_memory', 'basicConfig', 'SimpleMCPServer', 'exit', 'error', 'abspath', 'open', 'values', 'info', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/run_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 6
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          },
          {
            "module": "importlib",
            "alias": null,
            "line": 18
          },
          {
            "module": "pkgutil",
            "alias": null,
            "line": 19
          },
          {
            "module": "mcp_server.adapters",
            "alias": null,
            "line": 57
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "mcp_server.config",
            "item": "MCPConfig",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp_server.config",
            "item": "load_config",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp_server.managers.standard_memory_manager",
            "item": "StandardMemoryManager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "mcp_server.storage.in_memory_storage",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 37,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPApplication",
            "line": 34,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'load_config', 'get_memory_status', 'iter_modules', 'import_module', 'add_argument', 'run', 'sleep', 'main', 'parse_args', 'endswith', 'dict', 'main_async', 'join', 'dirname', 'replace', 'adapter_cls', 'get', 'str', 'capitalize', 'dumps', 'split', 'register_tool', 'InMemoryStorage', 'basicConfig', 'MCPApplication', 'exit', 'error', 'initialize', 'abspath', 'warning', 'StandardMemoryManager', 'getattr', 'get_status', 'MCPConfig', 'setLevel', 'info', 'items', 'ArgumentParser', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "simple_mcp",
            "item": "SimpleMemoryStore",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_demo",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "store",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retrieve",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_stats",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 65,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_tool",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "share_memory",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_status",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "FastToolAdapter",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "OptimizedMemoryManager",
            "line": 62,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'get_memory_status', 'SimpleMemoryStore', 'run_demo', 'isinstance', 'StreamHandler', 'dirname', 'append', 'get', 'OptimizedMemoryManager', 'store', 'print', 'share_memory', 'FastToolAdapter', 'dumps', 'register_tool', 'basicConfig', 'len', 'upper', 'sum', 'abspath', 'set', 'get_stats', 'values', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/start_mcp.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "mcp_server.main",
            "item": "main",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'insert', 'main', 'abspath', 'dirname'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/exceptions.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 14,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 50,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 61,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 76,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 100,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 124,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 151,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 162,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 168,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 185,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 192,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 203,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 213,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 231,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 245,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 255,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 266,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 277,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 289,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 300,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 311,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 321,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 332,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 343,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 353,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPError",
            "line": 11,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "MemoryError",
            "line": 47,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryNotFoundError",
            "line": 58,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryWriteError",
            "line": 73,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryDeleteError",
            "line": 97,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "MemorySyncError",
            "line": 121,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "ToolError",
            "line": 148,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "ToolNotEnabledError",
            "line": 159,
            "bases": [
              "ToolError"
            ],
            "decorators": []
          },
          {
            "name": "ToolExecutionError",
            "line": 165,
            "bases": [
              "ToolError"
            ],
            "decorators": []
          },
          {
            "name": "ToolNotImplementedError",
            "line": 182,
            "bases": [
              "ToolError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowError",
            "line": 189,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowNotFoundError",
            "line": 200,
            "bases": [
              "WorkflowError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowExecutionError",
            "line": 210,
            "bases": [
              "WorkflowError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowStepTypeError",
            "line": 228,
            "bases": [
              "WorkflowError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowNoStepsError",
            "line": 242,
            "bases": [
              "WorkflowError"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowNoToolsError",
            "line": 252,
            "bases": [
              "WorkflowError"
            ],
            "decorators": []
          },
          {
            "name": "ConfigError",
            "line": 263,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "ConfigFileError",
            "line": 274,
            "bases": [
              "ConfigError"
            ],
            "decorators": []
          },
          {
            "name": "ConfigValidationError",
            "line": 286,
            "bases": [
              "ConfigError"
            ],
            "decorators": []
          },
          {
            "name": "ServerError",
            "line": 297,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "ServerStartupError",
            "line": 308,
            "bases": [
              "ServerError"
            ],
            "decorators": []
          },
          {
            "name": "ServerShutdownError",
            "line": 318,
            "bases": [
              "ServerError"
            ],
            "decorators": []
          },
          {
            "name": "AuthError",
            "line": 329,
            "bases": [
              "MCPError"
            ],
            "decorators": []
          },
          {
            "name": "AuthTokenError",
            "line": 340,
            "bases": [
              "AuthError"
            ],
            "decorators": []
          },
          {
            "name": "AuthPermissionError",
            "line": 350,
            "bases": [
              "AuthError"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/performance_wrapper.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "functools",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "aioredis",
            "alias": null,
            "line": 14
          },
          {
            "module": "uvloop",
            "alias": null,
            "line": 15
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "aiocache",
            "item": "Cache",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "aiocache.serializers",
            "item": "PickleSerializer",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "fastapi.middleware.gzip",
            "item": "GZipMiddleware",
            "alias": null,
            "line": 266,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "cached",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rate_limited",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "timed",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_app",
            "line": 262,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 143,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 178,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConnectionPool",
            "line": 140,
            "bases": [],
            "decorators": []
          },
          {
            "name": "BatchProcessor",
            "line": 175,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'PickleSerializer', 'safe_load', 'getLogger', '_process_batches', 'Gauge', 'Queue', 'labels', 'create_task', 'id', 'on_event', 'Lock', 'join', 'Counter', 'pop', 'dirname', 'EventLoopPolicy', 'call_next', 'close', 'middleware', 'notify_all', 'append', 'get', 'observe', 'get_nowait', 'wait_for', 'str', 'process_func', 'func', 'init_redis_cache', 'zip', 'add_middleware', 'inc', 'basicConfig', 'key_func', 'wraps', 'Cache', 'create_func', 'len', 'set_event_loop_policy', 'error', 'Exception', 'warning', 'notify', 'open', 'Histogram', 'set', 'hasattr', 'put_nowait', 'Condition', 'time', 'info', 'wait', 'cancel', 'create_redis_pool'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          "line": 17,
          "module": "aiocache",
          "item": "Cache",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
          "line": 18,
          "module": "aiocache.serializers",
          "item": "PickleSerializer",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/gateway.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 14
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Response",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "generate_latest",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "mcp_server.config.loader",
            "item": "load_config",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "mcp_server.config.models",
            "item": "MCPConfig",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ServerHealth",
            "line": 94,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "GatewayStatus",
            "line": 104,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPRequest",
            "line": 113,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'load_config', 'exception_handler', 'Field', 'list', 'Gauge', 'run', 'labels', 'create_task', 'JSONResponse', 'check_server_health', 'sleep', 'startswith', 'on_event', 'dict', 'Counter', 'join', 'dirname', 'call_next', 'middleware', 'api_route', 'AsyncClient', 'get', 'observe', 'keys', 'range', 'body', 'str', 'RuntimeError', 'FastAPI', 'add_middleware', 'sorted', 'inc', 'periodic_health_check', 'isoformat', 'basicConfig', 'len', 'GatewayStatus', 'sum', 'ServerHealth', 'json', 'type', 'error', 'generate_latest', 'warning', 'Histogram', 'set', 'values', 'request', 'exists', 'utcnow', 'time', 'info', 'HTTPException', 'items', 'Response'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 392
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "prefect",
            "item": "flow",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prefect",
            "item": "task",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prefect",
            "item": "get_run_logger",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prefect.task_runners",
            "item": "ConcurrentTaskRunner",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "prefect.artifacts",
            "item": "create_markdown_artifact",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "prefect.context",
            "item": "get_run_context",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "services.pay_ready",
            "item": "PayReadyETLconductor",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "services.pay_ready",
            "item": "PayReadyEntityResolver",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "services.pay_ready",
            "item": "PayReadyMemoryManager",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "services.pay_ready.etl_conductor",
            "item": "SourceType",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'submit', 'SourceType', 'flush_pending_vectors', 'getLogger', 'generate_pipeline_report', 'task', 'add_argument', 'run', 'wait_for_sync', 'PayReadyETLconductor', 'strftime', 'parse_args', 'get_run_logger', 'update', 'trigger_airbyte_sync', 'process_new_data', 'run_resolution_batch', 'create_markdown_artifact', 'update_analytics_cache', 'total_seconds', 'fromisoformat', 'result', 'get', 'wait_for_sync_completion', 'ConcurrentTaskRunner', 'str', 'isoformat', 'trigger_source_sync', 'initialize_services', 'len', 'sum', 'error', 'initialize', 'flow', 'pay_ready_etl_pipeline', 'warning', 'process_source_data', 'utcnow', 'gather', 'info', 'ArgumentParser', 'run_entity_resolution', 'get_memory_stats'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 15,
          "module": "prefect",
          "item": "flow",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 15,
          "module": "prefect",
          "item": "task",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 15,
          "module": "prefect",
          "item": "get_run_logger",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 16,
          "module": "prefect.task_runners",
          "item": "ConcurrentTaskRunner",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 17,
          "module": "prefect.artifacts",
          "item": "create_markdown_artifact",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
          "line": 18,
          "module": "prefect.context",
          "item": "get_run_context",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "statistics",
            "alias": null,
            "line": 14
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "collections",
            "item": "deque",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "WebSocket",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "WebSocketDisconnect",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "HTMLResponse",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "fastapi.staticfiles",
            "item": "StaticFiles",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager",
            "item": "get_connection_manager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql",
            "item": "get_unified_postgresql",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "get_unified_database",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "shared.database.connection_manager",
            "item": "close_connection_manager",
            "alias": null,
            "line": 547,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql",
            "item": "close_unified_postgresql",
            "alias": null,
            "line": 548,
            "level": 0
          },
          {
            "module": "shared.database.unified_db_v2",
            "item": "close_unified_database",
            "alias": null,
            "line": 549,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PerformanceMonitor",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_performance_metrics', 'list', 'close_unified_postgresql', 'run', 'create_task', 'get_historical_metrics', 'remove', 'sleep', 'on_event', 'dict', 'get_unified_database', 'append', 'get', 'deque', 'add', 'close_connection_manager', 'get_table_stats', 'print', 'get_connection_manager', 'HTMLResponse', 'FastAPI', 'get_query_performance', 'periodic_metrics_collection', 'get_unified_postgresql', 'health_check', 'isoformat', 'close_unified_database', 'PerformanceMonitor', 'send_json', 'defaultdict', 'accept', 'get_pool_stats', 'all', 'set', 'collect_metrics', 'websocket', 'utcnow', 'fetch', 'time'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
          "line": 23,
          "module": "shared.database.unified_db_v2",
          "item": "get_unified_database",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
          "line": 549,
          "module": "shared.database.unified_db_v2",
          "item": "close_unified_database",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_components/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "click",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 16
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 17
          },
          {
            "module": "requests",
            "alias": null,
            "line": 694
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "eigencode_installer",
            "item": "EigenCodeInstaller",
            "alias": null,
            "line": 194,
            "level": 0
          },
          {
            "module": "performance_analyzer",
            "item": "PerformanceAnalyzer",
            "alias": null,
            "line": 277,
            "level": 0
          },
          {
            "module": "security_audit",
            "item": "SecurityAuditor",
            "alias": null,
            "line": 406,
            "level": 0
          },
          {
            "module": "ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 686,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "cli",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1e1b10>",
              "<ast.Call object at 0x7a6b7f1e1610>",
              "<ast.Call object at 0x7a6b7f1e0dd0>",
              "<ast.Attribute object at 0x7a6b7f3a51d0>"
            ]
          },
          {
            "name": "analyze",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f4774d0>",
              "<ast.Call object at 0x7a6b7f476690>",
              "<ast.Call object at 0x7a6b7f3aa490>",
              "<ast.Call object at 0x7a6b7f3aa450>",
              "<ast.Attribute object at 0x7a6b7f3ab350>"
            ]
          },
          {
            "name": "implement",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f2bced0>",
              "<ast.Call object at 0x7a6b7f2be890>",
              "<ast.Call object at 0x7a6b7f2bfd50>",
              "<ast.Call object at 0x7a6b7f2bf050>",
              "<ast.Attribute object at 0x7a6b7f33f9d0>"
            ]
          },
          {
            "name": "refine",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f41ff10>",
              "<ast.Call object at 0x7a6b7f41d7d0>",
              "<ast.Call object at 0x7a6b7f512f50>",
              "<ast.Attribute object at 0x7a6b7f511f90>"
            ]
          },
          {
            "name": "eigencode",
            "line": 179,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f45ce10>"
            ]
          },
          {
            "name": "install",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f32f310>",
              "<ast.Call object at 0x7a6b7f468510>",
              "<ast.Attribute object at 0x7a6b7f5add50>"
            ]
          },
          {
            "name": "status",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f4932d0>",
              "<ast.Attribute object at 0x7a6b7f491b90>"
            ]
          },
          {
            "name": "performance",
            "line": 261,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f493e50>"
            ]
          },
          {
            "name": "analyze",
            "line": 272,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f346010>",
              "<ast.Call object at 0x7a6b7f347450>",
              "<ast.Call object at 0x7a6b7f344d50>",
              "<ast.Attribute object at 0x7a6b7f344310>"
            ]
          },
          {
            "name": "stress_test",
            "line": 326,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f591790>",
              "<ast.Call object at 0x7a6b7f591e10>",
              "<ast.Call object at 0x7a6b7f360d90>",
              "<ast.Attribute object at 0x7a6b7f360fd0>"
            ]
          },
          {
            "name": "security",
            "line": 390,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f361f90>"
            ]
          },
          {
            "name": "audit",
            "line": 401,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1d1950>",
              "<ast.Call object at 0x7a6b7f1d0fd0>",
              "<ast.Call object at 0x7a6b7f1d3290>",
              "<ast.Attribute object at 0x7a6b7f1d36d0>"
            ]
          },
          {
            "name": "rotate_secrets",
            "line": 458,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f560f90>",
              "<ast.Call object at 0x7a6b7f560590>",
              "<ast.Attribute object at 0x7a6b7f562590>"
            ]
          },
          {
            "name": "scalability",
            "line": 472,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f563b10>"
            ]
          },
          {
            "name": "test",
            "line": 484,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f383ed0>",
              "<ast.Call object at 0x7a6b7f383910>",
              "<ast.Call object at 0x7a6b7f381650>",
              "<ast.Call object at 0x7a6b7f383b50>",
              "<ast.Attribute object at 0x7a6b7f3812d0>"
            ]
          },
          {
            "name": "configure",
            "line": 554,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f51bb90>",
              "<ast.Call object at 0x7a6b7f518b90>",
              "<ast.Attribute object at 0x7a6b7f51a0d0>"
            ]
          },
          {
            "name": "cherry_aite",
            "line": 603,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f373050>",
              "<ast.Call object at 0x7a6b7f38b950>",
              "<ast.Call object at 0x7a6b7f38af50>",
              "<ast.Attribute object at 0x7a6b7f38b6d0>"
            ]
          },
          {
            "name": "status",
            "line": 667,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f379890>",
              "<ast.Attribute object at 0x7a6b7f37bb50>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'safe_load', 'TaskDefinition', 'run_workflow', 'enumerate', 'list', 'group', 'run_all_methods', 'run', 'PerformanceAnalyzer', 'run_stress_test', 'run_installation', 'sleep', 'join', 'worker', 'dirname', 'review_postgresql_security', 'ensure_object', 'option', 'load', 'expanduser', 'run_coordination', 'append', 'execute_workflow', 'EigenCodeInstaller', 'Choice', 'get', 'cli', 'check_api_secret_handling', 'DatabaseLogger', 'validate_mcp_server_security', 'assess_weaviate_airbyte_access', 'range', 'run_scalability_test', 'create_workflow', 'run_refinement', 'now', 'str', 'command', 'int', 'dumps', 'SecurityAuditor', 'echo', 'health_check', 'isoformat', 'Workflowconductor', 'generate_security_report', 'upper', 'sum', 'len', 'makedirs', 'dump', 'run_full_analysis', 'implement_security_enhancements', 'run_analysis', 'strip', 'run_audit', 'open', 'pop', 'exists', 'gather', 'time', '_get_connection', 'items', 'run_implementation'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          "line": 22,
          "module": "coordination.ai_conductor",
          "item": "Workflowconductor",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          "line": 22,
          "module": "coordination.ai_conductor",
          "item": "TaskDefinition",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          "line": 22,
          "module": "coordination.ai_conductor",
          "item": "AgentRole",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
          "line": 686,
          "module": "ai_conductor",
          "item": "DatabaseLogger",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tools/mode_system_initializer.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 16
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          },
          {
            "module": "colorama",
            "alias": null,
            "line": 20
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 21
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Fore",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Style",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "print_header",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_file_exists",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_directory",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_project_structure",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_required_files",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_mode_system",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_model_assignments",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_enhanced_access_permissions",
            "line": 191,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_workflow_summary",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_usage_instructions",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 291,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'verify_model_assignments', 'validate_project_structure', 'enumerate', 'create_directory', 'add_argument', 'main', 'parse_args', 'initialize_mode_system', 'join', 'get', 'print_workflow_summary', 'print', 'mkdir', 'print_header', 'str', 'relative_to', 'print_usage_instructions', 'basicConfig', 'init', 'check_required_files', 'len', 'check_file_exists', 'lower', 'all', 'open', 'exists', 'items', 'verify_enhanced_access_permissions', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
          "line": 20,
          "module": "colorama",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
          "line": 22,
          "module": "colorama",
          "item": "Fore",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
          "line": 22,
          "module": "colorama",
          "item": "Style",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tools/mode_switcher.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 19
          },
          {
            "module": "logging",
            "alias": null,
            "line": 20
          },
          {
            "module": "os",
            "alias": null,
            "line": 21
          },
          {
            "module": "sys",
            "alias": null,
            "line": 22
          },
          {
            "module": "colorama",
            "alias": null,
            "line": 25
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Fore",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "colorama",
            "item": "Style",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "configure_logging",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "core.mode_manager",
            "item": "ModeManager",
            "alias": null,
            "line": 35,
            "level": 0
          },
          {
            "module": "core.mode_manager",
            "item": "get_mode_manager",
            "alias": null,
            "line": 35,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "print_header",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_modes",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_workflows",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_current_state",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "interactive_mode_switcher",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 259,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'enumerate', 'print_modes', 'suggest_next_modes', 'add_argument', 'main', 'configure_logging', 'parse_args', 'save_workflow_state', 'join', 'load_workflow_state', 'dirname', 'input', 'get', 'print', 'print_header', 'advance_workflow', 'print_workflows', 'validate_file_access', 'init', 'len', 'start_workflow', 'abspath', 'interactive_mode_switcher', 'lower', 'print_current_state', 'items', 'switch_mode', 'ArgumentParser', 'get_mode_manager'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tools/mode_switcher.py",
          "line": 25,
          "module": "colorama",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tools/mode_switcher.py",
          "line": 26,
          "module": "colorama",
          "item": "Fore",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tools/mode_switcher.py",
          "line": 26,
          "module": "colorama",
          "item": "Style",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tools/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tools/update_phidata_configs.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "os",
            "alias": null,
            "line": 16
          },
          {
            "module": "sys",
            "alias": null,
            "line": 17
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "is_phidata_agent_config",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_agent_config",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_yaml_file",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_directory",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 179,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'safe_load', 'getLogger', 'enumerate', 'list', 'add_argument', 'main', 'isinstance', 'parse_args', 'endswith', 'join', 'process_yaml_file', 'keys', 'get', 'update_agent_config', 'process_directory', 'walk', 'basicConfig', 'is_phidata_agent_config', 'exit', 'dump', 'error', 'warning', 'lower', 'open', 'info', 'isdir', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tools/cherry_ai_cli.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "click",
            "alias": null,
            "line": 14
          },
          {
            "module": "redis",
            "alias": null,
            "line": 421
          },
          {
            "module": "importlib.util",
            "alias": null,
            "line": 437
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dotenv",
            "item": "set_key",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "rich.panel",
            "item": "Panel",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "Progress",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "SpinnerColumn",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "rich.progress",
            "item": "TextColumn",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_pulumi_secrets",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cli",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f563750>",
              "<ast.Call object at 0x7a6b7f562d50>",
              "<ast.Attribute object at 0x7a6b7f3c8b90>"
            ]
          },
          {
            "name": "secrets",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3ca910>"
            ]
          },
          {
            "name": "sync",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3def50>",
              "<ast.Call object at 0x7a6b7f3df590>",
              "<ast.Call object at 0x7a6b7f3df450>",
              "<ast.Attribute object at 0x7a6b7f47b8d0>"
            ]
          },
          {
            "name": "validate",
            "line": 217,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3a4690>",
              "<ast.Attribute object at 0x7a6b7f3a4ad0>"
            ]
          },
          {
            "name": "set",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3ab990>",
              "<ast.Call object at 0x7a6b7f3ab0d0>",
              "<ast.Call object at 0x7a6b7f3aa610>",
              "<ast.Attribute object at 0x7a6b7f1e2f10>"
            ]
          },
          {
            "name": "adapters",
            "line": 283,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1e3e50>"
            ]
          },
          {
            "name": "list",
            "line": 288,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f23d010>",
              "<ast.Attribute object at 0x7a6b7f23ce10>"
            ]
          },
          {
            "name": "check_adapter",
            "line": 318,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f510390>",
              "<ast.Call object at 0x7a6b7f511650>",
              "<ast.Attribute object at 0x7a6b7f511850>"
            ]
          },
          {
            "name": "diagnostics",
            "line": 357,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f511210>"
            ]
          },
          {
            "name": "health",
            "line": 362,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f2bc9d0>",
              "<ast.Attribute object at 0x7a6b7f2be550>"
            ]
          },
          {
            "name": "check_secrets_health",
            "line": 394,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_pulumi_health",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_redis_health",
            "line": 418,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mcp_health",
            "line": 432,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_adapters_health",
            "line": 447,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "conductor",
            "line": 459,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f362690>"
            ]
          },
          {
            "name": "reload",
            "line": 464,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1cafd0>",
              "<ast.Attribute object at 0x7a6b7f1ca110>"
            ]
          },
          {
            "name": "status",
            "line": 482,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1d04d0>",
              "<ast.Attribute object at 0x7a6b7f1d37d0>"
            ]
          },
          {
            "name": "init",
            "line": 513,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f1dad90>",
              "<ast.Attribute object at 0x7a6b7f1db1d0>"
            ]
          },
          {
            "name": "get_adapter_configs",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "AdapterConfig",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'check_adapters_health', 'Progress', 'group', 'add_row', 'Panel', 'startswith', 'update', 'join', 'add_column', 'ensure_object', 'option', 'append', 'set_key', 'get', 'keys', 'check_secrets_health', 'ping', 'print', 'extend', 'str', 'command', 'check_redis_health', 'invoke', 'SpinnerColumn', 'get_pulumi_secrets', 'split', 'argument', 'add_task', 'check_mcp_health', 'Redis', 'check_pulumi_health', 'confirm', 'getenv', 'len', 'sum', 'find_spec', 'exit', 'Table', 'get_adapter_configs', 'TextColumn', 'strip', 'all', 'open', 'values', 'exists', 'Console', 'advance', 'items', 'cli'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/services/weaviate_service.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "weaviate.classes.init",
            "item": "AdditionalConfig",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "weaviate.classes.init",
            "item": "Timeout",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_client",
            "line": 45,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_verify_connection",
            "line": 72,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "vector_search",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_schema",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateConfig",
            "line": 18,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "VectorSearchResult",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WeaviateService",
            "line": 33,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Timeout', 'getLogger', 'AuthApiKey', 'near_vector', 'create_class', '_initialize_client', 'close', 'VectorSearchResult', 'vector_search', 'get', 'AdditionalConfig', 'print', '_verify_connection', 'is_ready', 'str', 'int', 'basicConfig', 'getenv', 'ConnectionError', 'error', 'WeaviateConfig', 'hasattr', 'info', 'connect_to_local', 'WeaviateService'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "builtins",
            "alias": null,
            "line": 183
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "roo.hooks",
            "item": "register_hook",
            "alias": null,
            "line": 171,
            "level": 0
          },
          {
            "module": "mcp_server.roo.cherry_ai_integration",
            "item": "cherry_aiRooIntegration",
            "alias": null,
            "line": 32,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_cherry_ai_integration",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_mode_enter",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_mode_exit",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_request_process",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_with_roo",
            "line": 167,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_cherry_ai_available",
            "line": 205,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_cherry_ai_status",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 59,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 80,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 102,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 116,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiEnhancedMode",
            "line": 56,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CodeModeEnhancement",
            "line": 77,
            "bases": [
              "cherry_aiEnhancedMode"
            ],
            "decorators": []
          },
          {
            "name": "ArchitectModeEnhancement",
            "line": 99,
            "bases": [
              "cherry_aiEnhancedMode"
            ],
            "decorators": []
          },
          {
            "name": "DebugModeEnhancement",
            "line": 113,
            "bases": [
              "cherry_aiEnhancedMode"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'run_until_complete', 'create_task', 'isinstance', 'cherry_aiRooIntegration', 'close', 'is_running', 'get', 'ArchitectModeEnhancement', 'get_event_loop', 'process_with_cherry_ai', 'str', '_initialize_integration', 'register_with_roo', 'process_roo_request', 'basicConfig', 'DebugModeEnhancement', '__init__', 'new_event_loop', 'CodeModeEnhancement', 'super', 'error', 'initialize', 'get_status', 'info', 'register_hook', 'insert', 'get_cherry_ai_integration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
          "line": 171,
          "module": "roo.hooks",
          "item": "register_hook",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "sys",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_json_validity",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_mode_structure",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_modes",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_rules",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_mcp_config",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_legacy_files",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "print_results",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 282,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'list', 'check_legacy_files', 'check_json_validity', 'main', 'glob', 'validate_mcp_config', 'validate_rules', 'join', 'bool', 'load', 'append', 'get', 'print_results', 'validate_mode_structure', 'is_dir', 'print', 'validate_modes', 'len', 'all', 'open', 'values', 'exists', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.roo/scripts/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.roo/scripts/verify_setup.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_modes",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_rules",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_mcp_config",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'check_rules', 'len', 'list', 'all', 'open', 'load', 'glob', 'values', 'exists', 'is_dir', 'get', 'items', 'check_mcp_config', 'check_modes', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.roo/scripts/validate_roomodes.py": {
      "imports": {
        "standard": [
          {
            "module": "yaml",
            "alias": null,
            "line": 4
          },
          {
            "module": "sys",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_roomodes",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'isinstance', 'Path', 'safe_load', 'join', 'open', 'set', 'validate_roomodes', 'exists', 'get', 'keys', 'print', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/infrastructure/pulumi/deploy.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 10
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 11
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 262,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check_prerequisites",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "select_stack",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "preview_changes",
            "line": 105,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "destroy",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_outputs",
            "line": 182,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_deployment_record",
            "line": 217,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rollback",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InfrastructureDeployer",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'enumerate', 'add_argument', 'run', 'save_deployment_record', 'deploy', 'strftime', 'loads', 'main', 'parse_args', 'input', 'get', 'print', 'now', 'export_outputs', 'select_stack', 'preview_changes', 'str', 'destroy', 'split', 'dumps', 'rollback', 'isoformat', 'len', 'InfrastructureDeployer', 'exit', 'dump', 'strip', 'lower', 'open', 'exists', 'check_prerequisites', 'write', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/infrastructure/pulumi/__main__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 4
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 5
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 6
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "export",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'export', 'require_secret', 'FirewallGroup', 'Command', 'Instance', 'Config', 'FirewallRule', 'get', 'ResourceOptions', 'SshKey', 'concat', 'ConnectionArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/pulumi/__main__.py",
          "line": 5,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infrastructure/pulumi/__main__.py",
          "line": 6,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/pulumi/__init__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 8
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "export",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_vpc",
            "line": 45,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_firewall",
            "line": 63,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_load_balancer",
            "line": 110,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_database",
            "line": 153,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_redis",
            "line": 184,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_kubernetes_cluster",
            "line": 206,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_object_storage",
            "line": 236,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_setup_monitoring",
            "line": 253,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_monitoring_user_data",
            "line": 280,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CherryAIInfrastructure",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'export', 'Instance', 'ObjectStorage', 'FirewallRule', '_create_object_storage', 'CherryAIInfrastructure', '_create_vpc', 'LoadBalancer', 'Vpc', '_setup_monitoring', '_create_database', 'Config', 'get', 'ResourceOptions', 'Database', '_get_monitoring_user_data', '_create_redis', '_create_firewall', '_create_load_balancer', 'get_stack', 'Kubernetes', 'secret', 'FirewallGroup', '_create_kubernetes_cluster'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/pulumi/__init__.py",
          "line": 9,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 8
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 9
          },
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "resource_name",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_infrastructure",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_vpc",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_postgres_cluster",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_redis_cache",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_kubernetes_cluster",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_k8s_namespaces",
            "line": 198,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "deploy_weaviate",
            "line": 215,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_object_storage",
            "line": 345,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_load_balancer",
            "line": 368,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_outputs",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DataIngestionInfrastructure",
            "line": 34,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'export', 'StatefulSetSpecArgs', 'ResourceRequirementsArgs', 'ServicePortArgs', 'ObjectMetaArgs', 'ObjectStorage', 'LoadBalancer', 'deploy_weaviate', 'VolumeMountArgs', 'Vpc', 'PodSpecArgs', 'ServiceSpecArgs', 'ContainerArgs', 'create_object_storage', 'Config', 'get', 'ResourceOptions', 'ContainerPortArgs', 'create_k8s_namespaces', 'create_infrastructure', 'export_outputs', 'DataIngestionInfrastructure', 'Database', 'StatefulSet', 'apply', 'DatabaseCluster', 'DatabaseReadReplica', 'PersistentVolumeClaimSpecArgs', 'PodTemplateSpecArgs', 'PersistentVolumeClaimArgs', 'Service', 'resource_name', 'create_redis_cache', 'create_load_balancer', 'create_kubernetes_cluster', 'Namespace', 'Kubernetes', 'ObjectStorageBucket', 'secret', 'all', 'LabelSelectorArgs', 'create_postgres_cluster', 'Provider', 'EnvVarArgs', 'create_vpc'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          "line": 9,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
          "line": 10,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 8
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 9
          },
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "base64",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "resource_name",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'export', 'Instance', 'FirewallRule', 'LoadBalancer', 'Vpc', 'concat', 'join', 'encode', 'append', 'Config', 'get', 'range', 'str', 'b64encode', 'resource_name', 'decode', 'upper', 'require', 'FirewallGroup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
          "line": 9,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
          "line": 10,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/shared/memory/pinecone_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "pinecone",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.env_config",
            "item": "settings",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PineconeAdapter",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'RuntimeError', 'error', 'getLogger', 'query', 'upsert', 'Index', 'run_in_executor', 'get', 'info', 'init', 'delete', 'len', 'get_event_loop', 'range', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/shared/memory/pinecone_adapter.py",
          "line": 13,
          "module": "pinecone",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/shared/memory/stubs.py": {
      "imports": {
        "standard": [
          {
            "module": "random",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "shared.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "PatrickMemoryManager",
            "line": 11,
            "bases": [
              "MemoryManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'random', 'append', 'min', 'range', 'randint', 'choice'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/memory/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/memory/memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "time",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "google.oauth2",
            "item": "service_account",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "loguru",
            "item": "logger",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.env_config",
            "item": "settings",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 38,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 76,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create",
            "line": 184,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryManager",
            "line": 16,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "InMemoryMemoryManager",
            "line": 35,
            "bases": [
              "MemoryManager"
            ],
            "decorators": []
          },
          {
            "name": "FirestoreMemoryManager",
            "line": 73,
            "bases": [
              "MemoryManager"
            ],
            "decorators": []
          },
          {
            "name": "MemoryManagerFactory",
            "line": 180,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'debug', 'ValueError', 'stream', 'model_dump', 'Client', 'append', 'get', 'from_service_account_file', 'delete', 'document', 'int', 'str', 'to_dict', 'len', 'error', 'lower', 'FirestoreMemoryManager', 'set', 'values', 'InMemoryMemoryManager', 'exists', 'limit', 'info', 'time', 'collection'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/memory/weaviate_session_cache.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 8,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateSessionCache",
            "line": 10,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'query', 'batch_upsert', 'WeaviateAdapter', 'get', 'WeaviateSessionCache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/memory/weaviate_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "weaviate.util",
            "item": "get_valid_uuid",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.env_config",
            "item": "settings",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "do_query",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "do_delete",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "upsert_batch",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateAdapter",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'AuthApiKey', 'with_where', 'add_data_object', 'Client', 'run_in_executor', 'with_near_vector', 'get', 'delete', 'get_event_loop', 'range', 'RuntimeError', 'with_limit', 'len', 'error', 'get_valid_uuid', 'connect', 'info', 'items', 'do'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/vertex_ai/bridge.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "authenticate",
            "line": 262,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict_text",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict_chat",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 39,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_detect_environment",
            "line": 59,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "authenticate",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_authenticate_default",
            "line": 118,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_authenticate_cloud_workstation",
            "line": 140,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_authenticate_cloud_run",
            "line": 144,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_authenticate_github_actions",
            "line": 148,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_client",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict_text",
            "line": 183,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict_chat",
            "line": 215,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnvironmentType",
            "line": 20,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "VertexAIBridge",
            "line": 31,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_authenticate_github_actions', 'from_pretrained', '_authenticate_cloud_workstation', '_authenticate_cloud_run', 'append', 'get', 'predict_chat', 'str', '_detect_environment', 'authenticate', 'VertexAIBridge', 'init', 'ChatMessage', 'error', 'warning', 'lower', '_authenticate_default', 'Exception', 'predict_text', 'exists', 'predict', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/vertex_ai/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/utils/performance.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "functools",
            "alias": null,
            "line": 4
          },
          {
            "module": "logging",
            "alias": null,
            "line": 5
          },
          {
            "module": "time",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "benchmark",
            "line": 14,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_metric",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_average",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_metrics",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PerformanceMonitor",
            "line": 31,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'perf_counter', 'str', 'len', 'getLogger', 'func', 'error', 'TypeVar', 'append', 'wraps', 'info', 'clear', 'sum'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/utils/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "error_handling",
            "item": "handle_errors",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "error_handling",
            "item": "coordinationError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "error_handling",
            "item": "APIError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "error_handling",
            "item": "ConfigurationError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "error_handling",
            "item": "TransitionError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "performance",
            "item": "benchmark",
            "alias": null,
            "line": 4,
            "level": 1
          },
          {
            "module": "performance",
            "item": "PerformanceMonitor",
            "alias": null,
            "line": 4,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/utils/error_handling.py": {
      "imports": {
        "standard": [
          {
            "module": "functools",
            "alias": null,
            "line": 3
          },
          {
            "module": "logging",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "handle_errors",
            "line": 12,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "coordinationError",
            "line": 24,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "APIError",
            "line": 29,
            "bases": [
              "coordinationError"
            ],
            "decorators": []
          },
          {
            "name": "ConfigurationError",
            "line": 34,
            "bases": [
              "coordinationError"
            ],
            "decorators": []
          },
          {
            "name": "TransitionError",
            "line": 39,
            "bases": [
              "coordinationError"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'func', 'getLogger', 'TypeVar', 'wraps'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/sessions/postgresql_sessions.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "asyncpg.pool",
            "item": "Pool",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLSessionStore",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'PostgreSQLSessionStore', 'uuid4', 'create_task', 'fetchrow', 'sleep', '_create_session_table', 'create_pool', 'update', 'get_session', 'dict', 'join', 'pop', 'delete_session', 'close', 'append', 'fetchval', 'acquire', 'str', '_cleanup_expired_sessions', 'int', 'create_session', 'split', 'dumps', 'isoformat', 'timedelta', 'len', 'error', 'initialize', 'execute', 'update_session', 'utcnow', 'fetch', 'info', 'cancel', 'get_session_store'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/interfaces/domain_contracts.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 80,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_domains",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DomainRequest",
            "line": 11,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DomainResponse",
            "line": 19,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "IDomainService",
            "line": 26,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "PersonalDomainInterface",
            "line": 44,
            "bases": [
              "IDomainService"
            ],
            "decorators": []
          },
          {
            "name": "PayReadyDomainInterface",
            "line": 55,
            "bases": [
              "IDomainService"
            ],
            "decorators": []
          },
          {
            "name": "ParagonRXDomainInterface",
            "line": 66,
            "bases": [
              "IDomainService"
            ],
            "decorators": []
          },
          {
            "name": "DomainRegistry",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'keys', 'get', 'DomainRegistry', 'list'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "requests",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.env_config",
            "item": "settings",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_keys",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPClient",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'update', 'post', 'getLogger', 'error', 'json', 'basicConfig', 'get', 'delete', 'Session'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "register_tool",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool",
            "line": 198,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_tools",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_tool",
            "line": 223,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_tool",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_tools",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_is_tool_allowed",
            "line": 109,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_tool",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolRegistry",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'handler', 'getLogger', 'ToolRegistry', 'warning', 'execute_tool', 'list_tools', 'ValueError', 'register_tool', 'append', 'get', 'info', 'items', 'get_tool', '_is_tool_allowed'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/mcp_extensions/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/cache/postgresql_cache.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "asyncpg.pool",
            "item": "Pool",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 390,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLCache",
            "line": 18,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CacheManager",
            "line": 384,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'create_task', 'fetchrow', 'sleep', 'PostgreSQLCache', 'create_pool', 'dict', 'close', 'replace', 'total_seconds', '_create_cache_table', 'get', 'fetchval', '_cleanup_expired_entries', 'clear', 'get_cache_manager', 'CacheManager', 'acquire', 'int', 'max', 'split', 'dumps', 'get_cache', 'timedelta', 'error', 'initialize', 'execute', 'executemany', 'values', 'utcnow', 'fetch', 'info', 'cancel', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/models/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/apply_unified_enhancements.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "sys",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "update_imports_in_file",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_compatibility_wrapper",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_unified_db_v2",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_initialization_script",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_test_enhanced_methods",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 289,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'getLogger', 'chmod', 'update_imports_in_file', 'main', 'glob', 'replace', 'create_test_enhanced_methods', 'print', 'extend', 'create_compatibility_wrapper', 'update_unified_db_v2', 'basicConfig', 'read_text', 'error', 'create_initialization_script', 'write_text', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 300,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "connection_manager",
            "item": "PostgreSQLConnectionManager",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "connection_manager",
            "item": "get_connection_manager",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "connection_manager",
            "item": "close_connection_manager",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "extensions.pool_extensions",
            "item": "PoolExtensionsMixin",
            "alias": null,
            "line": 15,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_health_score",
            "line": 95,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_alerts",
            "line": 231,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLConnectionManagerEnhanced",
            "line": 19,
            "bases": [
              "PostgreSQLConnectionManager",
              "PoolExtensionsMixin"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'get_pool_recommendations', 'close', 'get_connection_diagnostics', 'append', 'get', 'str', 'max', 'health_check', 'isoformat', '_calculate_health_score', '__init__', 'super', 'error', 'initialize', 'get_pool_stats', 'get_extended_pool_stats', 'utcnow', 'info', '_generate_alerts', 'adjust_pool_size', 'PostgreSQLConnectionManagerEnhanced'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/dependencies.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "unified_postgresql",
            "item": "get_unified_postgresql",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_postgresql",
            "item": "UnifiedPostgreSQL",
            "alias": null,
            "line": 3,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_unified_postgresql'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/unified_db.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "postgresql_client",
            "item": "PostgreSQLClient",
            "alias": null,
            "line": 16,
            "level": 1
          },
          {
            "module": "weaviate_client",
            "item": "WeaviateClient",
            "alias": null,
            "line": 17,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_agent",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_with_memory",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_agent_and_log",
            "line": 97,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_agent_complete",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "store_agent_interaction",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search_agent_context",
            "line": 185,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_workflow_with_context",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow_with_documents",
            "line": 230,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_to_knowledge_base",
            "line": 246,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search_knowledge",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_session",
            "line": 279,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_session_with_history",
            "line": 294,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_session_activity",
            "line": 306,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_system_stats",
            "line": 321,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_activity_report",
            "line": 344,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cached_get_agent",
            "line": 369,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3a6b10>"
            ]
          },
          {
            "name": "clear_cache",
            "line": 373,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 378,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 386,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedDatabase",
            "line": 21,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list_workflows', 'get_workflow', 'search_memories', 'delete_agent', 'loads', 'PostgreSQLClient', 'isinstance', 'get_session', 'close', 'update_agent', 'cache_clear', 'get_recent_memories', 'get', 'create_agent', 'store_conversation', 'clear', 'create_workflow', 'str', 'create_session', 'WeaviateClient', 'health_check', 'get_conversation_history', 'store_memory', 'isoformat', 'search_documents', 'store_document', 'timedelta', 'len', 'get_audit_logs', 'store_knowledge', 'search_knowledge', 'get_agent', 'get_stats', 'search_conversations', 'create_audit_log', 'utcnow', 'info', 'execute_query', 'lru_cache', 'list_agents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/weaviate_client.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": "WeaviateSDKClient",
            "line": 15,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "weaviate.exceptions",
            "item": "WeaviateException",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "weaviate.gql.get",
            "item": "HybridFusion",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "DatabaseConfig",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_prepare_data_object",
            "line": 192,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "batch_creation_sync",
            "line": 481,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateClient",
            "line": 30,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MockDBConfig",
            "line": 524,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'QueryError', 'getLogger', 'uuid4', 'debug', 'AuthApiKey', 'with_meta_count', 'with_where', 'add_data_object', 'create_class', 'isinstance', 'pop', '_prepare_data_object', 'close', 'Client', 'append', 'run_in_executor', 'with_near_vector', 'get', 'get_event_loop', 'str', 'is_ready', '_ensure_all_schemas', 'batch', 'MockDBConfig', 'WeaviateException', 'WeaviateClient', 'health_check', 'isoformat', 'basicConfig', 'with_limit', 'len', '_ensure_schema', 'with_near_text', 'ConnectionError', 'do', 'error', 'with_sort', '_store_object', 'warning', 'lower', 'aggregate', 'raw', 'utcnow', 'info', 'items', 'connect', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/__init__.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 15
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_database",
            "line": 407,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 46,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 85,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_weaviate_client",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 368,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_pool_stats",
            "line": 392,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DatabaseType",
            "line": 21,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "OperationType",
            "line": 27,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "DatabaseMetrics",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DatabaseError",
            "line": 52,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ConnectionError",
            "line": 56,
            "bases": [
              "DatabaseError"
            ],
            "decorators": []
          },
          {
            "name": "QueryError",
            "line": 60,
            "bases": [
              "DatabaseError"
            ],
            "decorators": []
          },
          {
            "name": "VectorSearchResult",
            "line": 64,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HybridSearchResult",
            "line": 72,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedDatabase",
            "line": 80,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'Field', 'list', 'AuthApiKey', 'ValueError', 'with_where', 'fetchrow', 'get_idle_size', 'get_min_size', '_execute_with_metrics', 'create_pool', '_get_pool_stats', 'update', 'dict', 'join', 'close', 'Client', 'VectorSearchResult', 'append', 'DatabaseMetrics', 'get', 'keys', 'fetchval', 'get_database', 'get_weaviate_client', 'range', 'acquire', 'is_ready', 'str', 'get_size', 'get_postgres_connection', 'release', 'with_limit', 'len', 'with_near_text', 'ConnectionError', 'error', 'initialize', 'execute', 'warning', 'values', 'operation_func', 'fetch', 'time', 'info', 'get_max_size', 'UnifiedDatabase', 'do', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/unified_postgresql.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 16
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "connection_manager",
            "item": "get_connection_manager",
            "alias": null,
            "line": 19,
            "level": 1
          },
          {
            "module": "connection_manager",
            "item": "PostgreSQLConnectionManager",
            "alias": null,
            "line": 19,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_record_to_dict",
            "line": 770,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedPostgreSQL",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_start_cleanup_tasks', 'uuid4', 'create_task', '_record_to_dict', 'UUID', 'fetchrow', 'loads', 'sleep', 'isinstance', 'update', 'dict', '_create_all_tables', 'join', 'close', 'append', 'get', 'fetchval', 'clear', 'get_connection_manager', 'int', 'str', '_cleanup_loop', 'split', 'dumps', 'done', 'transaction', 'health_check', 'isoformat', 'session_get', 'UnifiedPostgreSQL', 'timedelta', 'error', 'initialize', 'execute', 'utcnow', 'fetch', 'info', 'items', 'cancel', 'cleanup_func'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/connection_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "asyncpg.pool",
            "item": "Pool",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__new__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_build_dsn",
            "line": 43,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "pool",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLConnectionManager",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'fetchrow', 'get_idle_size', 'create_pool', 'get_min_size', 'Lock', 'PostgreSQLConnectionManager', 'close', '_build_dsn', 'fetchval', 'acquire', 'int', 'RuntimeError', 'get_size', 'str', '__new__', 'transaction', 'getenv', 'super', 'error', 'initialize', 'execute', 'hasattr', 'fetch', 'info', 'get_max_size'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/unified_database.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 18
          },
          {
            "module": "logging",
            "alias": null,
            "line": 19
          },
          {
            "module": "time",
            "alias": null,
            "line": 20
          },
          {
            "module": "json",
            "alias": null,
            "line": 26
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 28
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 31
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 35,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 35,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "get_database_config",
            "alias": null,
            "line": 37,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "DatabaseConfig",
            "alias": null,
            "line": 37,
            "level": 0
          },
          {
            "module": "shared.database.weaviate_client",
            "item": "WeaviateClient",
            "alias": "ProdWeaviateClient",
            "line": 38,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_database",
            "line": 709,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 45,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 70,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 83,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 113,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 250,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 445,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 681,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DatabaseError",
            "line": 43,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ConnectionError",
            "line": 50,
            "bases": [
              "DatabaseError"
            ],
            "decorators": []
          },
          {
            "name": "QueryError",
            "line": 54,
            "bases": [
              "DatabaseError"
            ],
            "decorators": []
          },
          {
            "name": "TransactionError",
            "line": 58,
            "bases": [
              "DatabaseError"
            ],
            "decorators": []
          },
          {
            "name": "QueryResult",
            "line": 63,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "VectorSearchResult",
            "line": 75,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DatabaseInterface",
            "line": 87,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "PostgreSQLInterface",
            "line": 110,
            "bases": [
              "DatabaseInterface"
            ],
            "decorators": []
          },
          {
            "name": "WeaviateInterface",
            "line": 247,
            "bases": [
              "DatabaseInterface"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedDatabase",
            "line": 436,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'raw_graphql_query', 'QueryError', 'getLogger', 'QueryResult', 'uuid4', 'list', 'sql_transaction', 'create_task', 'sleep', 'get_database_config', 'create_pool', 'isinstance', 'disconnect', 'join', 'create_collection_if_not_exists', 'pop', 'dict', 'close', 'VectorSearchResult', 'search_objects_near_vector', 'vector_search', 'append', 'sql_execute', 'run_in_executor', 'get', 'PostgreSQLInterface', 'execute_many', 'fetchval', 'keys', 'vector_insert', 'get_event_loop', 'range', '_monitor_health', 'acquire', 'str', 'insert_objects', 'add_objects_batch', 'transaction', 'health_check', 'copy', 'len', 'create_table_if_not_exists', '_ensure_schema', 'ConnectionError', '__init__', 'super', 'NotImplementedError', 'tuple', 'error', 'execute', 'warning', 'executemany', 'hasattr', 'WeaviateInterface', 'values', 'raw', 'gather', 'time', 'info', 'ProdWeaviateClient', 'items', 'cancel', 'fetch', 'UnifiedDatabase', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/core.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 1
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "create_async_engine",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "async_sessionmaker",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "agent.app.core",
            "item": "config",
            "alias": "app_config",
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'AsyncSessionLocal', 'commit', 'create_async_engine', 'close', 'rollback', 'getenv', 'startswith', 'async_sessionmaker', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 214,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "unified_postgresql",
            "item": "UnifiedPostgreSQL",
            "alias": null,
            "line": 13,
            "level": 1
          },
          {
            "module": "extensions.cache_extensions",
            "item": "CacheExtensionsMixin",
            "alias": null,
            "line": 16,
            "level": 1
          },
          {
            "module": "extensions.session_extensions",
            "item": "SessionExtensionsMixin",
            "alias": null,
            "line": 17,
            "level": 1
          },
          {
            "module": "extensions.memory_extensions",
            "item": "MemoryExtensionsMixin",
            "alias": null,
            "line": 18,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedPostgreSQLEnhanced",
            "line": 22,
            "bases": [
              "UnifiedPostgreSQL",
              "CacheExtensionsMixin",
              "SessionExtensionsMixin",
              "MemoryExtensionsMixin"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'close', 'get', 'UnifiedPostgreSQLEnhanced', 'memory_snapshot_cleanup', '_cleanup_expired_sessions', 'str', 'health_check', 'isoformat', 'fetch_raw', 'execute_raw', 'get_comprehensive_stats', '__init__', 'session_analytics', 'super', 'error', 'initialize', '_cleanup_expired_cache', 'session_cleanup_inactive', 'utcnow', 'info', 'memory_snapshot_stats', 'cache_info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/postgresql_client.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "psycopg",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "contextmanager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "psycopg",
            "item": "sql",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "psycopg.rows",
            "item": "dict_row",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "psycopg_pool",
            "item": "ConnectionPool",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_build_connection_string",
            "line": 47,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_pool",
            "line": 54,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_schema",
            "line": 60,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_connection",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "contextmanager"
            ]
          },
          {
            "name": "create_agent",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_agents",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_agent",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_agent",
            "line": 153,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_workflow",
            "line": 164,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow",
            "line": 185,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_workflows",
            "line": 194,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_memory_snapshot",
            "line": 218,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_snapshots",
            "line": 243,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_audit_log",
            "line": 258,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_audit_logs",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_session",
            "line": 320,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_session",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_session",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup_expired_sessions",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_query",
            "line": 375,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 382,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 393,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLClient",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'getLogger', 'ConnectionPool', 'connection', 'isinstance', 'cursor', 'join', 'close', 'SQL', 'append', 'fetchall', 'extend', 'int', '_build_connection_string', 'str', 'get_connection', 'dumps', 'fetchone', 'getenv', '_ensure_schema', 'error', 'execute', 'Identifier', 'items', '_create_pool', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/unified_compat.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "connection_manager_enhanced",
            "item": "PostgreSQLConnectionManagerEnhanced",
            "alias": "PostgreSQLConnectionManager",
            "line": 8,
            "level": 1
          },
          {
            "module": "connection_manager_enhanced",
            "item": "get_connection_manager_enhanced",
            "alias": "get_connection_manager",
            "line": 8,
            "level": 1
          },
          {
            "module": "connection_manager_enhanced",
            "item": "close_connection_manager_enhanced",
            "alias": "close_connection_manager",
            "line": 8,
            "level": 1
          },
          {
            "module": "unified_postgresql_enhanced",
            "item": "UnifiedPostgreSQLEnhanced",
            "alias": "UnifiedPostgreSQL",
            "line": 14,
            "level": 1
          },
          {
            "module": "unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": "get_unified_postgresql",
            "line": 14,
            "level": 1
          },
          {
            "module": "unified_postgresql_enhanced",
            "item": "close_unified_postgresql_enhanced",
            "alias": "close_unified_postgresql",
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py": {
      "imports": {
        "standard": [
          {
            "module": "abc",
            "alias": null,
            "line": 12
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urljoin",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "aiohttp",
            "item": "ClientTimeout",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "shared.data_ingestion.base_processor",
            "item": "BaseProcessor",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "shared.data_ingestion.base_processor",
            "item": "ProcessedData",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 124,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "supported_formats",
            "line": 195,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_items",
            "line": 403,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 430,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "supported_formats",
            "line": 446,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "BaseAPIConnector",
            "line": 35,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "RESTConnector",
            "line": 64,
            "bases": [
              "BaseAPIConnector"
            ],
            "decorators": []
          },
          {
            "name": "GraphQLConnector",
            "line": 75,
            "bases": [
              "BaseAPIConnector"
            ],
            "decorators": []
          },
          {
            "name": "WebSocketConnector",
            "line": 86,
            "bases": [
              "BaseAPIConnector"
            ],
            "decorators": []
          },
          {
            "name": "GRPCConnector",
            "line": 97,
            "bases": [
              "BaseAPIConnector"
            ],
            "decorators": []
          },
          {
            "name": "CustomAPIConnector",
            "line": 108,
            "bases": [
              "BaseAPIConnector"
            ],
            "decorators": []
          },
          {
            "name": "APIProcessor",
            "line": 121,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "RESTAPIProcessor",
            "line": 198,
            "bases": [
              "APIProcessor"
            ],
            "decorators": []
          },
          {
            "name": "GraphQLProcessor",
            "line": 325,
            "bases": [
              "APIProcessor"
            ],
            "decorators": []
          },
          {
            "name": "WebSocketProcessor",
            "line": 427,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'enumerate', 'list', 'TCPConnector', 'min', '_make_request', 'startswith', 'sleep', 'loads', 'isinstance', 'ClientSession', 'message_handler', 'close', 'ClientTimeout', 'urljoin', 'append', 'exception', 'get', 'keys', 'get_event_loop', 'extend', 'str', '_extract_items', 'split', 'dumps', 'copy', 'isoformat', 'rstrip', 'len', 'ws_connect', '__init__', 'text', 'super', 'setdefault', 'json', '_apply_rate_limit', 'BasicAuth', 'calculate_checksum', '_get_session', 'request', 'raise_for_status', 'utcnow', 'time', 'items', 'ProcessedData'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/file_processors.py": {
      "imports": {
        "standard": [
          {
            "module": "csv",
            "alias": null,
            "line": 13
          },
          {
            "module": "io",
            "alias": null,
            "line": 14
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base_processor",
            "item": "BaseProcessor",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "base_processor",
            "item": "StorageAdapter",
            "alias": null,
            "line": 18,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CSVProcessor",
            "line": 20,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "JSONLProcessor",
            "line": 44,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "JSONProcessor",
            "line": 60,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "XMLProcessor",
            "line": 77,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "PDFProcessor",
            "line": 86,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "ExcelProcessor",
            "line": 95,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "ParquetProcessor",
            "line": 104,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          },
          {
            "name": "AvroProcessor",
            "line": 113,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'load', 'DictReader', 'append', 'loads', 'len', 'TextIOWrapper', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/base_processor.py": {
      "imports": {
        "standard": [
          {
            "module": "abc",
            "alias": null,
            "line": 15
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "default_fingerprint",
            "line": 112,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "StorageAdapter",
            "line": 19,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "BaseProcessor",
            "line": 37,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'update', 'len', 'validate_fn', 'fingerprint_fn', 'sha256', 'batch_generator', 'encode', 'sorted', 'upsert_batch', 'append', 'progress_cb', 'exists', 'items', 'hexdigest', 'enrich_fn'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/zip_processor.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 3
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 4
          },
          {
            "module": "zipfile",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base_processor",
            "item": "BaseProcessor",
            "alias": null,
            "line": 9,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ZipProcessor",
            "line": 11,
            "bases": [
              "BaseProcessor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'extractall', 'Path', 'hexdigest', 'str', 'sha256', 'is_file', 'read_bytes', 'upsert_batch', 'rglob', 'exists', 'ZipFile', 'TemporaryDirectory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base_processor",
            "item": "BaseProcessor",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "base_processor",
            "item": "StorageAdapter",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_processor",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_enrichment_fn",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_validation_fn",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_error_handler",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_progress_cb",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IngestionPipeline",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'ValueError', 'error_handler', 'ingest'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/extensions/pool_extensions.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "PoolExtensionsMixin",
            "line": 14,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'min', 'fetchrow', 'get_idle_size', 'get_min_size', 'float', 'dict', 'append', 'get', 'int', 'get_size', 'str', 'max', 'split', 'len', 'error', 'execute', 'warning', 'get_pool_stats', 'get_extended_pool_stats', 'fetch', 'info', 'get_max_size'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/extensions/cache_extensions.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 128
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 127,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 127,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 178,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 178,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "CacheExtensionsMixin",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'int', 'str', 'error', 'getLogger', 'dict', 'execute', 'split', 'dumps', '_record_to_dict', 'append', 'utcnow', 'fetch', 'fetchrow', 'info', 'items', 'timedelta', 'float'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/extensions/memory_extensions.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_format_memory_snapshot",
            "line": 452,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryExtensionsMixin",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'ValueError', 'UUID', 'fetchrow', 'isinstance', 'float', 'dict', 'memory_snapshot_create', 'append', 'get', 'str', 'int', '_format_memory_snapshot', 'memory_snapshot_get', 'dumps', 'split', 'isoformat', 'error', 'execute', 'utcnow', 'fetch', 'info', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/extensions/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "cache_extensions",
            "item": "CacheExtensionsMixin",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "session_extensions",
            "item": "SessionExtensionsMixin",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "memory_extensions",
            "item": "MemoryExtensionsMixin",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "pool_extensions",
            "item": "PoolExtensionsMixin",
            "alias": null,
            "line": 11,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/shared/database/extensions/session_extensions.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_format_session",
            "line": 247,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SessionExtensionsMixin",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'int', 'str', 'error', 'getLogger', 'join', 'execute', 'split', 'append', 'isoformat', 'get', 'fetch', 'info', '_format_session', 'fetchrow', 'len', 'float'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/interfaces.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "latency_ns",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_persistent",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_expired",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_access_update",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryTier",
            "line": 15,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryItem",
            "line": 45,
            "bases": [],
            "decorators": [
              "<ast.Call object at 0x7a6b7f317a90>"
            ]
          },
          {
            "name": "MemoryOperation",
            "line": 95,
            "bases": [],
            "decorators": [
              "<ast.Call object at 0x7a6b7f315890>"
            ]
          },
          {
            "name": "MemoryResult",
            "line": 113,
            "bases": [],
            "decorators": [
              "<ast.Call object at 0x7a6b7f7664d0>"
            ]
          },
          {
            "name": "IMemoryStorage",
            "line": 130,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "IMemoryOptimizer",
            "line": 266,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "IMemoryMetrics",
            "line": 352,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "IMemoryManager",
            "line": 473,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'total_seconds', 'utcnow', 'dataclass'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "exceptions",
            "item": "MemoryConfigurationError",
            "alias": null,
            "line": 15,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_config",
            "line": 458,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_config",
            "line": 466,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset_config",
            "line": 472,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_string",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "validate",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "connection_string",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "validate",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 218,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 298,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_env",
            "line": 331,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "from_file",
            "line": 373,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "from_dict",
            "line": 389,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "to_dict",
            "line": 403,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Environment",
            "line": 17,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TierConfig",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PostgreSQLConfig",
            "line": 73,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "WeaviateConfig",
            "line": 134,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "RedisConfig",
            "line": 166,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "OptimizationConfig",
            "line": 200,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MetricsConfig",
            "line": 237,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryConfig",
            "line": 262,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          }
        ],
        "function_calls": "{'validate', 'int', 'TierConfig', 'str', 'join', 'lower', 'open', 'load', 'from_string', 'MemoryConfigurationError', 'from_dict', 'items', 'getenv', 'field', 'from_env', 'cls'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/example_usage.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "UnifiedMemoryManager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryConfig",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "Environment",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryTier",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "get_config",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.memory.interfaces",
            "item": "MemoryOperation",
            "alias": null,
            "line": 125,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'getLogger', 'enumerate', 'batch_operations', 'run', 'export_metrics', 'sleep', 'UnifiedMemoryManager', 'main', 'close', 'get_current_metrics', 'get', 'optimize', 'delete', 'MemoryConfig', 'get_event_loop', 'range', 'print', 'example', 'set_alert_threshold', 'dumps', 'get_alerts', 'isoformat', 'basicConfig', 'len', 'sum', 'MemoryOperation', 'error', 'initialize', 'warning', 'get_prometheus_metrics', 'set', 'get_stats', 'exists', 'utcnow', 'time', 'info', 'items', 'cleanup', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "IMemoryManager",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "IMemoryOptimizer",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "IMemoryMetrics",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "MemoryItem",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "MemoryOperation",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "interfaces",
            "item": "MemoryResult",
            "alias": null,
            "line": 18,
            "level": 1
          },
          {
            "module": "implementations",
            "item": "UnifiedMemoryManager",
            "alias": null,
            "line": 29,
            "level": 1
          },
          {
            "module": "implementations",
            "item": "MemoryStorageFactory",
            "alias": null,
            "line": 29,
            "level": 1
          },
          {
            "module": "implementations",
            "item": "MemoryOptimizer",
            "alias": null,
            "line": 29,
            "level": 1
          },
          {
            "module": "implementations",
            "item": "MemoryMetricsCollector",
            "alias": null,
            "line": 29,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryException",
            "alias": null,
            "line": 36,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryNotFoundError",
            "alias": null,
            "line": 36,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryStorageError",
            "alias": null,
            "line": 36,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryTierError",
            "alias": null,
            "line": 36,
            "level": 1
          },
          {
            "module": "exceptions",
            "item": "MemoryOptimizationError",
            "alias": null,
            "line": 36,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/exceptions.py": {
      "imports": {
        "standard": [
          {
            "module": "random",
            "alias": null,
            "line": 395
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__str__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 59,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 79,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 105,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 135,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 159,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 183,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 207,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 233,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 257,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 282,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 307,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "handle_storage_error",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "is_retryable",
            "line": 369,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "get_retry_delay",
            "line": 385,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryException",
            "line": 10,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "MemoryNotFoundError",
            "line": 56,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryStorageError",
            "line": 76,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryTierError",
            "line": 102,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryOptimizationError",
            "line": 132,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConnectionError",
            "line": 156,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemorySerializationError",
            "line": 180,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryCapacityError",
            "line": 204,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryTimeoutError",
            "line": 230,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryValidationError",
            "line": 254,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConfigurationError",
            "line": 279,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryLockError",
            "line": 304,
            "bases": [
              "MemoryException"
            ],
            "decorators": []
          },
          {
            "name": "MemoryExceptionHandler",
            "line": 336,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'join', 'MemoryStorageError', 'append', 'uniform', 'min', 'get', 'items', 'isinstance', 'super', '__init__', 'type'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/shared/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/shared/error_handler.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 3
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "with_error_handling",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 12,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "handle_error",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "wrapper",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiError",
            "line": 10,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ErrorHandler",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'getLogger', 'func', 'isoformat', 'format_exc', 'now', 'handle_error', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/shared/main_utils.py": {
      "imports": {
        "standard": [
          {
            "module": "sys",
            "alias": null,
            "line": 3
          },
          {
            "module": "logging",
            "alias": null,
            "line": 4
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_logging",
            "line": 8,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_argument_parser",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_main",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'upper', 'setup_logging', 'add_argument', 'getattr', 'basicConfig', 'main_func', 'create_argument_parser', 'ArgumentParser', 'print', 'parse_args', 'exit'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/shared/utils.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_config",
            "line": 12,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_env_var",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_error",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'error', 'getLogger', 'dict', 'hasattr', 'open', 'ValueError', 'load', 'getenv', 'items', 'startswith', 'wait_for'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/utils/file_management.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "logging",
            "alias": null,
            "line": 5
          },
          {
            "module": "atexit",
            "alias": null,
            "line": 10
          },
          {
            "module": "weakref",
            "alias": null,
            "line": 11
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 217
          },
          {
            "module": "sys",
            "alias": null,
            "line": 282
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_load_cleanup_registry",
            "line": 20,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_save_cleanup_registry",
            "line": 38,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_for_cleanup",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unregister_from_cleanup",
            "line": 73,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup_expired_files",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "transient_file",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "managed_temp_directory",
            "line": 202,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup_expired_files_task",
            "line": 265,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 237,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__enter__",
            "line": 250,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__exit__",
            "line": 260,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f3fc790>"
            ]
          },
          {
            "name": "cleanup_on_exit_handler",
            "line": 187,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ManagedFile",
            "line": 229,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'register', 'isinstance', '_load_cleanup_registry', 'close', 'load', 'fromisoformat', 'replace', 'append', '_save_cleanup_registry', 'add', 'now', 'mkdir', 'str', 'func', 'register_for_cleanup', 'isoformat', 'cleanup_expired_files', 'WeakSet', 'resolve', 'wraps', 'timedelta', 'mkdtemp', 'len', 'dump', 'exit', 'cleanup_expired_files_task', 'error', 'warning', 'open', 'exists', 'unlink', 'info', 'items', 'cwd'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/utils/pydantic_validators.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "StrictStr",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "StrictInt",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "field_validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "ValidationError",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "computed_field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "model_validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "field_serializer",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic.config",
            "item": "ConfigDict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "decimal",
            "item": "Decimal",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_email",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_url",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_api_key",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_persona_slug",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_temperature",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_max_tokens",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_validation_errors",
            "line": 130,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_slug",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f203110>"
            ]
          },
          {
            "name": "validate_temp",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f202250>"
            ]
          },
          {
            "name": "validate_persona_id",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f360150>"
            ]
          },
          {
            "name": "validate_api_key_field",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7f1450>"
            ]
          },
          {
            "name": "validate_endpoint",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7f22d0>"
            ]
          },
          {
            "name": "construct_fast",
            "line": 172,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 184,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "validate_item",
            "line": 188,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_summary",
            "line": 198,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "capability_count",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "computed_field",
              "property"
            ]
          },
          {
            "name": "complexity_score",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "computed_field",
              "property"
            ]
          },
          {
            "name": "validate_capabilities",
            "line": 234,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f46b310>"
            ]
          },
          {
            "name": "validate_routing_logic",
            "line": 257,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f2ab410>"
            ]
          },
          {
            "name": "serialize_cost",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7fa410>"
            ]
          },
          {
            "name": "performance_grade",
            "line": 293,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "computed_field",
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 312,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "validate_item_cached",
            "line": 317,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "StrictBaseModel",
            "line": 21,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StrictPersonaConfig",
            "line": 80,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StrictLLMRequest",
            "line": 98,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StrictAPICredentials",
            "line": 114,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "OptimizedModel",
            "line": 162,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ValidationContext",
            "line": 181,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedPersonaConfig",
            "line": 208,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMRoutingConfig",
            "line": 247,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "APIResponseModel",
            "line": 276,
            "bases": [
              "StrictBaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CachedValidationContext",
            "line": 309,
            "bases": [
              "ValidationContext"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'model_validator', 'Field', 'list', 'validate_persona_slug', 'ValueError', 'model_class', 'validate_item', 'join', 'round', 'Decimal', 'append', 'get', 'validate_api_key', 'extend', 'str', 'field_serializer', 'validate_temperature', 'ConfigDict', 'len', '__init__', 'super', 'errors', 'validate_url', 'match', 'lower', 'set', 'model_construct', 'field_validator'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/main.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 225
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.api.endpoints",
            "item": "conversation",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.api.middleware.error_handler",
            "item": "ErrorHandlerMiddleware",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.api.models.responses",
            "item": "HealthCheckResponse",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaConfig",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaTrait",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "ResponseStyle",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "get_persona_manager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.business.workflows.examples",
            "item": "register_example_workflows",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.main",
            "item": "cherry_aiSystem",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "register_example_agents",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 104,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 184,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 195,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 207,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'getLogger', 'get_persona_manager', 'run', 'cherry_aiSystem', 'register_example_workflows', 'register_example_agents', 'get_event_bus', 'get_memory_service', 'PersonaConfig', 'register_persona', 'get_agent_manager', 'get', 'str', 'FastAPI', 'add_middleware', 'get_settings', 'stop_all_agents', 'start_all_agents', 'len', 'HealthCheckResponse', 'error', 'initialize', 'include_router', 'shutdown', 'info', 'items', 'list_agents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/router_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 12,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_endpoint",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_router",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RouterRegistry",
            "line": 9,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'RouterRegistry', 'getLogger', 'APIRouter', 'warning'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/security/credential_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "base64",
            "alias": null,
            "line": 22
          },
          {
            "module": "json",
            "alias": null,
            "line": 23
          },
          {
            "module": "logging",
            "alias": null,
            "line": 24
          },
          {
            "module": "os",
            "alias": null,
            "line": 25
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 26
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 30,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "secure_credentials",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_json",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "to_json",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_temp_file",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 104,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_credentials_from_env",
            "line": 118,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_service_account_from_file",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_account_key",
            "line": 164,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_account_key_path",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_project_id",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "secure_service_account_key",
            "line": 203,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup",
            "line": 224,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__del__",
            "line": 234,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CredentialSource",
            "line": 36,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceAccountInfo",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CredentialManager",
            "line": 91,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'CredentialManager', 'getLogger', 'chmod', 'to_json', 'to_temp_file', 'loads', 'remove', 'from_json', 'load', 'replace', 'append', 'get_project_id', 'secure_credentials', 'get', 'load_service_account_from_file', '_load_credentials_from_env', 'decode', 'basicConfig', 'secure_service_account_key', 'cls', 'dump', 'b64decode', 'warning', 'NamedTemporaryFile', 'open', 'exists', 'info', 'cleanup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/security/postgresql_secrets.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "psycopg2.extras",
            "item": "RealDictCursor",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_secret",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 14,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_connection",
            "line": 18,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_table",
            "line": 22,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_secret",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_secret",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_secret",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_secrets",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLSecretManager",
            "line": 11,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_ensure_table', 'commit', 'execute', 'dumps', 'fetchone', 'get_secret', '_get_connection', 'getenv', 'fetchall', 'PostgreSQLSecretManager', 'connect', 'cursor'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/agents/retriever_agent.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "llama_index.agent",
            "item": "RetrieverAgent",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "llama_index",
            "item": "VectorStoreIndex",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "query",
            "line": 12,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'chat', 'RetrieverAgent', 'from_weaviate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/agents/retriever_agent.py",
          "line": 3,
          "module": "llama_index.agent",
          "item": "RetrieverAgent",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/agents/retriever_agent.py",
          "line": 4,
          "module": "llama_index",
          "item": "VectorStoreIndex",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/business/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "field_validator",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "model_validator",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_numeric_range",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f2a9910>",
              "classmethod"
            ]
          },
          {
            "name": "validate_list_items",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7b9550>",
              "classmethod"
            ]
          },
          {
            "name": "calculate_total_tokens",
            "line": 322,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f452e90>"
            ]
          },
          {
            "name": "validate_slug_unique",
            "line": 401,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7c2d50>",
              "classmethod"
            ]
          },
          {
            "name": "validate_model_preferences",
            "line": 407,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f35bad0>",
              "classmethod"
            ]
          },
          {
            "name": "validate_relationships",
            "line": 427,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7fac90>"
            ]
          }
        ],
        "classes": [
          {
            "name": "PersonaStatus",
            "line": 15,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TraitCategory",
            "line": 23,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ResponseStyleType",
            "line": 32,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "InteractionMode",
            "line": 42,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "PersonaTrait",
            "line": 51,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ResponseStyle",
            "line": 90,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "KnowledgeDomain",
            "line": 124,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BehaviorRule",
            "line": 161,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConfiguration",
            "line": 191,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "VoiceConfiguration",
            "line": 228,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaTemplate",
            "line": 261,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaMetrics",
            "line": 297,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaConfiguration",
            "line": 341,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 77,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 110,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 148,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 177,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 216,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 247,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 284,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 328,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 433,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'model_validator', 'Field', 'strip', 'lower', 'ValueError', 'any', 'isinstance', 'field_validator'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "ValidationError",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models",
            "item": "BehaviorRule",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "InteractionMode",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "KnowledgeDomain",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "MemoryConfiguration",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "PersonaStatus",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "PersonaTrait",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "ResponseStyle",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "ResponseStyleType",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "TraitCategory",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "models",
            "item": "VoiceConfiguration",
            "alias": null,
            "line": 15,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 67,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_persona_from_file",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_prepare_persona_data",
            "line": 124,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_all_personas",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_personas",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reload_persona",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_for_updates",
            "line": 291,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_all",
            "line": 317,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_persona",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaConfigError",
            "line": 29,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "PersonaNotFoundError",
            "line": 34,
            "bases": [
              "PersonaConfigError"
            ],
            "decorators": []
          },
          {
            "name": "PersonaConfigManager",
            "line": 39,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'load_persona_from_file', 'PersonaConfigError', 'list', 'BehaviorRule', 'stat', 'MemoryConfiguration', 'IOError', 'VoiceConfiguration', 'isinstance', 'PersonaConfiguration', 'glob', 'model_dump', 'PersonaNotFoundError', 'join', 'append', 'get', 'PersonaTrait', 'add', 'str', 'sorted', 'copy', 'isoformat', 'issubset', '_prepare_persona_data', 'ResponseStyle', 'len', 'sum', 'dump', 'error', 'warning', 'open', 'set', 'values', 'exists', 'info', 'get_persona', 'items', 'KnowledgeDomain'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/test_models.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "ValidationError",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "BehaviorRule",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "InteractionMode",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "KnowledgeDomain",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "MemoryConfiguration",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaMetrics",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaStatus",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaTemplate",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaTrait",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyle",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyleType",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "TraitCategory",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "VoiceConfiguration",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_valid_trait_creation",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_numeric_value_validation",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_string_and_bool_values",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_weight_validation",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_response_style",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_level_validations",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_knowledge_domain",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_validation",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_behavior_rule",
            "line": 174,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_priority_validation",
            "line": 188,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_memory_config",
            "line": 211,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_token_limits",
            "line": 224,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_voice_config",
            "line": 241,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_rate_and_pitch_validation",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_template",
            "line": 274,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_timestamp_defaults",
            "line": 297,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_metrics",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_token_calculation",
            "line": 326,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_satisfaction_score_validation",
            "line": 334,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_valid_persona_configuration",
            "line": 353,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_slug_validation",
            "line": 384,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_model_preferences_validation",
            "line": 418,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_relationship_validation",
            "line": 455,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_serialization",
            "line": 479,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_persona_status_enum",
            "line": 509,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_trait_category_enum",
            "line": 516,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_response_style_type_enum",
            "line": 524,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_interaction_mode_enum",
            "line": 533,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_full_persona_with_all_features",
            "line": 544,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_minimal_persona_configuration",
            "line": 674,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestPersonaTrait",
            "line": 31,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestResponseStyle",
            "line": 84,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestKnowledgeDomain",
            "line": 131,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestBehaviorRule",
            "line": 171,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestMemoryConfiguration",
            "line": 208,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestVoiceConfiguration",
            "line": 238,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPersonaTemplate",
            "line": 271,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPersonaMetrics",
            "line": 308,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPersonaConfiguration",
            "line": 350,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestEnumValues",
            "line": 506,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestComplexScenarios",
            "line": 541,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'isinstance', 'str', 'model_dump', 'uuid4', 'len', 'model_dump_json', 'BehaviorRule', 'VoiceConfiguration', 'MemoryConfiguration', 'PersonaMetrics', 'PersonaTrait', 'PersonaTemplate', 'raises', 'ResponseStyle', 'main', 'KnowledgeDomain', 'PersonaConfiguration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/example_usage.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 197
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.personas.manager",
            "item": "PersonaConfigManager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.personas.manager",
            "item": "PersonaConfigError",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.personas.manager",
            "item": "PersonaNotFoundError",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaStatus",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "setup_logging",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_persona_loading",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_persona_access",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_filtering",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_persona_details",
            "line": 103,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_validation",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "demonstrate_export",
            "line": 186,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "main",
            "line": 217,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'demonstrate_export', 'stat', 'main', 'gettempdir', 'join', 'list_personas', 'setup_logging', 'load_all_personas', 'demonstrate_persona_details', 'demonstrate_filtering', 'demonstrate_persona_access', 'print', 'demonstrate_validation', 'basicConfig', 'export_persona', 'PersonaConfigManager', 'len', 'demonstrate_persona_loading', 'validate_all', 'exists', 'get_persona', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/test_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "tempfile",
            "alias": null,
            "line": 8
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 13
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 14
          },
          {
            "module": "time",
            "alias": null,
            "line": 282
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 344
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generator",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "manager",
            "item": "PersonaConfigError",
            "alias": null,
            "line": 16,
            "level": 1
          },
          {
            "module": "manager",
            "item": "PersonaConfigManager",
            "alias": null,
            "line": 16,
            "level": 1
          },
          {
            "module": "manager",
            "item": "PersonaNotFoundError",
            "alias": null,
            "line": 16,
            "level": 1
          },
          {
            "module": "models",
            "item": "InteractionMode",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "models",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "models",
            "item": "PersonaStatus",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "models",
            "item": "ResponseStyleType",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "models",
            "item": "TraitCategory",
            "alias": null,
            "line": 21,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "temp_config_dir",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f2a88d0>"
            ]
          },
          {
            "name": "sample_persona_data",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7f2aacd0>"
            ]
          },
          {
            "name": "manager_with_personas",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b7e6b0a50>"
            ]
          },
          {
            "name": "test_init_with_invalid_directory",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_init_with_valid_directory",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_persona_from_file",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_persona_from_nonexistent_file",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_persona_with_invalid_yaml",
            "line": 115,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_persona_with_empty_file",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_persona_with_invalid_data",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_all_personas",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_all_personas_empty_directory",
            "line": 166,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_all_personas_with_errors",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_get_persona",
            "line": 191,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_get_persona_not_found",
            "line": 197,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_personas",
            "line": 202,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_personas_with_status_filter",
            "line": 208,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_personas_with_tag_filter",
            "line": 227,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_reload_persona",
            "line": 250,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_check_for_updates",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_validate_all",
            "line": 293,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_export_persona",
            "line": 317,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_export_persona_not_found",
            "line": 331,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_load_detailed_personas",
            "line": 338,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestPersonaConfigManager",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'load_persona_from_file', 'enumerate', 'startswith', 'sleep', 'isinstance', 'list_personas', 'load_all_personas', 'reload_persona', 'keys', 'range', 'copy', 'touch', 'export_persona', 'PersonaConfigManager', 'raises', 'len', 'dump', 'validate_all', 'all', 'open', 'exists', 'write', 'get_persona', 'check_for_updates', 'TemporaryDirectory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/personas/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.personas.manager",
            "item": "PersonaConfigError",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.personas.manager",
            "item": "PersonaConfigManager",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.personas.manager",
            "item": "PersonaNotFoundError",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "BehaviorRule",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "InteractionMode",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "KnowledgeDomain",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "MemoryConfiguration",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaMetrics",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaStatus",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaTemplate",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaTrait",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyle",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyleType",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "TraitCategory",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "VoiceConfiguration",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/database/llm_config_models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "decimal",
            "item": "Decimal",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "Column",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "Integer",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "String",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "Boolean",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "DateTime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "ForeignKey",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "UniqueConstraint",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "Index",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "DECIMAL",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "TEXT",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "Date",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy.dialects.postgresql",
            "item": "JSONB",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.declarative",
            "item": "declarative_base",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "sqlalchemy.orm",
            "item": "relationship",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "sqlalchemy.orm",
            "item": "backref",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "sqlalchemy.sql",
            "item": "func",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 160,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LLMProvider",
            "line": 28,
            "bases": [
              "Base"
            ],
            "decorators": []
          },
          {
            "name": "LLMModel",
            "line": 58,
            "bases": [
              "Base"
            ],
            "decorators": []
          },
          {
            "name": "LLMUseCase",
            "line": 103,
            "bases": [
              "Base"
            ],
            "decorators": []
          },
          {
            "name": "LLMModelAssignment",
            "line": 134,
            "bases": [
              "Base"
            ],
            "decorators": []
          },
          {
            "name": "LLMFallbackModel",
            "line": 174,
            "bases": [
              "Base"
            ],
            "decorators": []
          },
          {
            "name": "LLMMetric",
            "line": 192,
            "bases": [
              "Base"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'UniqueConstraint', 'String', 'current_date', 'relationship', 'Column', 'Index', 'to_dict', 'isoformat', 'sorted', 'declarative_base', 'ForeignKey', 'DECIMAL', 'float'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/database/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.parser",
            "item": "ParserInterface",
            "alias": null,
            "line": 29,
            "level": 1
          },
          {
            "module": "interfaces.storage",
            "item": "StorageInterface",
            "alias": null,
            "line": 30,
            "level": 1
          },
          {
            "module": "interfaces.processor",
            "item": "ProcessorInterface",
            "alias": null,
            "line": 31,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/monitoring/claude_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "time",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 83,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_storage",
            "line": 115,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "calculate_cost",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics_summary",
            "line": 297,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_metrics",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 161,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "set_tokens",
            "line": 168,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_error",
            "line": 172,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "APICallMetrics",
            "line": 35,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AggregatedMetrics",
            "line": 53,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ClaudeMonitor",
            "line": 70,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CallContext",
            "line": 160,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_logger', '_init_storage', 'ValueError', 'round', 'join', 'append', 'get', '_send_cost_alert', '_send_error_alert', 'now', 'CallContext', 'int', 'str', 'split', 'dumps', '_store_metrics', 'isoformat', 'APICallMetrics', 'defaultdict', 'error', 'warning', 'calculate_cost', 'time', 'info', 'AggregatedMetrics', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/monitoring/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "claude_monitor",
            "item": "AggregatedMetrics",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "claude_monitor",
            "item": "APICallMetrics",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "claude_monitor",
            "item": "ClaudeMonitor",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "monitored_litellm_client",
            "item": "MonitoredLiteLLMClient",
            "alias": null,
            "line": 8,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/monitoring/monitored_litellm_client.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.monitoring.claude_monitor",
            "item": "ClaudeMonitor",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LiteLLMClient",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMEmbeddingResponse",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMMessage",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMResponse",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_should_monitor",
            "line": 46,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_monitoring_summary",
            "line": 194,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_monitoring_data",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MonitoredLiteLLMClient",
            "line": 16,
            "bases": [
              "LiteLLMClient"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'get_metrics_summary', 'dict', '_should_monitor', 'lower', 'export_metrics', 'monitor_call', 'set_tokens', 'info', 'set_error', 'getenv', 'get_logger', 'ClaudeMonitor', '__init__', 'LLMMessage', 'super', 'get_embedding', 'chat_completion'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/llm/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "unified_router",
            "item": "UnifiedLLMRouter",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "LLMRequest",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "LLMResponse",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "UseCase",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "ModelTier",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "Provider",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "LLMError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "RateLimitError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "ModelUnavailableError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "ConfigurationError",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "get_llm_router",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "reset_router",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "complete",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "chat",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "unified_router",
            "item": "stream_chat",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "factory",
            "item": "create_router",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "factory",
            "item": "get_router",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "factory",
            "item": "router_context",
            "alias": null,
            "line": 21,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/llm/unified_router.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 18
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 19
          },
          {
            "module": "json",
            "alias": null,
            "line": 20
          },
          {
            "module": "time",
            "alias": null,
            "line": 21
          },
          {
            "module": "logging",
            "alias": null,
            "line": 27
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 29
          },
          {
            "module": "os",
            "alias": null,
            "line": 694
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "get_llm_config",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "LLMConfig",
            "alias": null,
            "line": 32,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_llm_router",
            "line": 965,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 121,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 130,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 136,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 141,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_available_models",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 175,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_model_specs",
            "line": 184,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_models",
            "line": 329,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_cost",
            "line": 341,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 356,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_model_specs",
            "line": 368,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_models",
            "line": 507,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_convert_messages",
            "line": 519,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_convert_tools",
            "line": 537,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_cost",
            "line": 542,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 556,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "select_model",
            "line": 560,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_score_model",
            "line": 595,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_performance",
            "line": 623,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 659,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_providers",
            "line": 680,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_initialize_model_selector",
            "line": 716,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_cache_key",
            "line": 884,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_metrics",
            "line": 897,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 919,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_models",
            "line": 938,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UseCase",
            "line": 36,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ModelTier",
            "line": 51,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Provider",
            "line": 58,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ModelCapabilities",
            "line": 69,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ModelSpec",
            "line": 82,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "LLMRequest",
            "line": 92,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMResponse",
            "line": 107,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMError",
            "line": 119,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "RateLimitError",
            "line": 128,
            "bases": [
              "LLMError"
            ],
            "decorators": []
          },
          {
            "name": "ModelUnavailableError",
            "line": 134,
            "bases": [
              "LLMError"
            ],
            "decorators": []
          },
          {
            "name": "ConfigurationError",
            "line": 139,
            "bases": [
              "LLMError"
            ],
            "decorators": []
          },
          {
            "name": "ProviderInterface",
            "line": 144,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "OpenAIProvider",
            "line": 172,
            "bases": [
              "ProviderInterface"
            ],
            "decorators": []
          },
          {
            "name": "AnthropicProvider",
            "line": 353,
            "bases": [
              "ProviderInterface"
            ],
            "decorators": []
          },
          {
            "name": "IntelligentModelSelector",
            "line": 553,
            "bases": [],
            "decorators": []
          },
          {
            "name": "UnifiedLLMRouter",
            "line": 647,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'debug', 'Field', 'stream_complete', 'list', 'aclose', 'UnifiedLLMRouter', '_convert_messages', 'startswith', 'loads', 'sleep', 'isinstance', '_get_cache_key', 'stream', 'complete', 'LLMError', 'LLMRequest', 'encode', 'AsyncClient', 'append', 'get_llm_router', 'get', 'keys', 'ModelCapabilities', 'hexdigest', 'check_health', 'range', 'OpenAIProvider', '_initialize_model_selector', 'extend', 'RateLimitError', 'int', 'max', 'IntelligentModelSelector', 'dumps', '_initialize_providers', 'len', 'getenv', 'LLMResponse', 'embed', '__init__', 'NotImplementedError', '_load_model_specs', 'json', 'super', '_attempt_completion', 'error', '_score_model', 'md5', '_convert_tools', 'warning', '_calculate_cost', 'hasattr', 'get_available_models', 'values', 'ModelSpec', 'raise_for_status', 'ModelUnavailableError', 'time', 'aiter_lines', 'update_performance', 'items', 'info', 'AnthropicProvider', '_update_metrics', 'select_model'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/llm/factory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "get_llm_config",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.config.unified_config",
            "item": "LLMConfig",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "unified_router",
            "item": "UnifiedLLMRouter",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_router",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_router",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'get_llm_config', 'getLogger', 'close', 'UnifiedLLMRouter', 'create_router'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/config/unified_config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 15
          },
          {
            "module": "json",
            "alias": null,
            "line": 21
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 22
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "SettingsConfigDict",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_config",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f314210>"
            ]
          },
          {
            "name": "reload_config",
            "line": 361,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_config_from_dict",
            "line": 376,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_config_to_file",
            "line": 390,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_config_from_file",
            "line": 410,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_database_config",
            "line": 435,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_llm_config",
            "line": 439,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_api_config",
            "line": 443,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_monitoring_config",
            "line": 447,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_config",
            "line": 451,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_coordination_config",
            "line": 455,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "to_dict",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "postgresql_url",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "weaviate_url",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "validate_config",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_cors_origins",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e6b2f50>"
            ]
          },
          {
            "name": "validate_config",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 209,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 236,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 261,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_all_configs",
            "line": 309,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_config_summary",
            "line": 321,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Environment",
            "line": 30,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "LogLevel",
            "line": 37,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "BaseConfig",
            "line": 45,
            "bases": [
              "BaseModel",
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "DatabaseConfig",
            "line": 67,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "LLMConfig",
            "line": 114,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "APIConfig",
            "line": 153,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "MonitoringConfig",
            "line": 185,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConfig",
            "line": 213,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "coordinationConfig",
            "line": 241,
            "bases": [
              "BaseConfig"
            ],
            "decorators": []
          },
          {
            "name": "Unifiedcherry_aiConfig",
            "line": 269,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 52,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'safe_load', 'Field', 'FileNotFoundError', 'ValueError', 'Unifiedcherry_aiConfig', 'isinstance', 'dict', 'bool', 'load', 'cache_clear', 'TypeVar', 'split', 'any', 'create_config_from_dict', 'validate_config', 'SettingsConfigDict', 'dump', 'validator', 'get_config', 'strip', 'lower', 'all', 'open', 'exists', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/config/settings_vultr.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_vultr_project_id",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_vultr_credentials_path",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_project_id",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_credentials_path",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 9,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Settings', 'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/config/__init__.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "__future__",
            "item": "annotations",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "field_validator",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "RouterConfig",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_settings",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f56b290>"
            ]
          },
          {
            "name": "get_router_config",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_database_url",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e8f1ed0>",
              "classmethod"
            ]
          },
          {
            "name": "validate_api_keys",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e7c0910>",
              "classmethod"
            ]
          },
          {
            "name": "to_router_config",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 26,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Field', 'replace', 'Settings', 'to_router_config', 'ValueError', 'get_settings', 'RouterConfig', 'getenv', 'lru_cache', 'field_validator'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/persistency/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/auth/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "simple_auth",
            "item": "api_key_header",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "simple_auth",
            "item": "require_auth",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "simple_auth",
            "item": "verify_api_key",
            "alias": null,
            "line": 3,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/auth/simple_auth.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Security",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi.security",
            "item": "APIKeyHeader",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "verify_api_key",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "require_auth",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'APIKeyHeader', 'HTTPException', 'Security', 'getenv'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "UnifiedMemoryManager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryConfig",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "Environment",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryTier",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryItem",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryOperation",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryResult",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryNotFoundError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryValidationError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory",
            "item": "MemoryStorageError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.memory.implementations",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.memory.implementations",
            "item": "MemoryOptimizer",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.memory.implementations",
            "item": "MemoryMetricsCollector",
            "alias": null,
            "line": 26,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_memory_item_creation",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_memory_item_expiration",
            "line": 366,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_operation_creation",
            "line": 404,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_result_creation",
            "line": 423,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestUnifiedMemoryManager",
            "line": 80,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestMemoryItem",
            "line": 343,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestMemoryOperation",
            "line": 401,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestMemoryResult",
            "line": 420,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'enumerate', 'batch_operations', 'assert_called_once_with', 'startswith', 'sleep', 'UnifiedMemoryManager', 'main', 'isinstance', 'is_expired', 'close', 'append', 'get', 'optimize', 'delete', 'MemoryConfig', 'range', 'AsyncMock', 'raises', 'len', 'timedelta', 'MemoryOperation', 'MemoryResult', 'initialize', 'all', 'set', 'get_stats', 'utcnow', 'exists', 'gather', 'cleanup', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/metrics.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "deque",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "CollectorRegistry",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "generate_latest",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryMetrics",
            "alias": null,
            "line": 25,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 25,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MetricsConfig",
            "alias": null,
            "line": 25,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryMetricsError",
            "alias": null,
            "line": 30,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 67,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_access",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_operation",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_migration",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "calculate_aggregates",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_cleanup_old_metrics",
            "line": 158,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_percentile",
            "line": 174,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 198,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_prometheus_metrics",
            "line": 241,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_percentile",
            "line": 569,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AccessMetric",
            "line": 35,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "OperationMetric",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TierMigrationMetric",
            "line": 55,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MetricsAggregator",
            "line": 64,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MemoryMetricsCollector",
            "line": 185,
            "bases": [
              "IMemoryMetrics"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_check_alerts', 'list', 'Gauge', 'labels', 'CollectorRegistry', '_init_prometheus_metrics', '_percentile', 'dict', 'Counter', 'total_seconds', 'calculate_aggregates', 'append', 'get_current_metrics', 'observe', 'get', 'keys', 'deque', 'clear', 'AccessMetric', 'TierMigrationMetric', 'add_access', 'int', 'str', '_cleanup_old_metrics', 'sorted', 'inc', 'isoformat', 'popleft', 'len', 'timedelta', 'defaultdict', 'error', 'OperationMetric', 'add_operation', 'MetricsAggregator', 'warning', 'generate_latest', 'Histogram', 'set', 'values', 'utcnow', 'info', 'add_migration', 'items', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryManager",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "IMemoryOptimizer",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "IMemoryMetrics",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryItem",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryOperation",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryResult",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "config",
            "item": "MemoryConfig",
            "alias": null,
            "line": 28,
            "level": 2
          },
          {
            "module": "config",
            "item": "get_config",
            "alias": null,
            "line": 28,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryException",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryNotFoundError",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryStorageError",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryTierError",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryValidationError",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryExceptionHandler",
            "alias": null,
            "line": 29,
            "level": 2
          },
          {
            "module": "storage",
            "item": "MemoryStorageFactory",
            "alias": null,
            "line": 37,
            "level": 1
          },
          {
            "module": "optimizer",
            "item": "MemoryOptimizer",
            "alias": null,
            "line": 38,
            "level": 1
          },
          {
            "module": "metrics",
            "item": "MemoryMetricsCollector",
            "alias": null,
            "line": 39,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 61,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_start_background_tasks",
            "line": 161,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_memory_item",
            "line": 661,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UnifiedMemoryManager",
            "line": 43,
            "bases": [
              "IMemoryManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'_metrics_export_loop', 'debug', 'Queue', 'MemoryValidationError', 'record_tier_migration', 'sleep', 'next', 'encode', 'get', 'get_batch', 'record_access', 'dumps', 'initialize', 'sha256', 'MemoryStorageError', 'MemoryOptimizer', 'utcnow', '_promote_item', 'items', 'getLogger', 'should_promote', 'get_prefetch_candidates', 'enumerate', '_start_background_tasks', 'predict_access', '_is_in_fast_tier', 'append', 'is_set', 'cleanup_expired', 'optimize', 'extend', 'MemoryMetricsCollector', 'Semaphore', 'sum', 'error', '_demote_item', 'exists', 'gather', 'cleanup', '_optimization_loop', 'put', 'create_task', 'Event', 'isinstance', 'close', 'add', '_batch_delete', 'wait_for', 'is_retryable', 'defaultdict', 'reversed', 'get_config', 'hasattr', 'analyze_access_patterns', 'values', 'info', '_queue_prefetch', 'MemoryItem', '_initialize_storages', 'export_metrics', '_batch_set', 'remove', '_create_memory_item', '_determine_tier', 'record_operation', 'delete', 'hexdigest', 'sort', 'create_storage', 'str', 'full', '_batch_get', '_cleanup_loop', 'len', 'MemoryResult', '_prefetch_loop', 'set_batch', 'set', 'get_stats', 'time', 'cancel', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "manager",
            "item": "UnifiedMemoryManager",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "optimizer",
            "item": "MemoryOptimizer",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "metrics",
            "item": "MemoryMetricsCollector",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "storage",
            "item": "MemoryStorageFactory",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "storage",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "storage",
            "item": "PostgreSQLStorage",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/optimizer.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "pickle",
            "alias": null,
            "line": 14
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          },
          {
            "module": "joblib",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "deque",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "sklearn.ensemble",
            "item": "RandomForestRegressor",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "sklearn.preprocessing",
            "item": "StandardScaler",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryOptimizer",
            "alias": null,
            "line": 21,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 21,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 21,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "MemoryItem",
            "alias": null,
            "line": 21,
            "level": 2
          },
          {
            "module": "interfaces",
            "item": "OptimizationConfig",
            "alias": null,
            "line": 21,
            "level": 2
          },
          {
            "module": "exceptions",
            "item": "MemoryOptimizationError",
            "alias": null,
            "line": 28,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_access",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_features",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 87,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_access_sequence",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict_next_accesses",
            "line": 115,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 145,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_or_create_pattern",
            "line": 491,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_feature_vector",
            "line": 497,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_value_to_tier",
            "line": 511,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AccessPattern",
            "line": 32,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PrefetchPredictor",
            "line": 84,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MemoryOptimizer",
            "line": 133,
            "bases": [
              "IMemoryOptimizer"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'should_promote', 'list', 'std', 'rand', '_initialize_models', 'get_features', 'min', 'record_access_sequence', '_get_or_create_pattern', 'float', 'PrefetchPredictor', '_train_with_synthetic_data', 'dict', 'round', 'pop', 'total_seconds', 'load', 'append', 'get', 'delete', 'deque', 'randn', 'range', 'RandomForestRegressor', 'randint', 'sort', 'record_access', 'median', 'extend', 'int', 'str', 'predict_next_accesses', 'max', 'MemoryOptimizationError', '_value_to_tier', 'AccessPattern', 'isoformat', 'copy', 'transform', 'should_demote', 'get_optimization_metrics', 'import_model', 'len', '_load_models', 'sum', 'mean', 'dump', 'defaultdict', 'error', 'warning', 'set', '_extract_feature_vector', 'values', 'get_stats', 'utcnow', 'predict', 'info', 'fit', 'items', 'StandardScaler', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "pickle",
            "alias": null,
            "line": 10
          },
          {
            "module": "lz4.frame",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "asyncpg.pool",
            "item": "Pool",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 19,
            "level": 3
          },
          {
            "module": "interfaces",
            "item": "MemoryItem",
            "alias": null,
            "line": 19,
            "level": 3
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 19,
            "level": 3
          },
          {
            "module": "config",
            "item": "PostgreSQLConfig",
            "alias": null,
            "line": 20,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryStorageError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryConnectionError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemorySerializationError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryNotFoundError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryTimeoutError",
            "alias": null,
            "line": 21,
            "level": 3
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 45,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_serialize_value",
            "line": 626,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_deserialize_value",
            "line": 649,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgreSQLStorage",
            "line": 31,
            "bases": [
              "IMemoryStorage"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'getLogger', 'MemoryConnectionError', 'MemoryTimeoutError', 'fetchrow', 'prepare', 'loads', '_optimize_indexes', 'get_idle_size', 'create_pool', 'float', 'dict', 'MemoryTier', 'close', 'replace', 'append', 'get', 'extend', 'acquire', 'int', 'str', 'get_size', '_serialize_value', 'dumps', 'split', 'transaction', '_prepare_statements', 'compress', 'len', '_deserialize_value', 'type', 'error', '_create_schema', 'execute', 'executemany', 'MemoryStorageError', 'MemorySerializationError', 'fetch', 'info', 'items', 'decompress'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
          "line": 11,
          "module": "lz4.frame",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 10
          },
          {
            "module": "pickle",
            "alias": null,
            "line": 11
          },
          {
            "module": "lz4.frame",
            "alias": null,
            "line": 12
          },
          {
            "module": "heapq",
            "alias": null,
            "line": 16
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          },
          {
            "module": "fnmatch",
            "alias": null,
            "line": 464
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "OrderedDict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "threading",
            "item": "RLock",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 20,
            "level": 3
          },
          {
            "module": "interfaces",
            "item": "MemoryItem",
            "alias": null,
            "line": 20,
            "level": 3
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 20,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryStorageError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryCapacityError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemorySerializationError",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryValidationError",
            "alias": null,
            "line": 21,
            "level": 3
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "on_access",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_insert",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_eviction_candidate",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 55,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "on_access",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_insert",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_eviction_candidate",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 81,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "on_access",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_insert",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_eviction_candidate",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove",
            "line": 112,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 121,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "on_insert",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_eviction_candidate",
            "line": 129,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 152,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_eviction_policy",
            "line": 189,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_serialize_item",
            "line": 402,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_match_pattern",
            "line": 462,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_match_metadata",
            "line": 467,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EvictionPolicy",
            "line": 30,
            "bases": [],
            "decorators": []
          },
          {
            "name": "LRUPolicy",
            "line": 52,
            "bases": [
              "EvictionPolicy"
            ],
            "decorators": []
          },
          {
            "name": "LFUPolicy",
            "line": 78,
            "bases": [
              "EvictionPolicy"
            ],
            "decorators": []
          },
          {
            "name": "FIFOPolicy",
            "line": 118,
            "bases": [
              "EvictionPolicy"
            ],
            "decorators": []
          },
          {
            "name": "InMemoryStorage",
            "line": 140,
            "bases": [
              "IMemoryStorage"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'heappop', 'getLogger', 'debug', 'MemoryValidationError', 'on_insert', 'remove', 'get_eviction_candidate', 'MemoryCapacityError', 'move_to_end', 'is_expired', '_create_eviction_policy', 'join', 'pop', 'next', 'heappush', 'append', 'get', 'keys', 'delete', 'add', 'OrderedDict', 'str', 'fnmatch', 'dumps', 'isoformat', 'compress', 'len', 'on_access', '__init__', '_match_pattern', '_serialize_item', 'discard', 'super', 'defaultdict', '_ensure_capacity', 'error', 'type', 'MemoryStorageError', 'set', 'MemorySerializationError', 'time', 'info', 'items', 'iter', 'with_access_update', 'RLock', '_match_metadata'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
          "line": 12,
          "module": "lz4.frame",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/memory/implementations/storage/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "factory",
            "item": "MemoryStorageFactory",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "inmemory",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "postgresql",
            "item": "PostgreSQLStorage",
            "alias": null,
            "line": 9,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/memory/implementations/storage/factory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 10,
            "level": 3
          },
          {
            "module": "interfaces",
            "item": "MemoryTier",
            "alias": null,
            "line": 10,
            "level": 3
          },
          {
            "module": "config",
            "item": "MemoryConfig",
            "alias": null,
            "line": 11,
            "level": 3
          },
          {
            "module": "config",
            "item": "PostgreSQLConfig",
            "alias": null,
            "line": 11,
            "level": 3
          },
          {
            "module": "config",
            "item": "WeaviateConfig",
            "alias": null,
            "line": 11,
            "level": 3
          },
          {
            "module": "config",
            "item": "RedisConfig",
            "alias": null,
            "line": 11,
            "level": 3
          },
          {
            "module": "exceptions",
            "item": "MemoryConfigurationError",
            "alias": null,
            "line": 12,
            "level": 3
          },
          {
            "module": "inmemory",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 224,
            "level": 1
          },
          {
            "module": "shared",
            "item": "SharedMemoryStorage",
            "alias": null,
            "line": 225,
            "level": 1
          },
          {
            "module": "postgresql",
            "item": "PostgreSQLStorage",
            "alias": null,
            "line": 226,
            "level": 1
          },
          {
            "module": "weaviate",
            "item": "WeaviateStorage",
            "alias": null,
            "line": 227,
            "level": 1
          },
          {
            "module": "inmemory",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 87,
            "level": 1
          },
          {
            "module": "inmemory",
            "item": "InMemoryStorage",
            "alias": null,
            "line": 96,
            "level": 1
          },
          {
            "module": "shared",
            "item": "SharedMemoryStorage",
            "alias": null,
            "line": 105,
            "level": 1
          },
          {
            "module": "postgresql",
            "item": "PostgreSQLStorage",
            "alias": null,
            "line": 113,
            "level": 1
          },
          {
            "module": "weaviate",
            "item": "WeaviateStorage",
            "alias": null,
            "line": 121,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_register_default_storages",
            "line": 221,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_storage",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "create_storage",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "create_all_storages",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "validate_storage_config",
            "line": 185,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryStorageFactory",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'validate', 'str', 'error', 'getLogger', 'warning', 'SharedMemoryStorage', 'InMemoryStorage', 'get', 'MemoryConfigurationError', 'info', 'WeaviateStorage', 'register_storage', 'PostgreSQLStorage', '_register_default_storages', 'create_storage'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/infrastructure/deployment/base.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 41,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_compute_instance",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "create_managed_database",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "create_object_storage",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "create_firewall_rules",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 78,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "deploy_cherry_ai_stack",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_api_server_script",
            "line": 106,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DeploymentEnvironment",
            "line": 14,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ResourceSize",
            "line": 21,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "DeploymentConfig",
            "line": 30,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CloudProvider",
            "line": 49,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "Deploymentconductor",
            "line": 75,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'create_firewall_rules', 'create_compute_instance', '_generate_api_server_script'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/infrastructure/connectivity/dragonfly.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 188
          },
          {
            "module": "json",
            "alias": null,
            "line": 195
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "redis.exceptions",
            "item": "ConnectionError",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "redis.exceptions",
            "item": "TimeoutError",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base",
            "item": "RetryableConnection",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "base",
            "item": "ServiceHealth",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "base",
            "item": "ServiceStatus",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DragonflyConnection",
            "line": 16,
            "bases": [
              "RetryableConnection"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'pipeline', 'ValueError', 'loads', 'pubsub', 'factory', 'close', 'get', 'ping', 'str', 'from_url', 'dumps', 'iscoroutinefunction', 'ServiceHealth', 'Redis', 'ConnectionError', '__init__', 'super', 'unsubscribe', 'set', 'subscribe', 'time', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py": {
      "imports": {
        "standard": [
          {
            "module": "time",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "motor.motor_asyncio",
            "item": "AsyncIOMotorClient",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pymongo.errors",
            "item": "ConnectionFailure",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pymongo.errors",
            "item": "ServerSelectionTimeoutError",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base",
            "item": "RetryableConnection",
            "alias": null,
            "line": 13,
            "level": 1
          },
          {
            "module": "base",
            "item": "ServiceHealth",
            "alias": null,
            "line": 13,
            "level": 1
          },
          {
            "module": "base",
            "item": "ServiceStatus",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MongoDBConnection",
            "line": 15,
            "bases": [
              "RetryableConnection"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'delete_one', 'to_list', 'insert_many', 'ValueError', 'AsyncIOMotorClient', 'update_many', 'find', 'close', 'get', 'delete_many', 'str', 'command', 'find_one', 'ServiceHealth', 'insert_one', 'update_one', 'server_info', '__init__', 'super', 'create_index', 'aggregate', 'time', 'count_documents', 'ConnectionFailure'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
          "line": 10,
          "module": "motor.motor_asyncio",
          "item": "AsyncIOMotorClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
          "line": 11,
          "module": "pymongo.errors",
          "item": "ConnectionFailure",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
          "line": 11,
          "module": "pymongo.errors",
          "item": "ServerSelectionTimeoutError",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/infrastructure/connectivity/base.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry_if_exception_type",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "stop_after_attempt",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "wait_exponential",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 37,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 44,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "set_fallback",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 96,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 155,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_service",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_pool",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service",
            "line": 167,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_pool",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ServiceStatus",
            "line": 20,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceHealth",
            "line": 29,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ServiceConnection",
            "line": 41,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "ConnectionPool",
            "line": 93,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RetryableConnection",
            "line": 140,
            "bases": [
              "ServiceConnection"
            ],
            "decorators": []
          },
          {
            "name": "ServiceRegistry",
            "line": 152,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'enumerate', 'stop_after_attempt', 'wait_exponential', 'Lock', 'disconnect', 'append', 'get', 'get_healthy_connection', 'range', 'str', 'TypeVar', 'health_check', 'retry', 'ServiceHealth', 'service_class', 'len', '_fallback_handler', 'error', 'execute', 'Exception', 'warning', 'retry_if_exception_type', 'info', 'items', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/infrastructure/config/settings.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "HttpUrl",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "SecretStr",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "field_validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_settings",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reload_settings",
            "line": 198,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_environment",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283101d0>",
              "classmethod"
            ]
          },
          {
            "name": "is_production",
            "line": 166,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_development",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_testing",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          }
        ],
        "classes": [
          {
            "name": "Environment",
            "line": 14,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "LogLevel",
            "line": 22,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceSettings",
            "line": 31,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "MongoDBSettings",
            "line": 40,
            "bases": [
              "ServiceSettings"
            ],
            "decorators": []
          },
          {
            "name": "DragonflySettings",
            "line": 50,
            "bases": [
              "ServiceSettings"
            ],
            "decorators": []
          },
          {
            "name": "WeaviateSettings",
            "line": 59,
            "bases": [
              "ServiceSettings"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderSettings",
            "line": 68,
            "bases": [
              "ServiceSettings"
            ],
            "decorators": []
          },
          {
            "name": "DeploymentSettings",
            "line": 83,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "APISettings",
            "line": 100,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "FeatureFlags",
            "line": 115,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          },
          {
            "name": "Settings",
            "line": 126,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Environment', 'Field', 'lower', 'Settings', 'field_validator'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/models/requests.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ConversationRequest",
            "line": 11,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowExecutionRequest",
            "line": 19,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentMessageRequest",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentTaskRequest",
            "line": 34,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryStoreRequest",
            "line": 42,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemorySearchRequest",
            "line": 50,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaCreateRequest",
            "line": 58,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMCompletionRequest",
            "line": 70,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DocumentAnalysisRequest",
            "line": 80,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ResearchRequest",
            "line": 90,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/models/responses.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "BaseResponse",
            "line": 13,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ConversationResponse",
            "line": 20,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowExecutionResponse",
            "line": 28,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "AgentResponse",
            "line": 37,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "AgentListResponse",
            "line": 45,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "MemoryResponse",
            "line": 51,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "PersonaResponse",
            "line": 59,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "PersonaListResponse",
            "line": 66,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "LLMCompletionResponse",
            "line": 72,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "DocumentAnalysisResponse",
            "line": 81,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "ResearchResponse",
            "line": 90,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "HealthCheckResponse",
            "line": 99,
            "bases": [
              "BaseResponse"
            ],
            "decorators": []
          },
          {
            "name": "ErrorResponse",
            "line": 106,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/models/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/endpoints/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/endpoints/conversation.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.api.models.requests",
            "item": "ConversationRequest",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.api.models.responses",
            "item": "ConversationResponse",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentCapability",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentMessage",
            "alias": null,
            "line": 80,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 124,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'post', 'getLogger', 'ConversationResponse', 'APIRouter', 'get_memory_service', 'error', 'AgentMessage', 'get_agent_manager', 'process_message', 'execute_workflow', 'get', 'HTTPException', 'get_workflow_engine', 'len', 'find_agents_by_capability', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/middleware/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/api/middleware/error_handler.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Response",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "starlette.middleware.base",
            "item": "BaseHTTPMiddleware",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "ValidationError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.api.models.responses",
            "item": "ErrorResponse",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "handle_api_error",
            "line": 105,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ErrorHandlerMiddleware",
            "line": 20,
            "bases": [
              "BaseHTTPMiddleware"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'getLogger', 'dict', 'call_next', 'errors', 'warning', 'join', 'append', 'format_exc', 'get', 'JSONResponse', 'ErrorResponse', 'type'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/examples/llm_client.py": {
      "imports": {
        "standard": [
          {
            "module": "argparse",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'error', 'post', 'direct_completion', 'add_argument', 'run', 'AsyncClient', 'get', 'items', 'llm_interact', 'ArgumentParser', 'main', 'print', 'parse_args', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/examples/llm_demo.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 15
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "os",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "core.conductor.src.agents.llm_agent",
            "item": "ConversationFormatter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.loader",
            "item": "PersonaManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "get_llm_provider",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'generate_chat_completion', 'demo_conversation_with_persona', 'getLogger', 'PersonaManager', 'enumerate', 'hasattr', 'run', 'demo_direct_completion', 'get_settings', 'create_system_message', 'append', 'basicConfig', 'get', 'get_persona', 'sleep', 'get_llm_provider', 'main', 'print'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "config.os.environ",
            "item": "get_secret",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "config.os.environ",
            "item": "secrets",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Path', 'bool', 'append', 'basicConfig', 'get', 'main', 'print', 'get_secret'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
          "line": 21,
          "module": "config.os.environ",
          "item": "get_secret",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
          "line": 21,
          "module": "config.os.environ",
          "item": "secrets",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/examples/persona_client.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 13
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 77
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 39,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnhancedInteractionRequest",
            "line": 20,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaClient",
            "line": 29,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'uuid4', 'run', 'PersonaClient', 'ClientSession', 'dict', 'list_personas', 'get', 'print', 'run_example', 'basicConfig', 'len', 'text', 'json', 'send_message', 'Exception', 'info', 'EnhancedInteractionRequest', 'items', 'start_conversation'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/main_simple.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 70
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'post', 'getLogger', 'FastAPI', 'error', 'add_middleware', 'run', 'basicConfig', 'get', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/main.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 230
          }
        ],
        "from": [
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "setup_logging",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "register_default_agents",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "close_memory_manager",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "close_memory_service",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "initialize_memory_manager",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.endpoints",
            "item": "health",
            "alias": null,
            "line": 34,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.endpoints",
            "item": "auth",
            "alias": null,
            "line": 34,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "get_settings",
            "alias": null,
            "line": 39,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "load_persona_configs",
            "alias": null,
            "line": 39,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_registry",
            "item": "get_service_registry",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_registry",
            "item": "register",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "HEX_ARCH_AVAILABLE",
            "alias": null,
            "line": 69,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.endpoints",
            "item": "conversations",
            "alias": null,
            "line": 78,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "initialize_llm_providers",
            "alias": null,
            "line": 176,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.llm_agent",
            "item": "LLMAgent",
            "alias": null,
            "line": 186,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "initialize_services",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'get_simplified_agent_registry', 'close_memory_service', 'run', 'load_persona_configs', 'get_event_bus', 'register_default_agents', 'register', 'close_all', 'setup_logging', 'initialize_llm_providers', 'get', 'print', 'get_service_registry', 'int', 'LLMAgent', 'FastAPI', 'add_middleware', 'get_settings', 'initialize_all', 'initialize_services', 'len', 'error', 'warning', 'lower', 'include_router', 'getattr', 'info', 'get_logger'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/exceptions.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 45,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 62,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "conductorError",
            "line": 10,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "ConfigurationError",
            "line": 18,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "DependencyError",
            "line": 21,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryError",
            "line": 24,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConnectionError",
            "line": 27,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryOperationError",
            "line": 30,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "MemoryItemNotFoundError",
            "line": 33,
            "bases": [
              "MemoryError"
            ],
            "decorators": []
          },
          {
            "name": "AgentError",
            "line": 36,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "AgentNotFoundError",
            "line": 39,
            "bases": [
              "AgentError"
            ],
            "decorators": []
          },
          {
            "name": "AgentExecutionError",
            "line": 42,
            "bases": [
              "AgentError"
            ],
            "decorators": []
          },
          {
            "name": "ResilienceError",
            "line": 56,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreakerOpenError",
            "line": 59,
            "bases": [
              "ResilienceError"
            ],
            "decorators": []
          },
          {
            "name": "FallbackError",
            "line": 73,
            "bases": [
              "ResilienceError"
            ],
            "decorators": []
          },
          {
            "name": "LLMError",
            "line": 76,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderError",
            "line": 79,
            "bases": [
              "LLMError"
            ],
            "decorators": []
          },
          {
            "name": "LLMRateLimitError",
            "line": 82,
            "bases": [
              "LLMError"
            ],
            "decorators": []
          },
          {
            "name": "APIError",
            "line": 85,
            "bases": [
              "conductorError"
            ],
            "decorators": []
          },
          {
            "name": "ValidationError",
            "line": 88,
            "bases": [
              "APIError"
            ],
            "decorators": []
          },
          {
            "name": "ServiceUnavailableError",
            "line": 91,
            "bases": [
              "APIError"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 8
          },
          {
            "module": "aioredis",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.models",
            "item": "MemoryEntry",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.models",
            "item": "MemorySearchResult",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.models",
            "item": "MemoryType",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "aiplatform",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "mongodb",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_store_in_mongodb",
            "line": 319,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_retrieve_from_mongodb",
            "line": 331,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_search_in_mongodb",
            "line": 354,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_delete_from_mongodb",
            "line": 416,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_matches_metadata_filter",
            "line": 509,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_text_relevance",
            "line": 516,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LayeredMemoryManager",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'smembers', '_retrieve_from_mongodb', 'find_neighbors', 'enumerate', 'where', 'timestamp', 'sadd', '_search_in_redis', 'ValueError', '_delete_from_mongodb', 'stream', 'model_dump', 'MemoryEntry', 'Client', 'close', '_search_in_mongodb', 'append', 'get', 'MatchingEngineIndexEndpoint', 'delete', '_retrieve_from_redis', 'MemorySearchResult', 'document', 'extend', 'sort', 'str', 'from_url', '_calculate_text_relevance', '_matches_metadata_filter', 'split', 'to_dict', 'get_settings', 'isoformat', 'union', 'intersection', 'len', 'model_dump_json', 'model_validate_json', 'srem', '_delete_from_vector_search', '_store_in_redis', 'lower', 'set', 'exists', 'utcnow', 'limit', 'info', '_delete_from_redis', 'items', '_search_in_vector_search', '_store_in_mongodb', 'collection'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
          "line": 15,
          "module": "core.conductor.src.memory.models",
          "item": "MemoryEntry",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
          "line": 15,
          "module": "core.conductor.src.memory.models",
          "item": "MemorySearchResult",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
          "line": 15,
          "module": "core.conductor.src.memory.models",
          "item": "MemoryType",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "functools",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 100
          },
          {
            "module": "redis",
            "alias": null,
            "line": 142
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Protocol",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pymongo",
            "item": "MongoClient",
            "alias": null,
            "line": 70,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "log_and_handle_errors",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "async_log_and_handle_errors",
            "line": 29,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2831f110>"
            ]
          },
          {
            "name": "get",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "get_adapter",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 69,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "set",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "delete",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "search",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "__init__",
            "line": 99,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 141,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "set",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "delete",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "search",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "log_and_handle_errors"
            ]
          },
          {
            "name": "__init__",
            "line": 173,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set",
            "line": 183,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 186,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryAdapter",
            "line": 41,
            "bases": [
              "Protocol"
            ],
            "decorators": []
          },
          {
            "name": "AsyncMemoryAdapter",
            "line": 47,
            "bases": [
              "Protocol"
            ],
            "decorators": []
          },
          {
            "name": "MemoryAdapterRegistry",
            "line": 54,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MongoDBMemoryAdapter",
            "line": 66,
            "bases": [],
            "decorators": []
          },
          {
            "name": "WeaviateMemoryAdapter",
            "line": 96,
            "bases": [],
            "decorators": []
          },
          {
            "name": "DragonflyMemoryAdapter",
            "line": 138,
            "bases": [],
            "decorators": []
          },
          {
            "name": "UnifiedMemoryManager",
            "line": 167,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'delete_one', 'AuthApiKey', 'ValueError', 'create', 'register', 'find', 'Client', 'adapter_cls', 'run_in_executor', 'get', 'keys', 'delete', 'get_event_loop', 'func', 'from_url', 'find_one', 'iscoroutinefunction', 'with_limit', 'wraps', 'update_one', 'with_near_text', 'error', 'MongoClient', 'hasattr', 'set', 'limit', 'get_adapter', 'get_by_id', 'items', 'do', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
          "line": 70,
          "module": "pymongo",
          "item": "MongoClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/memory/integration.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.models",
            "item": "ConversationMemoryItem",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.models",
            "item": "MemoryItem",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.models",
            "item": "MemoryType",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.unified_agent_registry",
            "item": "AgentContext",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.unified_agent_registry",
            "item": "AgentRegistry",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.layered_memory",
            "item": "LayeredMemoryManager",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 147,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_context",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryEnhancedAgentContext",
            "line": 16,
            "bases": [
              "AgentContext"
            ],
            "decorators": []
          },
          {
            "name": "MemoryAwareAgentRegistry",
            "line": 139,
            "bases": [
              "AgentRegistry"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'getLogger', 'remember', 'recall_conversation', 'MemoryAwareAgentRegistry', 'isinstance', 'initialize_async', 'select_agent_for_context', 'append', 'LayeredMemoryManager', 'get', 'store', 'print', 'sort', 'create_context', 'process', 'len', '__init__', 'super', 'MemoryEnhancedAgentContext', 'initialize', 'warning', 'ConversationMemoryItem', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
          "line": 11,
          "module": "core.conductor.src.agents.unified_agent_registry",
          "item": "AgentContext",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
          "line": 11,
          "module": "core.conductor.src.agents.unified_agent_registry",
          "item": "AgentRegistry",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/memory/layered_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "time",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.interface",
            "item": "MemoryInterface",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LayeredMemory",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'perf_counter', 'update', 'index', 'append', 'exception', 'keys', 'get', 'delete', 'callable', 'add', 'clear_all', 'clear', 'store', 'retrieve', 'int', 'str', 'ttl', 'copy', 'len', 'promote', 'error', 'warning', 'hasattr', 'getattr', 'get_stats', 'exists', 'time', 'info', 'items', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/interface.py": {
      "imports": {
        "standard": [
          {
            "module": "abc",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "MemoryInterface",
            "line": 10,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'update', 'delete', 'items', 'store', 'retrieve'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/factory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "MemoryConfig",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.backends.mongodb_memory",
            "item": "MongoDBMemory",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.backends.redis_memory",
            "item": "RedisMemory",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.backends.vertex_memory",
            "item": "VertexMemory",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.layered_memory_manager",
            "item": "LayeredMemoryManager",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_memory_from_config",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_memory_from_memory_config",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_redis_memory",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_mongodb_memory",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_vertex_memory",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_layered_memory",
            "line": 139,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryFactory",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'VertexMemory', 'getLogger', 'from_config', 'MongoDBMemory', 'from_memory_config', 'get', 'RedisMemory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
          "line": 11,
          "module": "core.conductor.src.memory.backends.mongodb_memory",
          "item": "MongoDBMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
          "line": 13,
          "module": "core.conductor.src.memory.backends.vertex_memory",
          "item": "VertexMemory",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py": {
      "imports": {
        "standard": [
          {
            "module": "functools",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "ValidationError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "ConfigurationError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.utils.error_handling",
            "item": "error_boundary",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 226,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_app_config_loader",
            "line": 219,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e6e1a50>"
            ]
          },
          {
            "name": "get_app_config",
            "line": 245,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_module_config",
            "line": 255,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 36,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_config",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7f367490>"
            ]
          },
          {
            "name": "_load_from_file",
            "line": 115,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_from_env_vars",
            "line": 144,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_default_config_file",
            "line": 180,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_config",
            "line": 206,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConfigLoader",
            "line": 26,
            "bases": [
              null
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'safe_load', 'getLogger', 'debug', 'load_config', 'getcwd', 'float', 'update', 'ConfigLoader', 'get_app_config_loader', 'join', 'dirname', 'replace', 'load', 'splitext', 'get', 'config_class', '_create_default_config_file', 'error_boundary', 'str', 'int', 'TypeVar', '_load_from_env_vars', 'copy', 'upper', 'makedirs', 'dump', 'error', 'get_config', 'abspath', 'lower', 'hasattr', 'open', 'warning', 'exists', 'info', 'items', 'lru_cache', 'ConfigurationError', '_load_from_file'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "functools",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 371
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "LLMProviderError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "MemoryConnectionError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "conductorError",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.monitoring",
            "item": "get_monitoring_client",
            "alias": null,
            "line": 66,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "log_error",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "handle_error",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "error_boundary",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retry",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "convert_exceptions",
            "line": 391,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 165,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 408,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "sync_wrapper",
            "line": 205,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b28841b90>"
            ]
          },
          {
            "name": "sync_wrapper",
            "line": 332,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b7e5e3990>"
            ]
          },
          {
            "name": "sync_wrapper",
            "line": 456,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b289d8650>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'log', 'get_monitoring_client', 'sleep', 'isinstance', 'log_error', 'update', 'join', 'context_provider', 'range', 'now', 'str', 'RuntimeError', 'func', 'TypeVar', 'iscoroutinefunction', 'target_type', 'issubclass', 'isoformat', 'any', 'wraps', 'cast', 'type', 'warning', 'handle_error', 'info', 'report_error', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/core/agents.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.memory",
            "item": "MemoryItem",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.personas",
            "item": "PersonaConfig",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_registry",
            "line": 244,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "agent_type",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "capabilities",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "agent_type",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "capabilities",
            "line": 103,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "agent_type",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "capabilities",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 160,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_agent_type",
            "line": 165,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_types",
            "line": 203,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "select_agent_for_context",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentContext",
            "line": 20,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AgentResponse",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Agent",
            "line": 49,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "SimpleTextAgent",
            "line": 89,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "PersonaAwareAgent",
            "line": 118,
            "bases": [
              "SimpleTextAgent"
            ],
            "decorators": []
          },
          {
            "name": "AgentRegistry",
            "line": 152,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'register_agent_type', 'RuntimeError', 'getLogger', 'join', 'list', 'next', 'get_agent', 'keys', 'info', 'agent_class', 'iter', 'field', 'AgentResponse', 'KeyError', 'super', 'AgentRegistry'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/core/conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.agents",
            "item": "Agent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.agents",
            "item": "AgentContext",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.agents",
            "item": "get_agent_registry",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.memory",
            "item": "MemoryManager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.personas",
            "item": "PersonaManager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.personas",
            "item": "get_persona_manager",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_conductor",
            "line": 337,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 64,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "subscribe",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unsubscribe",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "publish",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 115,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "subscribe",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unsubscribe",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_select_agent_for_context",
            "line": 321,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InteractionResult",
            "line": 20,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EventEmitter",
            "line": 56,
            "bases": [],
            "decorators": []
          },
          {
            "name": "conductor",
            "line": 107,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'conductor', 'format_response', 'get_persona_manager', 'get_memory_manager', 'update', 'get_agent_registry', 'select_agent_for_context', 'append', 'publish', 'InteractionResult', 'add_memory', 'str', '_select_agent_for_context', 'EventEmitter', 'get_conversation_history', 'process', 'unsubscribe', 'handler', 'error', 'utcnow', 'subscribe', 'info', 'get_persona', 'AgentContext'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/core/main.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 180
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.agents",
            "item": "get_agent_registry",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.conductor",
            "item": "get_conductor",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.personas",
            "item": "get_persona_manager",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_app",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InteractionRequest",
            "line": 29,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "InteractionResponse",
            "line": 38,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaInfo",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaListResponse",
            "line": 57,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'PersonaInfo', 'Field', 'create_app', 'get_persona_manager', 'run', 'get_memory_manager', 'get_agent_registry', 'get_conductor', 'get', 'str', 'process_interaction', 'FastAPI', 'get_all_personas', 'add_middleware', 'isoformat', 'PersonaListResponse', 'basicConfig', 'error', 'HTTPException', 'items', 'InteractionResponse'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/core/memory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_memory_manager",
            "line": 234,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_item",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "get_item",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "get_items",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 81,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_item",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_item",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_items",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 130,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_memory",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_conversation_history",
            "line": 189,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memories_by_type",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryItem",
            "line": 19,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryProvider",
            "line": 30,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "InMemoryProvider",
            "line": 78,
            "bases": [
              "MemoryProvider"
            ],
            "decorators": []
          },
          {
            "name": "MemoryManager",
            "line": 122,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'add_item', 'str', 'getLogger', 'get_item', 'uuid4', 'values', 'append', 'get', 'get_items', 'info', 'len', 'field', 'MemoryManager', 'InMemoryProvider', 'sort'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/core/personas.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 293,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_persona_manager",
            "line": 278,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 43,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "format_response",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 86,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_personas",
            "line": 98,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_default_persona",
            "line": 151,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_persona",
            "line": 163,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_personas",
            "line": 192,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 209,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_persona",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_processor",
            "line": 232,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_response",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_personas",
            "line": 266,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaConfig",
            "line": 19,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PersonaProcessor",
            "line": 35,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PersonaLoader",
            "line": 78,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PersonaManager",
            "line": 201,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_create_default_persona', 'getLogger', 'safe_load', 'debug', 'format_response', 'PersonaProcessor', 'isinstance', 'load_persona', 'dict', 'PersonaConfig', 'replace', 'get', 'get_processor', 'PersonaManager', 'get_all_personas', 'get_settings', 'len', '_load_personas', 'error', 'PersonaLoader', 'warning', 'lower', 'open', 'exists', 'info', 'get_persona', 'items', 'field', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/app.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 127
          }
        ],
        "from": [
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "load_persona_configs",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "initialize_memory_manager",
            "alias": null,
            "line": 48,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.cache",
            "item": "initialize_redis_cache",
            "alias": null,
            "line": 57,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.cache",
            "item": "close_redis_cache",
            "alias": null,
            "line": 77,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "close_memory_manager",
            "alias": null,
            "line": 86,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "endpoints",
            "item": "auth",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "endpoints",
            "item": "health",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "endpoints",
            "item": "stubs",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "middleware.persona_middleware",
            "item": "PersonaMiddleware",
            "alias": null,
            "line": 116,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'getLogger', 'run', 'load_persona_configs', 'initialize_memory_manager', 'get', 'int', 'FastAPI', 'split', 'add_middleware', 'initialize_redis_cache', 'get_settings', 'basicConfig', 'getenv', 'len', 'close_redis_cache', 'close_memory_manager', 'error', 'include_router', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "random",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_specialized_agent",
            "line": 387,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_base_response",
            "line": 155,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_apply_interaction_style",
            "line": 189,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_apply_trait_template",
            "line": 204,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_formal_style",
            "line": 234,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_casual_style",
            "line": 239,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_friendly_style",
            "line": 243,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_technical_style",
            "line": 247,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_concise_style",
            "line": 251,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_elaborate_style",
            "line": 256,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_empathetic_style",
            "line": 260,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_witty_style",
            "line": 264,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_professional_style",
            "line": 268,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 281,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 339,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_domain_relevance",
            "line": 358,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaAwareAgent",
            "line": 17,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "DomainSpecificAgent",
            "line": 272,
            "bases": [
              "PersonaAwareAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_generate_base_response', '_apply_trait_template', 'ValueError', 'min', 'DomainSpecificAgent', 'replace', 'get', '_apply_interaction_style', 'choice', 'max', 'split', 'PersonaAwareAgent', 'process', 'len', 'AgentResponse', 'sum', '__init__', 'super', 'random', 'lower', '_calculate_domain_relevance', 'info', 'can_handle', 'style_func', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/message_handler_mixin.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.message_queue",
            "item": "AgentMessage",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.message_queue",
            "item": "get_message_queue",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_message_handler",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MessageHandlerMixin",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'handler', '_process_messages', 'error', 'getLogger', 'warning', 'getattr', 'append', 'create_task', 'handle_message', 'get', 'get_message_queue', 'id', 'cancel', 'sleep', '__init__', 'super', 'receive_message'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.llm_agent",
            "item": "LLMAgent",
            "alias": null,
            "line": 233,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.persona_agent",
            "item": "PersonaAwareAgent",
            "alias": null,
            "line": 234,
            "level": 0
          },
          {
            "module": "packages.agents.src.phidata_agent",
            "item": "PhidataAgentWrapper",
            "alias": null,
            "line": 264,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_simplified_agent_registry",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_default_agents",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 39,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_agent",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_agent_type",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_default_agent_type",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "select_agent_for_context",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_status",
            "line": 195,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentCapability",
            "line": 17,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "SimplifiedAgentRegistry",
            "line": 30,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_simplified_agent_registry', 'getLogger', 'list', 'PhidataAgentWrapper', 'get', 'keys', 'set_default_agent_type', 'LLMAgent', 'RuntimeError', 'PersonaAwareAgent', 'register_agent', 'any', 'len', 'KeyError', 'register_agent_type', 'SimplifiedAgentRegistry', 'warning', 'lower', 'hasattr', 'get_agent', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderAuthenticationError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderConnectionError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderInvalidRequestError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderModelError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderRateLimitError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderResourceExhaustedError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderServiceError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderTimeoutError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "get_llm_provider",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_registry",
            "item": "Service",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 28,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "format_conversation_history",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "create_system_message",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 96,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "agent_type",
            "line": 142,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "capabilities",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "can_handle",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_llm_parameters",
            "line": 187,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_provider_instance",
            "line": 306,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_model_for_provider",
            "line": 310,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConversationFormatter",
            "line": 33,
            "bases": [],
            "decorators": []
          },
          {
            "name": "LLMAgent",
            "line": 87,
            "bases": [
              "Agent",
              "Service"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'LLMProviderError', 'min', '_get_model_for_provider', 'isinstance', 'float', 'generate_chat_completion', 'join', 'append', 'get', '_get_provider_instance', 'get_llm_provider', 'wait_for', '_extract_llm_parameters', 'int', 'str', 'split', 'any', 'len', 'AgentResponse', 'error', 'initialize', 'warning', 'lower', 'format_conversation', 'generate_completion', 'info', '_get_response_with_fallbacks', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/messaging_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.message_handler_mixin",
            "item": "MessageHandlerMixin",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.protocols.agent_protocol",
            "item": "AgentQuery",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.protocols.agent_protocol",
            "item": "AgentResponse",
            "alias": "ProtocolResponse",
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.protocols.agent_protocol",
            "item": "MessageType",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.protocols.agent_protocol",
            "item": "create_protocol_message",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.message_queue",
            "item": "AgentMessage",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.message_queue",
            "item": "get_message_queue",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 178,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MessagingAgent",
            "line": 24,
            "bases": [
              "Agent",
              "MessageHandlerMixin"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'create_protocol_message', 'id', 'AgentQuery', 'start_message_processing', 'dict', 'stop_message_processing', 'get', 'get_message_queue', 'register_message_handler', 'query_agent', 'AgentMessage', 'request_response', 'ProtocolResponse', 'AgentResponse', '__init__', 'error', 'send_message', 'lower', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.llm_agent",
            "item": "ConversationFormatter",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.llm_agent",
            "item": "LLMAgent",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.persona_agent",
            "item": "PersonaAwareAgent",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "SimplifiedAgentRegistry",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.layered_memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "update",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "increment_step",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_memory_key",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_context_variable",
            "line": 74,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_tool_result",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 107,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_state",
            "line": 118,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_cleanup_old_states",
            "line": 306,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentState",
            "line": 21,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StatefulAgent",
            "line": 99,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "ConversationalAgent",
            "line": 331,
            "bases": [
              "StatefulAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'uuid4', 'remember', 'process_with_state', 'recall_conversation', 'get_state', 'get_memory_manager', '_cleanup_old_states', 'update', 'dict', 'total_seconds', 'append', 'get', 'sort', 'str', 'add_memory_key', 'get_conversation_history', 'isoformat', 'recall_relevant', 'process', 'AgentState', 'len', 'AgentResponse', '__init__', 'super', 'hasattr', 'remember_conversation', 'utcnow', 'setattr', 'items', 'increment_step'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 11
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.layered_memory",
            "item": "LayeredMemory",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_record_metrics",
            "line": 244,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 291,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_observable_agent",
            "line": 300,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ObservableAgent",
            "line": 21,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "ObservableAgentFactory",
            "line": 283,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'uuid4', 'format_exc', 'ObservableAgent', 'isinstance', '_record_metrics', 'update', 'initialize_async', 'close_async', 'callable', 'store', 'str', 'int', 'dumps', 'process', 'len', 'upper', 'AgentResponse', '__init__', 'super', 'type', 'error', 'warning', 'hasattr', 'getattr', 'time', 'info', 'setLevel', 'can_handle', 'create_layered_memory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_styling_strategy",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 13,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "apply_style",
            "line": 27,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "apply_style",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InteractionStylingStrategy",
            "line": 7,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "FormalStyling",
            "line": 24,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "CasualStyling",
            "line": 30,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "FriendlyStyling",
            "line": 36,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "TechnicalStyling",
            "line": 42,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "ConciseStyling",
            "line": 48,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "ElaborateStyling",
            "line": 55,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "EmpatheticStyling",
            "line": 61,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "WittyStyling",
            "line": 67,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          },
          {
            "name": "ProfessionalStyling",
            "line": 73,
            "bases": [
              "InteractionStylingStrategy"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'EmpatheticStyling', 'TechnicalStyling', 'ElaborateStyling', 'FriendlyStyling', 'ProfessionalStyling', 'lower', 'replace', 'ConciseStyling', 'split', 'get', 'WittyStyling', 'FormalStyling', 'CasualStyling'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_agent",
            "line": 260,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "recent_messages",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 91,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 132,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "initialize",
            "line": 175,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 183,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentContext",
            "line": 18,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AgentResponse",
            "line": 83,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Agent",
            "line": 124,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "SimpleTextAgent",
            "line": 191,
            "bases": [
              "Agent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'join', 'max', 'ValueError', 'append', 'isoformat', 'utcnow', 'min', 'SimpleTextAgent', 'get', 'AgentResponse'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "random",
            "alias": null,
            "line": 9
          },
          {
            "module": "threading",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 594
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "AgentExecutionError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "CircuitBreakerOpenError",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.tasks",
            "item": "get_task_queue_manager",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.utils.error_handling",
            "item": "log_error",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_circuit_breaker",
            "line": 581,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "set_metrics_client",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_agent_lock",
            "line": 89,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_initialize_agent_state",
            "line": 104,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute",
            "line": 118,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_record_failure",
            "line": 438,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_trip_circuit",
            "line": 462,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_increase_retry_timeout",
            "line": 486,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_report_metric",
            "line": 513,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_status",
            "line": 528,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "force_reset",
            "line": 559,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitState",
            "line": 25,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreaker",
            "line": 32,
            "bases": [
              null
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'_get_agent_lock', 'getLogger', 'debug', 'uniform', 'min', '_increase_retry_timeout', 'AgentExecutionError', 'log_error', 'CircuitBreakerOpenError', 'get', 'fallback_operation', 'schedule_retry', 'now', 'report_metric', 'int', 'str', 'TypeVar', 'isoformat', 'timedelta', 'CircuitBreaker', '_report_metric', '_initialize_agent_state', 'type', 'error', 'warning', 'info', '_trip_circuit', 'operation', '_record_failure', 'RLock', 'get_task_queue_manager'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "threading",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 219
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "opentelemetry",
            "item": "trace",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "opentelemetry.exporter.cloud_trace",
            "item": "CloudTraceSpanExporter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "opentelemetry.sdk.resources",
            "item": "Resource",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "opentelemetry.sdk.trace.export",
            "item": "BatchSpanProcessor",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "cloud_logging",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "monitoring_v3",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 221,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_monitoring_client",
            "line": 207,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_tracing",
            "line": 55,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "report_metric",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_metric_descriptor_exists",
            "line": 127,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_metric_descriptor",
            "line": 149,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_incident_report",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PrometheusClient",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'add_span_processor', 'isinstance', 'create_time_series', 'get_metric_descriptor', 'Client', 'append', '_setup_tracing', 'get_tracer_provider', 'CloudTraceSpanExporter', 'logger', 'get', 'MetricServiceClient', 'now', 'log_struct', 'int', 'str', 'BatchSpanProcessor', 'get_tracer', 'PrometheusClient', 'get_settings', 'isoformat', '_create_metric_descriptor', 'MetricDescriptor', '_metric_descriptor_exists', 'error', 'getattr', 'create_metric_descriptor', 'time', 'info', 'Point', 'items', 'RLock', 'TimeSeries', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py",
          "line": 15,
          "module": "opentelemetry.exporter.cloud_trace",
          "item": "CloudTraceSpanExporter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 232
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "cloud_logging",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 234,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_incident_reporter",
            "line": 221,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "report_incident",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "report_circuit_trip",
            "line": 97,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "report_fallback_activation",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "report_recovery",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_fallback_logging",
            "line": 197,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IncidentReporter",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'log', 'getLogger', 'uuid4', '_fallback_logging', 'report_incident', 'Client', 'bool', 'get', 'logger', 'now', 'log_struct', 'str', 'dumps', 'get_settings', 'isoformat', 'len', 'error', 'IncidentReporter', 'warning', 'getattr', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/resilience/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.resilience.circuit_breaker",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.circuit_breaker",
            "item": "get_circuit_breaker",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.incident_reporter",
            "item": "IncidentReporter",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.incident_reporter",
            "item": "get_incident_reporter",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.monitoring",
            "item": "PrometheusClient",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.monitoring",
            "item": "get_monitoring_client",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.tasks",
            "item": "TaskQueueManager",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.tasks",
            "item": "VertexAiFallbackHandler",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.tasks",
            "item": "get_fallback_handler",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.tasks",
            "item": "get_task_queue_manager",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "threading",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 302
          },
          {
            "module": "os",
            "alias": null,
            "line": 360
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "google.protobuf",
            "item": "timestamp_pb2",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "tasks_v2",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "agent.core.vertex_operations",
            "item": "VertexAgent",
            "alias": null,
            "line": 221,
            "level": 0
          },
          {
            "module": "core.conductor.src.resilience.monitoring",
            "item": "get_monitoring_client",
            "alias": null,
            "line": 257,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 304,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 362,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_task_queue_manager",
            "line": 290,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_fallback_handler",
            "line": 348,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "schedule_retry",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cancel_retry_tasks",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 196,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "client",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          }
        ],
        "classes": [
          {
            "name": "TaskQueueManager",
            "line": 23,
            "bases": [],
            "decorators": []
          },
          {
            "name": "VertexAiFallbackHandler",
            "line": 188,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'create_task', 'delete_task', 'min', 'get_monitoring_client', 'VertexAiFallbackHandler', 'queue_path', 'loads', 'Lock', 'create_incident_report', 'encode', 'get', 'Timestamp', 'str', 'RuntimeError', 'dumps', 'get_settings', 'isoformat', 'decode', 'process', 'timedelta', 'len', 'VertexAgent', 'error', 'warning', 'hasattr', 'getattr', 'utcnow', 'info', 'TaskQueueManager', 'list_tasks', 'FromDatetime', 'CloudTasksClient'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
          "line": 221,
          "module": "agent.core.vertex_operations",
          "item": "VertexAgent",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/personas/loader.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaTraits",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 65,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_persona",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_personas",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_default_persona_id",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reload_personas",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_personas",
            "line": 170,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaManager",
            "line": 56,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'debug', 'PersonaTraits', 'dict', 'PersonaConfig', 'next', 'get', 'resolve', 'len', 'KeyError', '_load_personas', 'error', 'warning', 'lower', 'open', 'exists', 'time', 'info', 'items', 'iter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 301
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 317
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.loader",
            "item": "PersonaManager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 315,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_enhanced_persona_manager",
            "line": 399,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_validate_template",
            "line": 36,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 83,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "format_response",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 153,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_enhanced_persona",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_response",
            "line": 241,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_preferred_agent_type",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_enhanced_personas",
            "line": 269,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reload_personas",
            "line": 283,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_should_reload",
            "line": 294,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_load_enhanced_personas",
            "line": 305,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaTemplate",
            "line": 17,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedPersonaConfig",
            "line": 75,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedPersonaManager",
            "line": 145,
            "bases": [
              "PersonaManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'debug', 'format_response', 'ValueError', 'isinstance', 'reload_personas', 'get_enhanced_persona', 'dict', 'replace', 'get', 'keys', 'PersonaTemplate', 'format', 'sorted', 'get_settings', 'resolve', '_should_reload', 'len', '__init__', '_validate_template', 'super', 'error', 'warning', 'lower', 'open', 'exists', 'time', 'info', 'get_persona', 'items', 'EnhancedPersonaConfig', '_load_enhanced_personas', 'EnhancedPersonaManager'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/personas/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/personas/dependency.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "settings",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.loader",
            "item": "PersonaManager",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_persona_manager",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283d2a50>"
            ]
          },
          {
            "name": "get_persona_by_id",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'PersonaManager', 'warning', 'get_persona_manager', 'info', 'get_persona', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py": {
      "imports": {
        "standard": [
          {
            "module": "time",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "BaseModel",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "Field",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_protocol_message",
            "line": 110,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_protocol_message",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MessageType",
            "line": 19,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentQuery",
            "line": 32,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentResponse",
            "line": 38,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentNotification",
            "line": 45,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentStatus",
            "line": 52,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentError",
            "line": 58,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentTask",
            "line": 65,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentResult",
            "line": 73,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryOperation",
            "line": 81,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowEvent",
            "line": 89,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'AgentError', 'uuid4', 'dict', 'Field', 'type', 'AgentTask', 'ValueError', 'WorkflowEvent', 'time', 'AgentQuery', 'AgentNotification', 'AgentResponse', 'isinstance', 'AgentStatus', 'AgentResult', 'MemoryOperation'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "BaseModel",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "Field",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_workflow_engine",
            "line": 461,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 71,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_workflow",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_condition",
            "line": 96,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_action",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_instance",
            "line": 391,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow",
            "line": 403,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WorkflowState",
            "line": 26,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowTransition",
            "line": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowDefinition",
            "line": 44,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowInstance",
            "line": 55,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowEngine",
            "line": 68,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'WorkflowInstance', 'list', 'uuid4', 'ValueError', 'create_task', 'get_event_bus', '_transition_state', 'sleep', 'update', 'WorkflowEngine', '_process_workflows', 'append', 'action_func', 'get', 'add', 'publish_async', 'str', '_process_instance', 'condition_func', 'discard', 'error', 'warning', 'set', 'time', 'info', 'cancel'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/workflows/example_workflows.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.workflows.state_machine",
            "item": "WorkflowDefinition",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.workflows.state_machine",
            "item": "WorkflowState",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.workflows.state_machine",
            "item": "WorkflowTransition",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.workflows.state_machine",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "has_query_result",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_error",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_approved",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_query_workflow",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_multi_agent_workflow",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'update', 'WorkflowTransition', 'getLogger', 'WorkflowDefinition', 'format_response', 'create_query_workflow', 'register_condition', 'register_action', 'get', 'info', 'get_workflow_engine', 'generate_response', 'register_workflow', 'create_multi_agent_workflow'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "langchain.callbacks.manager",
            "item": "CallbackManagerForLLMRun",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "langchain.chat_models.base",
            "item": "BaseChatModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "langchain.llms.base",
            "item": "BaseLLM",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "BaseMessage",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "ChatGeneration",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "ChatMessage",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "LLMResult",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LiteLLMClient",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.llm.litellm_client",
            "item": "LLMMessage",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_llm_type",
            "line": 30,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_call",
            "line": 44,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_llm_type",
            "line": 83,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 86,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate",
            "line": 97,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LiteLLMLangChainLLM",
            "line": 20,
            "bases": [
              "BaseLLM"
            ],
            "decorators": []
          },
          {
            "name": "LiteLLMLangChainChat",
            "line": 73,
            "bases": [
              "BaseChatModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'run_until_complete', 'text_completion', 'ChatGeneration', '_achat', 'ChatMessage', 'get_event_loop', 'LLMResult', '__init__', 'LLMMessage', 'super', 'chat_completion'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 13,
          "module": "langchain.callbacks.manager",
          "item": "CallbackManagerForLLMRun",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 14,
          "module": "langchain.chat_models.base",
          "item": "BaseChatModel",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 15,
          "module": "langchain.llms.base",
          "item": "BaseLLM",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 16,
          "module": "langchain.schema",
          "item": "BaseMessage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 16,
          "module": "langchain.schema",
          "item": "ChatGeneration",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 16,
          "module": "langchain.schema",
          "item": "ChatMessage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
          "line": 16,
          "module": "langchain.schema",
          "item": "LLMResult",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "litellm",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.utils.error_handling",
            "item": "retry",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 71,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_configure_litellm",
            "line": 109,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_models",
            "line": 310,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_token_limit",
            "line": 344,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ModelProvider",
            "line": 19,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ModelType",
            "line": 28,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "LLMMessage",
            "line": 35,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMResponse",
            "line": 42,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMEmbeddingResponse",
            "line": 51,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LiteLLMClient",
            "line": 59,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'getLogger', 'LLMEmbeddingResponse', 'Field', 'model_dump', 'dict', 'hasattr', 'get_settings', '_configure_litellm', 'retry', 'get', 'aembedding', 'items', 'LLMResponse', 'LLMMessage', 'acompletion', 'chat_completion'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/settings_clean.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "SettingsConfigDict",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_settings",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_openrouter_headers",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 12,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'update', 'error', 'join', 'split', 'replace', 'Settings', 'loads', 'SettingsConfigDict'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "root_validator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_table_name",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2823cf50>"
            ]
          },
          {
            "name": "validate_vector_dimension",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2823c810>"
            ]
          },
          {
            "name": "validate_agent_class",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283a8b10>"
            ]
          },
          {
            "name": "validate_team_members",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "root_validator"
            ]
          },
          {
            "name": "validate_default_llm",
            "line": 165,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2882a650>"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryType",
            "line": 13,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryConfig",
            "line": 22,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ToolConfig",
            "line": 44,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentCapability",
            "line": 51,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentConfig",
            "line": 64,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TeamMode",
            "line": 90,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ControllerConfig",
            "line": 98,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TeamConfig",
            "line": 106,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentRegistry",
            "line": 117,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMProvider",
            "line": 135,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "LLMConfig",
            "line": 145,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMRegistry",
            "line": 158,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'validator', 'Field', 'hasattr', 'set', 'ValueError', 'get', 'keys', 'items', 'startswith', 'isinstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/config.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "SecretStr",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "SettingsConfigDict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.core_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "packages.shared.src.models.core_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 18,
            "level": 4
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_all_persona_configs",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_settings",
            "line": 128,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona_configs",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 26,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'endswith', 'getLogger', 'join', 'safe_load', 'error', 'warning', 'PersonaConfig', 'lower', 'open', 'Settings', 'splitext', 'listdir', 'exists', 'info', 'load_all_persona_configs', 'SettingsConfigDict'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/settings.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "SecretStr",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "BaseSettings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic_settings",
            "item": "SettingsConfigDict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.core_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "packages.shared.src.models.core_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 18,
            "level": 4
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_all_persona_configs",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_settings",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona_configs",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Settings",
            "line": 26,
            "bases": [
              "BaseSettings"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'endswith', 'getLogger', 'join', 'safe_load', 'error', 'warning', 'PersonaConfig', 'lower', 'open', 'Settings', 'splitext', 'listdir', 'exists', 'info', 'load_all_persona_configs', 'SettingsConfigDict'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/loader.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "portkey_ai",
            "alias": "portkey",
            "line": 14
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "settings",
            "item": "Settings",
            "alias": null,
            "line": 19,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "refreshable_cache",
            "line": 31,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_persona_configs",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283ecad0>"
            ]
          },
          {
            "name": "create_default_persona_configs",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "force_reload_personas",
            "line": 223,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_settings",
            "line": 236,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_portkey",
            "line": 247,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b28240f50>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'debug', 'create_default_persona_configs', 'load_persona_configs', 'lru_cache', 'pop', 'PersonaConfig', 'cache_clear', 'append', 'set_limits', 'str', 'TypeVar', 'wraps', 'init', 'getenv', 'refreshable_cache', 'len', 'error', 'warning', 'open', 'Settings', 'time', 'info', 'items', 'cached_func', 'initialize_portkey'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/config/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/tools/executor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "time",
            "alias": null,
            "line": 6
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "registry",
            "item": "ToolRegistry",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_implementation",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_execution_stats",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolExecutor",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'iscoroutinefunction', 'append', 'format_exc', 'run_in_executor', 'get', 'time', 'implementation', 'len', 'get_event_loop', 'get_tool', 'sum'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/tools/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "executor",
            "item": "ToolExecutor",
            "alias": null,
            "line": 5,
            "level": 1
          },
          {
            "module": "registry",
            "item": "ToolDefinition",
            "alias": null,
            "line": 6,
            "level": 1
          },
          {
            "module": "registry",
            "item": "ToolParameter",
            "alias": null,
            "line": 6,
            "level": 1
          },
          {
            "module": "registry",
            "item": "ToolRegistry",
            "alias": null,
            "line": 6,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/tools/registry.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_builtin_tools",
            "line": 39,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_tool",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool",
            "line": 244,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_tools",
            "line": 248,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search_tools",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tools_by_cost",
            "line": 273,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_function_calling_schema",
            "line": 280,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_to_markdown",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolParameter",
            "line": 9,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ToolDefinition",
            "line": 18,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ToolRegistry",
            "line": 32,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'join', 'list', 'title', 'lower', 'ToolDefinition', 'sorted', 'register_tool', 'values', 'append', 'get', 'ToolParameter', '_load_builtin_tools', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/memory_service.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 1
          },
          {
            "module": "logging",
            "alias": null,
            "line": 2
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.stubs",
            "item": "InMemoryMemoryManagerStub",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_memory_service",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_memory_service",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_manager",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "HashRecord",
            "line": 11,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryService",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'sleep', 'get_memory_service', 'dict', 'InMemoryMemoryManagerStub', 'total_seconds', 'get', 'delete', 'store', 'str', 'int', 'ttl', 'scan', 'split', 'timedelta', 'cleanup_hashes', 'error', 'MemoryService', 'warning', 'utcnow', 'info', 'HashRecord'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "overload",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_service_registry",
            "line": 535,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register",
            "line": 548,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 553,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "overload"
            ]
          },
          {
            "name": "get",
            "line": 556,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "overload"
            ]
          },
          {
            "name": "get",
            "line": 558,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "require",
            "line": 562,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_factory",
            "line": 566,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 31,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 67,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_instance",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_singleton",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 120,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register",
            "line": 130,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_factory",
            "line": 164,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service",
            "line": 191,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "overload"
            ]
          },
          {
            "name": "get_service",
            "line": 194,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "overload"
            ]
          },
          {
            "name": "get_service",
            "line": 196,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_required_service",
            "line": 229,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unregister",
            "line": 249,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_service",
            "line": 278,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_all",
            "line": 361,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close_all",
            "line": 465,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_reset_registry",
            "line": 500,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_count",
            "line": 514,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_names",
            "line": 523,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Service",
            "line": 22,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "ServiceFactory",
            "line": 59,
            "bases": [
              null
            ],
            "decorators": []
          },
          {
            "name": "ServiceRegistry",
            "line": 103,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', 'ServiceRegistry', '_reset_registry', 'ValueError', 'get_service', 'create_task', 'id', 'remove', 'register', 'ServiceFactory', 'isinstance', 'get_instance', 'initialize_async', 'close', 'close_async', 'reset', 'append', 'run_in_executor', 'register_factory', 'callable', 'add', 'get_service_registry', 'TypeVar', '_factory_func', 'len', 'cast', 'get_required_service', 'type', '_safe_close_service_async', 'error', 'initialize', 'reversed', 'warning', 'hasattr', 'set', 'values', '_safe_initialize_service_async', 'gather', 'info', 'items', 'get_running_loop'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.pubsub_client",
            "item": "get_pubsub_client",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_event_handler",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_task_handler",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentCommunicationService",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'create_task', 'start_event_listener', 'AgentCommunicationService', 'subscribe_async', 'start_task_listener', 'create_topic', 'get_pubsub_client', 'append', 'get', 'add', 'clear', 'create_subscription', 'str', 'int', 'publish_task_result', 'stop_subscription', 'handler', 'publish_message_async', 'initialize', 'error', 'warning', 'lower', 'set', 'time', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py",
          "line": 15,
          "module": "core.conductor.src.services.pubsub_client",
          "item": "get_pubsub_client",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/services/agent_service.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "packages.agents.base",
            "item": "BaseAgent",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.agents.runtime.web_scraper",
            "item": "WebScraperRuntimeAgent",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_instance",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'warning', 'ValueError', 'WebScraperRuntimeAgent', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.interface",
            "item": "LLMClient",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.services.memory_service",
            "item": "MemoryService",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_format_history_for_llm",
            "line": 152,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InteractionService",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'add_memory_item_async', 'getLogger', 'debug', 'reversed', '_format_history_for_llm', 'get_conversation_history_async', 'append', 'utcnow', 'info', 'generate_response'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
          "line": 13,
          "module": "packages.shared.src.llm_client.interface",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
          "line": 14,
          "module": "packages.shared.src.memory.services.memory_service",
          "item": "MemoryService",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/services/event_bus.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 1,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/unified_event_bus.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.services.events.event_bus",
            "item": "EventBus",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 1,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.services.agent_conductor",
            "item": "Agentconductor",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.agent_conductor",
            "item": "get_agent_conductor",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm",
            "item": "LLMProvider",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm",
            "item": "OpenRouterProvider",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm",
            "item": "get_llm_provider",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm",
            "item": "register_llm_provider",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "MemoryService",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "get_memory_service",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.registry",
            "item": "ServiceRegistry",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.registry",
            "item": "get_service_registry",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.enhanced_agent_conductor",
            "item": "EnhancedAgentconductor",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.enhanced_agent_conductor",
            "item": "get_enhanced_agent_conductor",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'extend'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/enhanced_agent_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.enhanced_persona_manager",
            "item": "get_enhanced_persona_manager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.base_conductor",
            "item": "Baseconductor",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_enhanced_agent_conductor",
            "line": 329,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EnhancedAgentconductor",
            "line": 24,
            "bases": [
              "Baseconductor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'get_simplified_agent_registry', 'getLogger', 'uuid4', '_execute_agent', 'format_response', 'create_task', 'get_enhanced_persona', 'PersonaConfig', 'select_agent_for_context', '_publish_interaction_error', 'wait_for', 'int', 'str', '_add_memory_async', '_retrieve_context', 'process', 'len', 'AgentResponse', '__init__', '_publish_interaction_complete', 'super', 'error', 'critical', 'warning', '_create_agent_context', 'getattr', 'get_agent', 'get_enhanced_persona_manager', 'utcnow', 'time', 'info', 'EnhancedAgentconductor'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "get_memory_manager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "BaseModel",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_conversation_service",
            "line": 352,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283eccd0>"
            ]
          },
          {
            "name": "__init__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_active_conversation",
            "line": 182,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConversationState",
            "line": 29,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ConversationService",
            "line": 44,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'getLogger', 'uuid4', 'ConversationState', 'get_event_bus', 'get_memory_manager', 'total_seconds', 'append', 'get', 'publish_async', 'str', 'ConversationService', 'get_conversation_history', 'isoformat', 'add_memory_item', 'error', 'warning', 'utcnow', 'info', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/message_queue.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "BaseModel",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "Field",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_message_queue",
            "line": 201,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 41,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_handler",
            "line": 121,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unregister_handler",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentMessage",
            "line": 25,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MessageQueue",
            "line": 38,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'uuid4', 'put', 'Queue', 'Future', 'ValueError', 'get_event_bus', 'remove', 'MessageQueue', 'dict', 'append', 'get', 'publish_async', 'unregister_handler', 'wait_for', 'str', 'task_done', 'handler', 'error', 'warning', 'send_message', 'info', 'items', 'set_result', 'register_handler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.dependency",
            "item": "get_persona_manager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.base_conductor",
            "item": "Baseconductor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_conductor",
            "line": 266,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 36,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Agentconductor",
            "line": 25,
            "bases": [
              "Baseconductor"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'get_simplified_agent_registry', 'getLogger', 'uuid4', '_execute_agent', 'get_persona_manager', 'select_agent_for_context', 'Agentconductor', '_publish_interaction_error', 'int', 'str', '_add_memory_async', '_retrieve_context', 'process', 'len', 'AgentResponse', '__init__', '_publish_interaction_complete', 'super', 'error', 'warning', '_create_agent_context', 'get_agent', 'utcnow', 'time', 'get_persona', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "settings",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "get_memory_service",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 38,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 51,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_persona_selected",
            "line": 62,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_agent_context",
            "line": 165,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_publish_interaction_complete",
            "line": 207,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_publish_interaction_error",
            "line": 239,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Baseconductor",
            "line": 25,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'get_simplified_agent_registry', 'getLogger', 'get_memory_service', 'len', 'add_memory_item_async', 'hasattr', 'getattr', 'get_conversation_history_async', 'get_conversation_history', 'run_in_executor', 'subscribe', 'get', 'get_event_bus', 'info', 'AgentContext', 'publish', 'get_running_loop', 'unsubscribe'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.unified_agent_registry",
            "item": "AgentCapability",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.unified_agent_registry",
            "item": "get_agent_registry",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "get_memory_service",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_cosine_similarity",
            "line": 115,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SemanticRouter",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'SemanticRouter', 'supports_capability', 'get_agent_registry', 'get_memory_service', '_cosine_similarity', 'append', 'get_agent_types', 'randn', 'get_agent_info', 'sort', 'dot', 'len', 'initialize', 'warning', 'all', 'array', '_generate_agent_embeddings', 'info', 'norm'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
          "line": 13,
          "module": "core.conductor.src.agents.unified_agent_registry",
          "item": "AgentCapability",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
          "line": 13,
          "module": "core.conductor.src.agents.unified_agent_registry",
          "item": "get_agent_registry",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 12
          },
          {
            "module": "aioredis",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "shared.memory.weaviate_session_cache",
            "item": "cache",
            "alias": "weaviate_cache",
            "line": 17,
            "level": 0
          },
          {
            "module": "core.env_config",
            "item": "settings",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "BaseModel",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic.v1",
            "item": "Field",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 26,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 62,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskDefinition",
            "line": 31,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TaskInstance",
            "line": 45,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DistributedTaskQueue",
            "line": 59,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'DistributedTaskQueue', 'uuid4', 'create_task', 'zpopmax', 'get_event_bus', 'remove', 'sleep', '_worker_loop', 'dict', 'wait_closed', 'close', 'append', 'get', 'keys', 'add', 'zrem', 'publish_async', 'range', 'str', 'parse_raw', 'dumps', 'NotImplementedError', 'handler', 'error', 'initialize', 'warning', 'set', 'gather', 'time', 'info', 'zadd', 'cancel', 'set_json', 'create_redis_pool', 'TaskInstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/registry.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_service_registry",
            "line": 157,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unregister",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_all",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close_all",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_count",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_names",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ServiceRegistry",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'getLogger', 'debug', 'reversed', 'initialize', 'ServiceRegistry', 'TypeVar', 'warning', 'hasattr', 'set', 'close', 'append', 'id', 'info', 'callable', 'add', 'len', 'remove'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_enhanced_service_registry",
            "line": 537,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_service",
            "line": 550,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service",
            "line": 554,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_required_service",
            "line": 558,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_factory",
            "line": 562,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 48,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_instance",
            "line": 58,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 89,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_factory",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_required_service",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unregister",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_service",
            "line": 239,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_all",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close_all",
            "line": 467,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_reset_registry",
            "line": 502,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_count",
            "line": 516,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_names",
            "line": 525,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Service",
            "line": 20,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "ServiceFactory",
            "line": 40,
            "bases": [
              null
            ],
            "decorators": []
          },
          {
            "name": "EnhancedServiceRegistry",
            "line": 77,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', '_reset_registry', 'ValueError', 'get_service', 'create_task', 'id', 'remove', 'register', 'ServiceFactory', 'isinstance', 'get_instance', 'initialize_async', 'close', 'close_async', 'reset', 'append', 'run_in_executor', 'register_factory', '_close_service_async', 'callable', 'add', 'EnhancedServiceRegistry', '_initialize_service_sync', 'TypeVar', '_initialize_service_async', 'get_enhanced_service_registry', '_factory_func', 'len', 'cast', 'get_required_service', 'type', 'error', 'initialize', 'reversed', 'warning', 'hasattr', 'set', 'values', 'gather', 'info', 'items', '_close_service_sync', 'get_running_loop'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 586,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 95,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_openai",
            "line": 111,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_summarize_with_rules",
            "line": 336,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_entities_preserved",
            "line": 480,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_keywords_preserved",
            "line": 508,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SummaryLevel",
            "line": 18,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "SummaryResult",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ProgressiveSummarizerConfig",
            "line": 53,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ProgressiveSummarizer",
            "line": 87,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Field', 'enumerate', 'predict_async', 'ValueError', '_extract_entities_and_keywords', 'from_pretrained', 'min', '_ensure_entities_preserved', '_init_openai', '_summarize_with_rules', 'join', '_summarize_with_openai', 'findall', 'append', 'get', 'sort', 'int', 'ProgressiveSummarizerConfig', 'max', 'split', 'sorted', 'isoformat', 'init', 'len', 'error', 'strip', 'warning', 'lower', 'hasattr', 'SummaryResult', 'utcnow', 'info', 'summarize', 'items', '_ensure_keywords_preserved', 'Endpoint'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/examples.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "core.conductor.src.memory.lifecycle",
            "item": "ChunkingStrategy",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle",
            "item": "ImportanceScorer",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle",
            "item": "ImportanceScoringConfig",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle",
            "item": "MemoryChunker",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle",
            "item": "ProgressiveSummarizer",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 294,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 38,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 38,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'ProgressiveSummarizer', 'getLogger', 'enumerate', 'run', 'progressive_summarizer_example', 'ImportanceScorer', 'memory_chunker_example', 'append', 'run_examples', 'integrated_example', 'MemoryChunker', 'score_item', 'create_progressive_summaries', 'chunk_item', 'basicConfig', 'timedelta', 'len', 'ImportanceScoringConfig', 'importance_scorer_example', 'utcnow', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 114,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "score_item",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_factors",
            "line": 192,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_recency_score",
            "line": 249,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_usage_score",
            "line": 271,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_content_score",
            "line": 290,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_metadata_score",
            "line": 312,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_relationship_score",
            "line": 333,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_semantic_score",
            "line": 346,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ImportanceFactors",
            "line": 17,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ImportanceScore",
            "line": 48,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ImportanceScoringConfig",
            "line": 76,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ImportanceScorer",
            "line": 106,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Field', '_calculate_metadata_score', 'min', 'id', 'fromtimestamp', 'isinstance', 'abs', '_calculate_recency_score', 'total_seconds', 'ImportanceFactors', '_calculate_relationship_score', 'get', 'str', 'max', '_calculate_content_score', 'len', 'ImportanceScoringConfig', 'ImportanceScore', 'warning', '_calculate_semantic_score', '_extract_factors', '_calculate_usage_score', 'utcnow', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 420
          },
          {
            "module": "json",
            "alias": null,
            "line": 436
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 122,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_chunk_by_paragraph",
            "line": 195,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_chunk_by_sentence",
            "line": 267,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_chunk_by_fixed_size",
            "line": 336,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_post_process_chunks",
            "line": 555,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_headings",
            "line": 585,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_summaries",
            "line": 608,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ChunkingStrategy",
            "line": 18,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ChunkMetadata",
            "line": 27,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Chunk",
            "line": 59,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ChunkerConfig",
            "line": 76,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryChunker",
            "line": 114,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Chunk', 'getLogger', 'Field', 'enumerate', '_chunk_by_sentence', 'predict_async', 'group', 'ValueError', 'loads', '_generate_summaries', '_chunk_by_semantic', 'update', 'join', 'find', '_post_process_chunks', 'append', '_extract_headings', 'get', 'range', 'split', 'len', 'ChunkerConfig', '_chunk_by_hybrid', 'error', 'strip', 'warning', '_chunk_by_paragraph', 'hasattr', 'ChunkMetadata', 'info', '_chunk_by_fixed_size', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.memory.lifecycle.importance_scorer",
            "item": "ImportanceFactors",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.importance_scorer",
            "item": "ImportanceScore",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.importance_scorer",
            "item": "ImportanceScorer",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.importance_scorer",
            "item": "ImportanceScoringConfig",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.memory_chunker",
            "item": "Chunk",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.memory_chunker",
            "item": "ChunkerConfig",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.memory_chunker",
            "item": "ChunkingStrategy",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.memory_chunker",
            "item": "ChunkMetadata",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.memory_chunker",
            "item": "MemoryChunker",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.progressive_summarizer",
            "item": "ProgressiveSummarizer",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.progressive_summarizer",
            "item": "ProgressiveSummarizerConfig",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.progressive_summarizer",
            "item": "SummaryLevel",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.lifecycle.progressive_summarizer",
            "item": "SummaryResult",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "redis",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.interface",
            "item": "MemoryInterface",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 20,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RedisMemory",
            "line": 17,
            "bases": [
              "MemoryInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'loads', 'hset', 'bool', 'append', 'get', 'keys', 'delete', 'expire', 'ttl', 'dumps', 'Redis', 'len', 'error', 'hgetall', 'set', 'exists', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.interface",
            "item": "MemoryInterface",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.parallel_retriever",
            "item": "ParallelMemoryRetriever",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.parallel_retriever",
            "item": "SearchResult",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 75,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_weighted_sum_fusion",
            "line": 262,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_reciprocal_rank_fusion",
            "line": 322,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_default_query_classifier",
            "line": 386,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "QueryType",
            "line": 25,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "HybridSearchConfig",
            "line": 33,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HybridSearchEngine",
            "line": 67,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'enumerate', '_reciprocal_rank_fusion', 'isinstance', 'HybridSearchConfig', 'ParallelMemoryRetriever', 'append', 'get', 'semantic_search', '_execute_semantic_search', '_execute_keyword_search', 'wait_for', 'sort', 'TypeVar', 'query_classifier', 'len', 'sum', 'error', '_weighted_sum_fusion', 'warning', 'lower', 'gather', 'time', 'info', 'items', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.interface",
            "item": "MemoryInterface",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 44,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SearchResult",
            "line": 23,
            "bases": [
              "BaseModel",
              null
            ],
            "decorators": []
          },
          {
            "name": "ParallelMemoryRetriever",
            "line": 36,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', '_search_layer', 'isinstance', 'append', 'SearchResult', 'get', 'keys', 'wait_for', 'extend', 'sort', 'TypeVar', '_search_text_in_layer', 'len', 'error', 'warning', 'gather', 'time', 'info', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/retrieval/examples.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 75,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_openai",
            "line": 159,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_classify_with_rules",
            "line": 294,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_features",
            "line": 340,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "QueryType",
            "line": 18,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "QueryFeatures",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryClassificationResult",
            "line": 52,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryClassifier",
            "line": 67,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'QueryType', 'getLogger', 'predict_async', 'from_pretrained', '_init_openai', '_classify_with_rules', '_extract_features', 'get', 'QueryClassificationResult', '_classify_with_openai', 'max', 'split', 'any', 'init', 'len', 'sum', 'QueryFeatures', 'error', 'warning', 'lower', 'hasattr', 'values', 'time', 'info', 'items', 'Endpoint'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/memory/retrieval/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.memory.retrieval.hybrid_search",
            "item": "HybridSearchConfig",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.hybrid_search",
            "item": "HybridSearchEngine",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.hybrid_search",
            "item": "QueryType",
            "alias": "HybridQueryType",
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.parallel_retriever",
            "item": "ParallelMemoryRetriever",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.parallel_retriever",
            "item": "SearchResult",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.query_classifier",
            "item": "QueryClassificationResult",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.query_classifier",
            "item": "QueryClassifier",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.query_classifier",
            "item": "QueryFeatures",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.memory.retrieval.query_classifier",
            "item": "QueryType",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/utils/format_structured_output.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "format_dictionary_as_markdown",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_movie_script",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_salesforce_results",
            "line": 117,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_analysis_results",
            "line": 169,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_structured_output_as_markdown",
            "line": 231,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'enumerate', 'list', 'startswith', 'format_analysis_results', 'isinstance', 'dict', 'join', 'replace', 'append', 'get', 'keys', 'callable', 'format_dictionary_as_markdown', 'str', 'title', 'dumps', 'format_movie_script', 'any', 'len', 'hasattr', 'all', 'set', 'format_salesforce_results', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.portkey_client",
            "item": "PortkeyClient",
            "alias": null,
            "line": 65,
            "level": 0
          },
          {
            "module": "core.monitoring.monitored_litellm_client",
            "item": "MonitoredLiteLLMClient",
            "alias": null,
            "line": 42,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.mock_portkey_client",
            "item": "MockPortkeyClient",
            "alias": null,
            "line": 75,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.mock_portkey_client",
            "item": "MockPortkeyClient",
            "alias": null,
            "line": 84,
            "level": 0
          },
          {
            "module": "packages.llm.src.models.openai",
            "item": "create_openai_model",
            "alias": null,
            "line": 128,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.portkey_client",
            "item": "PortkeyClient",
            "alias": null,
            "line": 154,
            "level": 0
          },
          {
            "module": "packages.llm.src.models.anthropic",
            "item": "create_anthropic_model",
            "alias": null,
            "line": 133,
            "level": 0
          },
          {
            "module": "packages.llm.src.models.openrouter",
            "item": "create_openrouter_model",
            "alias": null,
            "line": 138,
            "level": 0
          },
          {
            "module": "packages.llm.src.models.openrouter",
            "item": "create_openrouter_model",
            "alias": null,
            "line": 145,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_llm_client",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2825e410>"
            ]
          },
          {
            "name": "use_phidata_implementation",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_phidata_llm_model",
            "line": 113,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'MonitoredLiteLLMClient', 'lower', 'warning', 'create_openai_model', 'getattr', 'create_anthropic_model', 'get_settings', 'create_openrouter_model', 'MockPortkeyClient', 'get', 'info', 'get_phidata_llm_model', 'PortkeyClient', 'use_phidata_implementation', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 65,
          "module": "packages.shared.src.llm_client.portkey_client",
          "item": "PortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 75,
          "module": "packages.shared.src.llm_client.mock_portkey_client",
          "item": "MockPortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 84,
          "module": "packages.shared.src.llm_client.mock_portkey_client",
          "item": "MockPortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 128,
          "module": "packages.llm.src.models.openai",
          "item": "create_openai_model",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 154,
          "module": "packages.shared.src.llm_client.portkey_client",
          "item": "PortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 133,
          "module": "packages.llm.src.models.anthropic",
          "item": "create_anthropic_model",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 138,
          "module": "packages.llm.src.models.openrouter",
          "item": "create_openrouter_model",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
          "line": 145,
          "module": "packages.llm.src.models.openrouter",
          "item": "create_openrouter_model",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          },
          {
            "module": "os",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.security.credential_manager",
            "item": "CredentialManager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.security.credential_manager",
            "item": "ServiceAccountInfo",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_credential_manager",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283da650>"
            ]
          },
          {
            "name": "get_service_account_info",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_account_path",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_project_id",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_environment",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'CredentialManager', 'getLogger', 'error', 'get_project_id', 'basicConfig', 'get_service_account_key_path', 'info', 'get', 'HTTPException', 'get_service_account_key', 'Depends', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.cache.redis_client",
            "item": "RedisCache",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_redis_cache",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_redis_cache",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "_DummyCache",
            "line": 141,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RedisCache",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'RedisCache', '_DummyCache', 'getLogger', 'initialize', 'error', 'warning', 'close', 'health_check', 'get_settings', 'create_redis_cache', 'info', 'Depends'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
          "line": 19,
          "module": "packages.shared.src.cache.redis_client",
          "item": "RedisCache",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.prompt_builder",
            "item": "PromptBuilder",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.prompt_builder",
            "item": "PromptFormat",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_prompt_builder",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283d8310>"
            ]
          },
          {
            "name": "build_prompt_for_persona",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'debug', 'build_prompt', 'PromptBuilder', 'Depends', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
          "line": 15,
          "module": "packages.shared.src.prompt_builder",
          "item": "PromptBuilder",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
          "line": 15,
          "module": "packages.shared.src.prompt_builder",
          "item": "PromptFormat",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "DependencyError",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "MemoryConnectionError",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "MemoryError",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.exceptions",
            "item": "MemoryOperationError",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.utils.error_handling",
            "item": "error_boundary",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "InMemoryMemoryManager",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 41,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.adapters.mongodb_adapter",
            "item": "MongoDBStorageAdapter",
            "alias": null,
            "line": 84,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.adapters.postgres_adapter",
            "item": "PostgresStorageAdapter",
            "alias": null,
            "line": 85,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.services.memory_service",
            "item": "MemoryService",
            "alias": null,
            "line": 86,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.services.memory_service_factory",
            "item": "MemoryServiceFactory",
            "alias": null,
            "line": 87,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.mongodb_adapter",
            "item": "MongoDBMemoryAdapter",
            "alias": null,
            "line": 50,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 69,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.stubs",
            "item": "InMemoryMemoryManagerStub",
            "alias": "InMemoryMemoryManager",
            "line": 70,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_initialize_imports",
            "line": 32,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_memory_manager",
            "line": 105,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2811ce10>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'get_vultr_project_id', 'getLogger', 'MemoryConnectionError', 'DependencyError', 'get_vultr_credentials_path', 'get_memory_manager', 'isinstance', 'create_memory_manager', 'MemoryError', 'close', 'error_boundary', 'str', 'MemoryOperationError', 'health_check', 'get_settings', 'MongoDBMemoryAdapter', 'Depends', 'type', 'error', 'initialize', 'MemoryService', 'warning', 'hasattr', '_initialize_imports', 'InMemoryMemoryManager', 'info', 'create_memory_service'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 41,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "InMemoryMemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 41,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 84,
          "module": "packages.shared.src.memory.adapters.mongodb_adapter",
          "item": "MongoDBStorageAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 85,
          "module": "packages.shared.src.memory.adapters.postgres_adapter",
          "item": "PostgresStorageAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 86,
          "module": "packages.shared.src.memory.services.memory_service",
          "item": "MemoryService",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 87,
          "module": "packages.shared.src.memory.services.memory_service_factory",
          "item": "MemoryServiceFactory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 50,
          "module": "packages.shared.src.memory.mongodb_adapter",
          "item": "MongoDBMemoryAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
          "line": 69,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/dependencies/personas.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaTraits",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_personas",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona_config",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'getLogger', 'PersonaTraits', 'PersonaConfig', 'lower', 'warning', 'get', 'Depends', 'load_personas'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.llm",
            "item": "get_llm_client",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.interaction_service",
            "item": "InteractionService",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.interface",
            "item": "LLMClient",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "UserInput",
            "line": 32,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'process_interaction', 'post', 'getLogger', 'get_memory_service', 'Field', 'APIRouter', 'warning', 'error', 'hasattr', 'getattr', 'get_settings', 'InteractionService', 'HTTPException', 'Depends'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
          "line": 20,
          "module": "packages.shared.src.llm_client.interface",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
          "line": 21,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 68
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Body",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.agent_service",
            "item": "get_agent_instance",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.stubs",
            "item": "InMemoryMemoryManagerStub",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "AgentRunRequest",
            "line": 29,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentRunResponse",
            "line": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'uuid4', 'debug', 'run', 'get_agent_instance', 'Body', 'BackgroundTasks', 'InMemoryMemoryManagerStub', 'get', 'str', 'APIRouter', 'add_task', 'Depends', 'error', 'initialize', 'warning', 'shutdown', 'info', 'HTTPException'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.logging_config",
            "item": "get_logger",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.monitoring.monitored_litellm_client",
            "item": "MonitoredLiteLLMClient",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.llm",
            "item": "get_llm_client",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "MonitoringSummaryResponse",
            "line": 18,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CostBreakdownResponse",
            "line": 34,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'CostBreakdownResponse', 'strftime', 'export_monitoring_data', 'get_monitoring_summary', 'get', '_send_cost_alert', '_send_error_alert', 'str', 'APIRouter', 'isoformat', 'timedelta', 'date', 'Depends', 'error', 'utcnow', 'HTTPException', 'MonitoringSummaryResponse', 'get_logger', 'Query'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "Agent",
            "line": 12,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Persona",
            "line": 20,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Workflow",
            "line": 30,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'get', 'Query', 'APIRouter', 'post'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.personas.dependency",
            "item": "get_persona_manager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.enhanced_agent_conductor",
            "item": "get_enhanced_agent_conductor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderAuthenticationError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderConnectionError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderInvalidRequestError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderModelError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderRateLimitError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderServiceError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderTimeoutError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "get_llm_provider",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "LLMRequestModel",
            "line": 35,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMResponseModel",
            "line": 47,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ErrorResponse",
            "line": 60,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'Field', 'isinstance', 'LLMProviderInvalidRequestError', 'generate_chat_completion', 'get', 'LLMResponseModel', 'get_llm_provider', 'str', 'process_interaction', 'APIRouter', 'get_settings', 'Depends', 'get_enhanced_agent_conductor', 'error', 'LLMProviderAuthenticationError', 'warning', 'hasattr', 'HTTPException'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "platform",
            "alias": null,
            "line": 10
          },
          {
            "module": "sys",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.cache",
            "item": "get_redis_cache",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ComponentHealth",
            "line": 32,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HealthStatus",
            "line": 39,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'node', 'HealthStatus', 'getLogger', 'error', 'APIRouter', 'hasattr', 'split', 'ComponentHealth', 'platform', 'Depends', 'health_check', 'get', 'now'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.simplified_agent_registry",
            "item": "get_simplified_agent_registry",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.llm",
            "item": "get_llm_client",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.memory",
            "item": "get_memory_manager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.utils.format_structured_output",
            "item": "format_structured_output_as_markdown",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.ingestion.src.api.chat_integration",
            "item": "IngestionChatMiddleware",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.ingestion.src.api.chat_integration",
            "item": "get_ingestion_middleware",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.ingestion.src.api.chat_integration",
            "item": "process_phidata_message",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.interface",
            "item": "LLMClient",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 123,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "load_persona_configs",
            "alias": null,
            "line": 124,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "PhidataRequest",
            "line": 35,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PhidataResponse",
            "line": 52,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'post', 'getLogger', 'get_simplified_agent_registry', 'Field', 'load_persona_configs', 'isinstance', 'process_phidata_message', 'update', 'add_memory_item_async', 'next', 'select_agent_for_context', 'get', 'format_structured_output_as_markdown', 'str', 'APIRouter', 'PhidataResponse', 'iter', 'isoformat', 'process', 'Depends', 'error', 'hasattr', 'getattr', 'get_conversation_history_async', 'get_agent', 'values', 'utcnow', 'info', 'HTTPException', 'AgentContext'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
          "line": 20,
          "module": "packages.ingestion.src.api.chat_integration",
          "item": "IngestionChatMiddleware",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
          "line": 20,
          "module": "packages.ingestion.src.api.chat_integration",
          "item": "get_ingestion_middleware",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
          "line": 20,
          "module": "packages.ingestion.src.api.chat_integration",
          "item": "process_phidata_message",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
          "line": 25,
          "module": "packages.shared.src.llm_client.interface",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
          "line": 26,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "jwt",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi.security",
            "item": "OAuth2PasswordRequestForm",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "Token",
            "line": 21,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LoginRequest",
            "line": 27,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Token', 'post', 'APIRouter', 'encode', 'utcnow', 'get', 'HTTPException', 'getenv', 'timedelta', 'Depends'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.conversation_service",
            "item": "get_conversation_service",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "MessageInput",
            "line": 22,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ConversationStartInput",
            "line": 32,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ConversationEndInput",
            "line": 38,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'post', 'getLogger', 'error', 'Field', 'APIRouter', 'get_conversation_history', 'isoformat', 'get', 'record_message', 'get_active_conversation', 'HTTPException', 'end_conversation', 'start_conversation', 'Query', 'get_conversation_service'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/query_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "httpx",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'str', 'post', 'APIRouter', 'AsyncClient', 'get_settings', 'raise_for_status', 'HTTPException', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 1
          },
          {
            "module": "json",
            "alias": null,
            "line": 2
          },
          {
            "module": "logging",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 14,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_compute_file_hash",
            "line": 55,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_fingerprint_record",
            "line": 63,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryServiceStorageAdapter",
            "line": 11,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_compute_file_hash', 'hexdigest', 'getLogger', 'error', 'update', '_original_upsert_batch', 'read', 'sha256', 'open', 'iter', 'encode', 'dumps', 'append', 'exists', 'utcnow', 'get_by_hash', '_fingerprint_record', 'store_hash'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "force_reload_personas",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "load_persona_configs",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'post', 'safe_load', 'list', 'force_reload_personas', 'load_persona_configs', 'model_dump', 'join', 'dirname', 'get', 'keys', 'delete', 'str', 'APIRouter', 'len', 'Depends', 'makedirs', 'dump', 'lower', 'open', 'write', 'HTTPException'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_loader.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "force_reload_personas",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.loader",
            "item": "load_persona_configs",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_persona_configs",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reload_personas",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'error', 'getLogger', 'debug', 'warning', 'PersonaConfig', 'lower', 'force_reload_personas', 'get', 'load_persona_configs', 'info', 'Depends', 'reload_personas'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_middleware.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "starlette.middleware.base",
            "item": "BaseHTTPMiddleware",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "starlette.requests",
            "item": "Request",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.dependencies.personas",
            "item": "get_persona_config",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "PersonaMiddleware",
            "line": 18,
            "bases": [
              "BaseHTTPMiddleware"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'getLogger', 'debug', 'call_next', 'get_persona_config', 'get'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.layered_memory",
            "item": "LayeredMemoryManager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.layered_memory",
            "item": "MemoryLayer",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.observable_agent",
            "item": "ObservableAgent",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.stateful_agent",
            "item": "ConversationalAgent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.stateful_agent",
            "item": "StatefulAgent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.teams.coordinator",
            "item": "AgentTeam",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.teams.coordinator",
            "item": "TeamCoordinator",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.tools.base",
            "item": "Tool",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.tools.base",
            "item": "ToolUsingAgent",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "MemoryType",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "TeamMode",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 61,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 96,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 197,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CalculatorTool",
            "line": 24,
            "bases": [
              "Tool"
            ],
            "decorators": []
          },
          {
            "name": "WeatherTool",
            "line": 58,
            "bases": [
              "Tool"
            ],
            "decorators": []
          },
          {
            "name": "ExampleToolUsingAgent",
            "line": 93,
            "bases": [
              "ToolUsingAgent",
              "StatefulAgent"
            ],
            "decorators": []
          },
          {
            "name": "ExampleObservableAgent",
            "line": 194,
            "bases": [
              "ObservableAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'ExampleObservableAgent', 'remember', 'ValueError', 'run', 'setup_memory_manager', 'get_state', '_record_metric', 'TeamCoordinator', 'get_metrics', 'float', 'dict', 'PersonaConfig', 'close', 'replace', 'LayeredMemoryManager', 'use_tool', 'get_tool_descriptions', 'WeatherTool', 'AgentTeam', 'str', 'run_example', 'MemoryLayer', 'eval', 'ConversationalAgent', 'ExampleToolUsingAgent', 'basicConfig', 'process', 'len', 'AgentResponse', 'setup_agent_team', '__init__', 'add_tool_result', 'super', 'type', 'initialize', 'strip', 'CalculatorTool', 'lower', 'all', 'set', 'register_error_handler', 'info', 'AgentContext', 'increment_step'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/examples/pubsub_agent_example.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.agent_communication",
            "item": "get_agent_communication",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "can_handle",
            "line": 172,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PubSubAgent",
            "line": 19,
            "bases": [
              "Agent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'run', 'PubSubAgent', 'sleep', 'main', 'dict', 'initialize_async', 'close', 'close_async', 'get', 'register_event_handler', 'print', 'str', 'split', 'basicConfig', 'process', 'get_agent_communication', 'publish_event', 'len', 'AgentResponse', '__init__', 'super', 'register_task_handler', 'lower', 'publish_task', 'info', 'AgentContext'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "from_message",
            "line": 42,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "from_text",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryType",
            "line": 13,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryItem",
            "line": 20,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ConversationMemoryItem",
            "line": 34,
            "bases": [
              "MemoryItem"
            ],
            "decorators": []
          },
          {
            "name": "VectorMemoryItem",
            "line": 46,
            "bases": [
              "MemoryItem"
            ],
            "decorators": []
          },
          {
            "name": "MemorySearchResult",
            "line": 57,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 31,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'cls', 'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pymongo",
            "item": "ASCENDING",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pymongo",
            "item": "DESCENDING",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pymongo",
            "item": "MongoClient",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pymongo.errors",
            "item": "ConnectionFailure",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pymongo.errors",
            "item": "OperationFailure",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "bson",
            "item": "ObjectId",
            "alias": null,
            "line": 139,
            "level": 0
          },
          {
            "module": "bson",
            "item": "ObjectId",
            "alias": null,
            "line": 162,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "client",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "db",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "store_memory",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retrieve_memories",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_memory",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_memory",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search_memories",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_stats",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_agent_memories",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 269,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MongoDBMemoryManager",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'delete_one', 'ValueError', 'startswith', 'find', 'close', 'replace', 'append', 'get', 'delete_many', 'now', 'sort', 'str', 'command', 'list_collection_names', 'find_one', 'ObjectId', 'insert_one', 'update_one', 'getenv', 'error', 'create_index', 'MongoClient', 'limit', 'info', 'count_documents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 11,
          "module": "pymongo",
          "item": "ASCENDING",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 11,
          "module": "pymongo",
          "item": "DESCENDING",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 11,
          "module": "pymongo",
          "item": "MongoClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 12,
          "module": "pymongo.errors",
          "item": "ConnectionFailure",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 12,
          "module": "pymongo.errors",
          "item": "OperationFailure",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 139,
          "module": "bson",
          "item": "ObjectId",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
          "line": 162,
          "module": "bson",
          "item": "ObjectId",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 216
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Generic",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "optional_integrations",
            "item": "mongodb",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "mongodb_manager",
            "item": "MongoDBMemoryManager",
            "alias": null,
            "line": 197,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 67,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_update_stats",
            "line": 182,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_initialize_mongodb",
            "line": 193,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryQuery",
            "line": 28,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryStats",
            "line": 43,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryStore",
            "line": 59,
            "bases": [
              null,
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "RedisMemoryStore",
            "line": 205,
            "bases": [
              "MemoryStore"
            ],
            "decorators": []
          },
          {
            "name": "MongoDBMemoryStore",
            "line": 416,
            "bases": [
              "MemoryStore"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'getLogger', 'debug', 'Field', 'smembers', 'list', 'where', 'sadd', 'scard', 'count', 'min', 'hset', 'dict', 'close', 'AsyncClient', 'append', 'get', 'expire', 'delete', 'ping', 'range', 'retrieve', 'document', 'MongoDBMemoryManager', 'int', 'batch', 'TypeVar', 'to_dict', 'Redis', 'isoformat', 'len', 'ConnectionError', 'parse_obj', 'MemoryStats', 'error', 'initialize', 'srem', 'warning', 'offset', 'hasattr', 'hgetall', '_update_stats', 'set', 'lower', 'exists', 'time', 'info', 'setattr', 'items', 'limit', 'collection'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.manager",
            "item": "FirestoreMemoryStore",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.manager",
            "item": "MemoryQuery",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.manager",
            "item": "MemoryStore",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.manager",
            "item": "RedisMemoryStore",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "MemoryType",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.in_memory",
            "item": "InMemoryStore",
            "alias": null,
            "line": 116,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.pgvector",
            "item": "PGVectorStore",
            "alias": null,
            "line": 120,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.memory.vertex",
            "item": "VertexVectorMemoryStore",
            "alias": null,
            "line": 124,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_default_memory_manager",
            "line": 462,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 48,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_store",
            "line": 91,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryLayer",
            "line": 22,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LayeredMemoryManager",
            "line": 39,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 36,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'getLogger', 'debug', 'Field', 'query', 'ValueError', 'create_task', 'RedisMemoryStore', 'InMemoryStore', 'close', 'append', 'LayeredMemoryManager', 'delete', 'clear', 'store', 'retrieve', 'extend', 'sort', 'MemoryLayer', 'FirestoreMemoryStore', 'sorted', 'copy', 'len', 'PGVectorStore', '_create_store', 'error', 'initialize', 'MemoryQuery', 'create_default_memory_manager', 'info', 'items', 'VertexVectorMemoryStore'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          "line": 116,
          "module": "core.conductor.src.agents.memory.in_memory",
          "item": "InMemoryStore",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          "line": 120,
          "module": "core.conductor.src.agents.memory.pgvector",
          "item": "PGVectorStore",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
          "line": 124,
          "module": "core.conductor.src.agents.memory.vertex",
          "item": "VertexVectorMemoryStore",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "Agent",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentContext",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.agent_base",
            "item": "AgentResponse",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.conductor.src.agents.stateful_agent",
            "item": "StatefulAgent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.models",
            "item": "TeamMode",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 72,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ExecutionStep",
            "line": 21,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ExecutionPlan",
            "line": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StepResult",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentTeam",
            "line": 64,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TeamCoordinator",
            "line": 555,
            "bases": [
              "StatefulAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Field', 'enumerate', 'list', '_create_execution_plan', 'ExecutionStep', 'create_task', 'get_state', 'StepResult', 'dict', 'join', 'append', '_execute_collaborative_plan', 'get', 'keys', 'add', 'get_event_loop', 'range', 'extend', '_execute_competitive_plan', 'str', 'max', 'ExecutionPlan', '_execute_coordinated_plan', 'to_dict', 'process', 'len', 'AgentResponse', '_synthesize_response', '_execute_debate_plan', 'error', '_execute_step', 'all', 'TeamMode', 'set', 'add_context_variable', 'time', 'items', 'AgentContext', 'increment_step'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py": {
      "imports": {
        "standard": [
          {
            "module": "inspect",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "get_type_hints",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "create_model",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_tool_registry",
            "line": 363,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 58,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_metadata",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_input_model",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 170,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_tool",
            "line": 175,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool",
            "line": 200,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tools_by_category",
            "line": 218,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_tools",
            "line": 233,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool_names",
            "line": 242,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 259,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_tool",
            "line": 269,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_tool",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_tool",
            "line": 302,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_tool_descriptions",
            "line": 314,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolParameter",
            "line": 21,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ToolMetadata",
            "line": 35,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Tool",
            "line": 50,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "ToolRegistry",
            "line": 162,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ToolUsingAgent",
            "line": 251,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'list', 'create_input_model', 'get_type_hints', 'create_model', 'ValueError', 'get_metadata', 'remove', 'signature', 'dict', 'append', 'keys', 'get', 'input_model', 'ToolParameter', 'add', 'ToolRegistry', 'TypeVar', 'title', 'iscoroutinefunction', 'ToolMetadata', 'execute', 'set', 'values', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/tools/implementations/cache_tools.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "redis",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'int', 'str', 'Exception', 'set', 'setex', 'Redis', 'get', 'delete', 'getenv'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/tools/implementations/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 31
          },
          {
            "module": "logging",
            "alias": null,
            "line": 32
          },
          {
            "module": "threading",
            "alias": null,
            "line": 33
          },
          {
            "module": "time",
            "alias": null,
            "line": 34
          },
          {
            "module": "prometheus_client",
            "alias": "prom",
            "line": 48
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 35,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 36,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "RetryError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry_if_exception_type",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "stop_after_attempt",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "wait_exponential",
            "alias": null,
            "line": 40,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_circuit_breaker",
            "line": 460,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 71,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 84,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_circuit_state",
            "line": 132,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "record_success",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "record_failure",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_can_make_request",
            "line": 203,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "call_provider_sync",
            "line": 312,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset",
            "line": 425,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_wrapped_call",
            "line": 340,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b283aa6d0>"
            ]
          }
        ],
        "classes": [
          {
            "name": "CircuitState",
            "line": 61,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ProviderCircuitOpenError",
            "line": 68,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreaker",
            "line": 76,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'Gauge', 'labels', 'stop_after_attempt', 'wait_exponential', 'Counter', '_wrapped_call', 'ProviderCircuitOpenError', 'get', 'observe', 'keys', '_get_circuit_state', 'str', 'func', 'TypeVar', 'record_success', 'iscoroutinefunction', 'inc', 'retry', 'CircuitBreaker', '_can_make_request', '__init__', 'super', 'record_failure', 'warning', 'call_provider_sync', 'call_provider_async', 'Histogram', 'set', 'time', 'info', 'retry_if_exception_type', 'RLock'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/header_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 24
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Mapping",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_provider_headers",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "extract_provider_from_model",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "extract_provider_from_request",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'validate_provider_headers', 'len', 'getLogger', 'join', 'extract_provider_from_model', 'call_next', 'warning', 'lower', 'split', 'set', 'get', 'HTTPException', 'items', 'extract_provider_from_request', 'startswith'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py": {
      "imports": {
        "standard": [
          {
            "module": "importlib",
            "alias": null,
            "line": 24
          },
          {
            "module": "logging",
            "alias": null,
            "line": 25
          },
          {
            "module": "os",
            "alias": null,
            "line": 26
          },
          {
            "module": "sys",
            "alias": null,
            "line": 27
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 85
          },
          {
            "module": "re",
            "alias": null,
            "line": 91
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 372
          },
          {
            "module": "litellm",
            "alias": null,
            "line": 212
          },
          {
            "module": "prometheus_client",
            "alias": null,
            "line": 321
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.secret_manager",
            "item": "get_secret_manager",
            "alias": null,
            "line": 268,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.circuit_breaker",
            "item": "get_circuit_breaker",
            "alias": null,
            "line": 311,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.header_validation",
            "item": "validate_headers_middleware",
            "alias": null,
            "line": 350,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "check_docker_buildkit_support",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_environment_variables",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_optional_environment_variables",
            "line": 139,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_package_availability",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "init_providers",
            "line": 192,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "init_secret_manager",
            "line": 259,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "init_circuit_breaker",
            "line": 302,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_header_validation",
            "line": 338,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_poetry_install",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_llm_environment",
            "line": 410,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'check_environment_variables', 'getLogger', 'list', 'check_docker_buildkit_support', 'import_module', 'run', 'init_providers', 'validate_poetry_install', 'init_circuit_breaker', 'check_optional_environment_variables', 'join', 'validate_llm_environment', 'replace', 'middleware', 'append', 'start_http_server', 'get_circuit_breaker', 'get', 'keys', 'str', 'int', 'get_secret_manager', 'groups', 'basicConfig', 'len', 'exit', 'error', 'warning', 'lower', 'map', 'init_secret_manager', 'info', 'items', 'get_secret', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
          "line": 268,
          "module": "core.conductor.src.services.llm.secret_manager",
          "item": "get_secret_manager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderAuthenticationError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderConnectionError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderInvalidRequestError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderModelError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderRateLimitError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderResourceExhaustedError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderServiceError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderTimeoutError",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "LLMProvider",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "OpenRouterProvider",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "get_llm_provider",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.providers",
            "item": "register_llm_provider",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "LLMProviderError",
            "line": 8,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderConnectionError",
            "line": 11,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderAuthenticationError",
            "line": 14,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderRateLimitError",
            "line": 17,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderResourceExhaustedError",
            "line": 20,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderInvalidRequestError",
            "line": 23,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderServiceError",
            "line": 26,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderTimeoutError",
            "line": 29,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          },
          {
            "name": "LLMProviderModelError",
            "line": 32,
            "bases": [
              "LLMProviderError"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "time",
            "alias": null,
            "line": 16
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "openai",
            "item": "APIConnectionError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "APIError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AsyncOpenAI",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AuthenticationError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "BadRequestError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "InternalServerError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "openai",
            "item": "RateLimitError",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "retry",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "stop_after_attempt",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "tenacity",
            "item": "wait_exponential",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.config",
            "item": "settings",
            "alias": null,
            "line": 39,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderAuthenticationError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderConnectionError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderInvalidRequestError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderModelError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderRateLimitError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderServiceError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.llm.exceptions",
            "item": "LLMProviderTimeoutError",
            "alias": null,
            "line": 40,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_registry",
            "item": "Service",
            "alias": null,
            "line": 50,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.unified_registry",
            "item": "register",
            "alias": null,
            "line": 50,
            "level": 0
          },
          {
            "module": "portkey_ai",
            "item": "PortkeyAPIError",
            "alias": null,
            "line": 33,
            "level": 0
          },
          {
            "module": "portkey_ai",
            "item": "PortkeyException",
            "alias": null,
            "line": 33,
            "level": 0
          },
          {
            "module": "portkey",
            "item": "Portkey",
            "alias": null,
            "line": 624,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_provider_for_mode",
            "line": 839,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_openrouter_environment",
            "line": 864,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_portkey_environment",
            "line": 878,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_llm_provider",
            "line": 895,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_llm_provider",
            "line": 916,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize_llm_providers",
            "line": 1045,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 58,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 128,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "provider_name",
            "line": 168,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "default_model",
            "line": 172,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 238,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 293,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "provider_name",
            "line": 309,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "default_model",
            "line": 314,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_initialized",
            "line": 319,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "get_model_for_agent",
            "line": 323,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_should_retry",
            "line": 348,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_retry_decorator",
            "line": 368,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 603,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 619,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 656,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "provider_name",
            "line": 664,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "default_model",
            "line": 669,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_initialized",
            "line": 674,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "get_model_for_mode",
            "line": 678,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LLMProviderConfig",
            "line": 55,
            "bases": [],
            "decorators": []
          },
          {
            "name": "LLMProvider",
            "line": 120,
            "bases": [
              "Service",
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "OpenRouterProvider",
            "line": 228,
            "bases": [
              "LLMProvider"
            ],
            "decorators": []
          },
          {
            "name": "PortkeyProvider",
            "line": 595,
            "bases": [
              "LLMProvider"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Timeout', 'get_model_for_agent', 'getLogger', 'debug', 'get_agent_model_map', '_make_api_call', 'ValueError', 'LLMProviderError', 'stop_after_attempt', 'min', 'AsyncOpenAI', 'ImportError', 'OpenRouterProvider', 'PortkeyProvider', 'LLMProviderTimeoutError', 'get_mode_model_map', 'register', 'wait_exponential', 'isinstance', 'LLMProviderInvalidRequestError', 'get_openrouter_headers', 'validate', '_get_retry_decorator', 'generate_chat_completion', 'with_options', 'LLMProviderServiceError', '_should_retry', 'close', 'run_in_executor', 'LLMProviderConnectionError', 'callable', 'LLMProviderConfig', '_validate_portkey_environment', 'get_llm_provider', 'int', 'str', 'split', 'retry', 'register_llm_provider', 'copy', 'len', 'get_model_for_mode', '_validate_openrouter_environment', 'error', 'initialize', 'warning', 'LLMProviderAuthenticationError', 'hasattr', 'lower', 'set', 'getattr', 'LLMProviderModelError', 'Portkey', 'LLMProviderRateLimitError', 'time', 'info', 'get_running_loop', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/personas/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.business.personas.base",
            "item": "PersonaConfig",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaManager",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaProcessor",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaTrait",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "ResponseStyle",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "get_persona_manager",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/personas/base.py": {
      "imports": {
        "standard": [
          {
            "module": "yaml",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 195
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_persona_manager",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_yaml",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "to_dict",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_input",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "format_response",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "generate_system_prompt",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 121,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_persona",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_persona",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_default_persona",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_default_persona",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_personas",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_processor",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_with_persona",
            "line": 159,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_response_with_persona",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_from_directory",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaTrait",
            "line": 15,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ResponseStyle",
            "line": 29,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "PersonaConfig",
            "line": 39,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PersonaProcessor",
            "line": 100,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "PersonaManager",
            "line": 118,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'safe_load', 'read', 'field', 'list', 'format_response', 'listdir', 'endswith', 'join', 'register_persona', 'append', 'get', 'PersonaTrait', 'print', 'PersonaManager', 'get_default_persona', 'ResponseStyle', 'from_yaml', 'cls', 'open', 'values', 'get_persona', 'process_input'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/workflows/examples.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 166
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMRequest",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "get_llm_service",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "get_persona_manager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "TaskPriority",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "Workflow",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "WorkflowContext",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_conversation_workflow",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_document_analysis_workflow",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_example_workflows",
            "line": 311,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Workflow', 'getLogger', 'get_persona_manager', 'ValueError', 'get_llm_service', 'loads', 'complete', 'get_memory_service', 'LLMRequest', 'get', 'store', 'register_workflow', 'str', 'get_task_output', 'create_document_analysis_workflow', 'split', 'add_task', 'get_default_persona', 'get_workflow_engine', 'set_output', 'error', 'strip', 'lower', 'complete_with_persona', 'info', 'get_persona', 'create_conversation_workflow', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/workflows/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.business.workflows.base",
            "item": "Task",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "TaskDefinition",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "TaskPriority",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "TaskResult",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "TaskStatus",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "Workflow",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "WorkflowContext",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "WorkflowEngine",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.workflows.examples",
            "item": "create_conversation_workflow",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.business.workflows.examples",
            "item": "create_document_analysis_workflow",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.business.workflows.examples",
            "item": "register_example_workflows",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/workflows/base.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "Event",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_workflow_engine",
            "line": 394,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__hash__",
            "line": 64,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_task_output",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_output",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_inputs",
            "line": 97,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 104,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_task",
            "line": 111,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_execution_order",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 341,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_workflow",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow",
            "line": 351,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_workflows",
            "line": 355,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow_status",
            "line": 373,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskStatus",
            "line": 21,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskPriority",
            "line": 31,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskResult",
            "line": 40,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TaskDefinition",
            "line": 52,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "WorkflowContext",
            "line": 68,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Task",
            "line": 88,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "Workflow",
            "line": 101,
            "bases": [],
            "decorators": []
          },
          {
            "name": "WorkflowEngine",
            "line": 338,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'TaskDefinition', 'list', 'ValueError', 'get_event_bus', 'Event', 'sleep', 'hash', 'update', 'WorkflowEngine', 'TaskResult', 'append', 'get', 'keys', '_emit_task_failed', 'publish', '_execute_level', 'wait_for', 'str', 'sorted', 'issubset', 'len', '_execute_task', 'handler', 'error', 'get_execution_order', 'execute', 'set', 'utcnow', 'gather', 'info', 'items', 'field', 'WorkflowContext'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/llm/provider.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 156
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "portkey_ai",
            "item": "Portkey",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaConfig",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_llm_service",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 49,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 64,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 80,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_providers",
            "line": 86,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_build_system_prompt",
            "line": 298,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "estimate_cost",
            "line": 315,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LLMProvider",
            "line": 20,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CompletionMode",
            "line": 29,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "LLMRequest",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "LLMResponse",
            "line": 54,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "LLMService",
            "line": 68,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_build_system_prompt', 'complete', 'join', 'LLMRequest', 'append', 'get', '_complete_direct', 'split', '_complete_with_portkey', 'sorted', 'get_settings', '_initialize_providers', 'len', 'LLMResponse', 'NotImplementedError', 'get_secret_value', 'error', 'getattr', 'Portkey', 'time', 'LLMService', 'items', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/business/llm/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.business.llm.provider",
            "item": "CompletionMode",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMProvider",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMRequest",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMResponse",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMService",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "get_llm_service",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/deduplication/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "deduplication_engine",
            "item": "DeduplicationEngine",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "duplicate_resolver",
            "item": "DuplicateResolver",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "audit_logger",
            "item": "DeduplicationAuditLogger",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "deduplication_engine",
            "item": "DuplicateMatch",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "deduplication_engine",
            "item": "DuplicateType",
            "alias": null,
            "line": 15,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 48,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 74,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ResolutionStrategy",
            "line": 19,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ResolutionAction",
            "line": 27,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ResolutionResult",
            "line": 36,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DuplicateResolver",
            "line": 62,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'timestamp', 'isinstance', '_keep_existing', 'hash', '_determine_strategy', '_merge_content', 'fromisoformat', '_replace_with_new', 'resolve_duplicate', 'get', 'str', 'ResolutionResult', 'to_dict', '_keep_both', 'isoformat', 'len', 'ResolutionStrategy', 'DuplicateType', 'utcnow', 'items', 'field', '_queue_for_review'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 14
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 17
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "sklearn.feature_extraction.text",
            "item": "TfidfVectorizer",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "sklearn.metrics.pairwise",
            "item": "cosine_similarity",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 75,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_content_hash",
            "line": 200,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_cache",
            "line": 410,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DuplicateType",
            "line": 23,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "UploadChannel",
            "line": 30,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "DuplicateMatch",
            "line": 39,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DeduplicationEngine",
            "line": 63,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'TfidfVectorizer', '_generate_content_hash', '_check_near_match', 'cosine_similarity', '_check_semantic_match', 'hash', 'UploadChannel', 'encode', 'append', 'get', 'clear', 'hexdigest', '_check_partial_match', 'extend', 'str', 'zip', 'dumps', 'isoformat', 'transform', 'len', 'check_duplicate', 'DuplicateMatch', '_check_exact_match', 'strip', 'sha256', 'lower', 'gather', 'fit', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 14
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "insert",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "select",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "deduplication_engine",
            "item": "DuplicateMatch",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "deduplication_engine",
            "item": "UploadChannel",
            "alias": null,
            "line": 20,
            "level": 1
          },
          {
            "module": "duplicate_resolver",
            "item": "ResolutionResult",
            "alias": null,
            "line": 21,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 84,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AuditEventType",
            "line": 25,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AuditEntry",
            "line": 36,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DeduplicationAuditLogger",
            "line": 72,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'getLogger', 'uuid4', 'create_task', 'sleep', 'dict', '_add_entry', 'AuditEntry', 'append', 'get', 'clear', 'str', 'dumps', 'to_dict', 'isoformat', 'len', 'fetch_all', 'fetch_one', 'error', 'execute', '_periodic_flush', '_flush_buffer', 'cancel', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 36,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 49,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "is_connected",
            "line": 250,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "StorageType",
            "line": 14,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "StorageResult",
            "line": 21,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "StorageInterface",
            "line": 41,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'timestamp', 'append', 'isoformat', 'utcnow', 'get', 'delete', 'store', 'retrieve'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 37,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_supported_formats",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_content_types",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ParsedData",
            "line": 16,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ParserInterface",
            "line": 44,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'field', 'encode', 'sha256', 'hexdigest'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/interfaces/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "parser",
            "item": "ParserInterface",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "parser",
            "item": "ParsedData",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "storage",
            "item": "StorageInterface",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "storage",
            "item": "StorageResult",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "processor",
            "item": "ProcessorInterface",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "processor",
            "item": "ProcessingResult",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py": {
      "imports": {
        "standard": [
          {
            "module": "uuid",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 47,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "success_rate",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "add_error",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 71,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_parser",
            "line": 235,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_storage",
            "line": 239,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_supported_sources",
            "line": 243,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_initialized",
            "line": 247,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ProcessingStatus",
            "line": 15,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ProcessingResult",
            "line": 24,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ProcessorInterface",
            "line": 63,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'uuid4', 'list', 'append', 'isoformat', 'utcnow', 'keys', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/parsers/slack_parser.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.parser",
            "item": "ParserInterface",
            "alias": null,
            "line": 14,
            "level": 2
          },
          {
            "module": "interfaces.parser",
            "item": "ParsedData",
            "alias": null,
            "line": 14,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_parse_slack_timestamp",
            "line": 248,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_channel_from_filename",
            "line": 264,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SlackParser",
            "line": 18,
            "bases": [
              "ParserInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'debug', 'ParsedData', 'list', 'min', 'fromtimestamp', 'loads', 'isinstance', 'float', 'endswith', 'get', 'keys', 'str', 'max', 'dumps', '_parse_slack_timestamp', 'any', 'decode', 'len', '_extract_channel_from_filename', '__init__', 'super', 'error'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/parsers/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.parser",
            "item": "ParserInterface",
            "alias": null,
            "line": 9,
            "level": 2
          },
          {
            "module": "slack_parser",
            "item": "SlackParser",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "zip_handler",
            "item": "ZipHandler",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_parser",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'lower', 'get', 'ValueError'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py": {
      "imports": {
        "standard": [
          {
            "module": "zipfile",
            "alias": null,
            "line": 8
          },
          {
            "module": "io",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.parser",
            "item": "ParserInterface",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "interfaces.parser",
            "item": "ParsedData",
            "alias": null,
            "line": 16,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "cleanup",
            "line": 251,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ZipHandler",
            "line": 20,
            "bases": [
              "ParserInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'debug', 'ParsedData', 'rmtree', 'ZipFile', 'endswith', '_detect_source_type', 'get', 'is_dir', 'extractall', 'str', 'namelist', 'getinfo', 'any', 'len', 'mkdtemp', 'sum', '__init__', 'super', 'error', 'BytesIO', 'lower', 'warning', 'testzip', 'exists', 'infolist'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/storage/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "StorageInterface",
            "alias": null,
            "line": 9,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "StorageType",
            "alias": null,
            "line": 9,
            "level": 2
          },
          {
            "module": "postgres_adapter",
            "item": "PostgresAdapter",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_storage_adapter",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'get', 'ValueError'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/storage/postgres_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 13
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "asyncpg.pool",
            "item": "Pool",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "StorageInterface",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "StorageResult",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "StorageType",
            "alias": null,
            "line": 18,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgresAdapter",
            "line": 22,
            "bases": [
              "StorageInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'UUID', 'fetchrow', 'create_pool', 'dict', 'join', 'StorageResult', 'close', 'append', 'get', 'fetchval', 'extend', 'acquire', 'str', 'dumps', 'transaction', 'len', '__init__', 'super', 'error', '_insert_data', 'execute', '_update_data', 'fetch', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 13
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 15
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 18
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "weaviate.exceptions",
            "item": "WeaviateException",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "StorageInterface",
            "alias": null,
            "line": 20,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "StorageResult",
            "alias": null,
            "line": 20,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "StorageType",
            "alias": null,
            "line": 20,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_prepare_data_object",
            "line": 350,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_build_where_filter",
            "line": 484,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateAdapter",
            "line": 24,
            "bases": [
              "StorageInterface"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'AuthApiKey', 'with_where', 'create_class', 'isinstance', 'with_offset', 'pop', 'StorageResult', 'Client', '_prepare_data_object', 'append', 'with_near_vector', 'get', 'delete', 'retrieve', 'is_ready', 'str', 'copy', 'any', 'isoformat', 'with_limit', '_ensure_schema', 'with_near_text', '__init__', 'super', 'error', 'Exception', '_build_where_filter', 'info', 'get_by_id', 'do', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/events/event_bus.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_event_bus",
            "line": 300,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 92,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "subscribe",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "unsubscribe",
            "line": 139,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "publish_sync",
            "line": 241,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_handlers",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_event_history",
            "line": 267,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_stats",
            "line": 276,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_history",
            "line": 285,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset_stats",
            "line": 289,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "EventPriority",
            "line": 17,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Event",
            "line": 26,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "EventHandler",
            "line": 39,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EventBus",
            "line": 79,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'run_until_complete', 'enumerate', 'list', 'create_task', 'Event', 'sleep', 'isinstance', 'Lock', 'pop', 'close', 'append', 'keys', 'clear', 'publish', 'extend', 'set_event_loop', 'sort', 'iscoroutinefunction', 'len', 'EventBus', 'sum', 'new_event_loop', 'handler', 'EventHandler', 'error', 'event_filter', 'handle', 'warning', 'values', 'utcnow', 'gather'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/memory/unified_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 15
          },
          {
            "module": "weaviate.classes.query",
            "alias": "wvcq",
            "line": 16
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Literal",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceRegistry",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base",
            "item": "MemoryItem",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryLayer",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryPolicy",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryService",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryStore",
            "alias": null,
            "line": 21,
            "level": 1
          },
          {
            "module": "base",
            "item": "SearchResult",
            "alias": null,
            "line": 21,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_memory_service",
            "line": 770,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 100,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 194,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "should_promote",
            "line": 338,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "should_evict",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "select_layer",
            "line": 363,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 387,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_translate_simple_filters_to_weaviate",
            "line": 485,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ShortTermStore",
            "line": 32,
            "bases": [
              "MemoryStore"
            ],
            "decorators": []
          },
          {
            "name": "MidTermStore",
            "line": 97,
            "bases": [
              "MemoryStore"
            ],
            "decorators": []
          },
          {
            "name": "LongTermStore",
            "line": 191,
            "bases": [
              "MemoryStore"
            ],
            "decorators": []
          },
          {
            "name": "DefaultMemoryPolicy",
            "line": 335,
            "bases": [
              "MemoryPolicy"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedMemoryService",
            "line": 382,
            "bases": [
              "MemoryService"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'debug', 'should_evict', 'ValueError', 'get_service', 'evict', 'setex', 'get', 'keys', 'command', 'find_one', 'near_text', 'split', 'dumps', 'health_check', 'not_equal', 'initialize', 'hybrid', 'utcnow', 'items', 'getLogger', 'uuid4', 'should_promote', 'is_none', 'join', 'fromisoformat', 'less_than', 'append', 'like', 'ping', 'extend', 'all_of', 'contains_any', 'less_equal', 'replace_one', 'get_settings', 'timedelta', 'upper', 'error', 'lower', 'gather', 'DefaultMemoryPolicy', 'LongTermStore', 'list', 'create_task', 'loads', 'isinstance', 'ShortTermStore', 'UnifiedMemoryService', 'greater_equal', 'store', 'is_ready', 'delete_by_id', 'type', 'select_layer', 'values', 'info', 'greater_than', 'insert', 'MemoryItem', 'delete_one', 'near_vector', 'update', 'find', '_translate_simple_filters_to_weaviate', 'contains_all', 'SearchResult', 'equal', 'delete', 'retrieve', 'by_property', 'str', 'RuntimeError', 'fetch_objects', 'MemoryLayer', 'sorted', 'isoformat', 'len', 'promote', 'MetadataQuery', 'warning', 'set', 'getattr', 'limit', 'MidTermStore', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/memory/base.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 55,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "should_promote",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "should_evict",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "select_layer",
            "line": 209,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryLayer",
            "line": 15,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryItem",
            "line": 23,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "SearchResult",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryStore",
            "line": 52,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "MemoryService",
            "line": 98,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "MemoryPolicy",
            "line": 195,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'isoformat', 'TypeVar'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/agents/examples.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "LLMRequest",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.business.llm.provider",
            "item": "get_llm_service",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaTrait",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "ResponseStyle",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "get_persona_manager",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "Agent",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentCapability",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentConfig",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentMessage",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.business.personas.base",
            "item": "PersonaConfig",
            "alias": null,
            "line": 34,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_example_agents",
            "line": 330,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_example_agents",
            "line": 385,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_analyze_task_requirements",
            "line": 305,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConversationalAgent",
            "line": 18,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "TaskExecutorAgent",
            "line": 80,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "ResearchAgent",
            "line": 148,
            "bases": [
              "Agent"
            ],
            "decorators": []
          },
          {
            "name": "CollaborativeAgent",
            "line": 247,
            "bases": [
              "Agent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'recall', 'get_persona_manager', 'remember', 'isdigit', 'lstrip', 'TaskExecutorAgent', '_coordinate_task', 'get_llm_service', '_generate_research_queries', 'sleep', 'startswith', 'complete', 'join', 'LLMRequest', 'PersonaConfig', 'get_agent_manager', 'append', 'execute_workflow', 'get', 'str', 'assign_task', 'AgentMessage', 'split', 'register_agent', 'ConversationalAgent', 'any', 'AgentConfig', 'len', 'create_example_agents', '_execute_task', '_research_topic', 'CollaborativeAgent', 'strip', 'warning', 'lower', 'complete_with_persona', 'ResearchAgent', '_analyze_task_requirements', 'info', 'get_persona', 'list_agents'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "core.services.agents.base",
            "item": "Agent",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentCapability",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentConfig",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentManager",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentMessage",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentState",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentStatus",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "get_agent_manager",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "CollaborativeAgent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "ConversationalAgent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "ResearchAgent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "TaskExecutorAgent",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "create_example_agents",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.services.agents.examples",
            "item": "register_example_agents",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/core/services/agents/base.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "WorkflowContext",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.business.workflows.base",
            "item": "get_workflow_engine",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "Event",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.services.events.event_bus",
            "item": "get_event_bus",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_manager",
            "line": 411,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 87,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 333,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_agent",
            "line": 337,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_agents",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "find_agents_by_capability",
            "line": 387,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentStatus",
            "line": 23,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentCapability",
            "line": 33,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentMessage",
            "line": 46,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AgentConfig",
            "line": 58,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AgentState",
            "line": 73,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Agent",
            "line": 84,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "AgentManager",
            "line": 330,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'ValueError', 'process_message', 'create_task', 'min', 'get_event_bus', 'Event', 'sleep', 'find_agents_by_capability', 'act', 'get_memory_service', 'pop', 'think', 'append', 'execute_workflow', 'get', 'stop', 'add', 'publish', 'store', 'AgentManager', 'AgentMessage', '_main_loop', '_process_message_queue', 'get_workflow_engine', 'AgentState', 'len', 'receive_message', 'error', '_subscribe_to_events', 'send_message', 'set', 'values', 'utcnow', 'subscribe', 'gather', 'info', 'items', 'cancel', 'field', 'start', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "requests",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_source",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_destination",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_connection",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_source_definition_id",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_destination_definition_id",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_all_domains",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AirbyteAutomator",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'create_destination', 'configure_all_domains', 'open', 'load', 'create_source', 'get_source_definition_id', 'print', 'create_connection', 'get', 'getenv', 'glob', 'AirbyteAutomator', 'get_destination_definition_id', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "requests",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 13,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_cluster",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_collections",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "provision_all_domains",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateProvisioner",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'create_cluster', 'open', 'load', 'print', 'provision_all_domains', 'WeaviateProvisioner', 'getenv', 'items', 'glob', 'configure_collections', 'dump', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 1
          }
        ],
        "from": [
          {
            "module": "shared.memory.weaviate_session_cache",
            "item": "WeaviateSessionCache",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_set_get",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 6,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DummyAdapter",
            "line": 5,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_json', 'run', 'append', 'setattr', 'WeaviateSessionCache', 'set_json', 'DummyAdapter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/shared/test_zip_processor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 1
          },
          {
            "module": "io",
            "alias": null,
            "line": 2
          },
          {
            "module": "zipfile",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "shared.data_ingestion.zip_processor",
            "item": "ZipProcessor",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "shared.data_ingestion.base_processor",
            "item": "StorageAdapter",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_zip",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_zip_dedup",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 10,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InMemoryAdapter",
            "line": 9,
            "bases": [
              "StorageAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'len', 'seek', 'BytesIO', 'InMemoryAdapter', 'write_text', 'run', 'write', 'ingest', 'ZipFile', 'ZipProcessor', 'create_zip'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/api/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/integration/test_mcp_servers.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 106
          }
        ],
        "from": [
          {
            "module": "scripts.mcp_integration",
            "item": "MCPAgentInterface",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "scripts.mcp_integration",
            "item": "MCPConfig",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "scripts.mcp_integration",
            "item": "MCPIntegration",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "TestMCPServers",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MCPAgentInterface', 'len', 'initialize', 'close', 'query_mongodb', 'answer_question', 'hybrid_query', 'print', 'MCPIntegration', 'MCPConfig', 'skip', 'get', 'getenv', 'items', 'semantic_search', 'isinstance', 'ClientSession'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/integration/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/packages/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/mcp_server/conftest.py": {
      "imports": {
        "standard": [
          {
            "module": "tempfile",
            "alias": null,
            "line": 8
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "mcp_server.storage.memory_store",
            "item": "MemoryStore",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp_server.tools.tool_manager",
            "item": "ToolManager",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "mcp_server.workflows.workflow_manager",
            "item": "WorkflowManager",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "temp_dir",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b28155ad0>"
            ]
          },
          {
            "name": "memory_config",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b28156710>"
            ]
          },
          {
            "name": "memory_store",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b281557d0>"
            ]
          },
          {
            "name": "tool_config",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b28156d10>"
            ]
          },
          {
            "name": "mock_memory_store",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b28154490>"
            ]
          },
          {
            "name": "tool_manager",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b283875d0>"
            ]
          },
          {
            "name": "mock_tool_manager",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b28384e50>"
            ]
          },
          {
            "name": "workflow_manager",
            "line": 78,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2783c750>"
            ]
          },
          {
            "name": "test_workflow",
            "line": 85,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2783e2d0>"
            ]
          },
          {
            "name": "test_workflow_with_params",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2783f450>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'WorkflowManager', 'str', 'MagicMock', 'Path', 'ToolManager', 'MemoryStore', 'TemporaryDirectory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/mocks/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/mocks/memory_stub.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "packages.shared.src.memory.stubs",
            "item": "InMemoryMemoryManagerStub",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 9,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 12,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConcreteMemoryManager",
            "line": 6,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/mocks/memory_fixtures.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_memory_manager",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27848bd0>"
            ]
          },
          {
            "name": "get_memory_manager_stub",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'AsyncMock'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/mocks/memory_fixtures.py",
          "line": 12,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 15
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 16
          },
          {
            "module": "os",
            "alias": null,
            "line": 341
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 358
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.concrete_memory_manager",
            "item": "FirestoreV1MemoryManager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.storage.postgresql.firestore_memory",
            "item": "FirestoreMemoryManager",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "packages.shared.src.storage.postgresql.v2",
            "item": "FirestoreMemoryManagerV2",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryBenchmark",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MemoryItem', 'getLogger', 'FirestoreV1MemoryManager', 'add_argument', 'run', 'min', 'run_all_benchmarks', 'parse_args', 'float', 'close', 'append', 'run_history_benchmark', 'get', 'skip', 'semantic_search', 'MemoryBenchmark', 'range', 'int', 'run_get_benchmark', 'run_search_benchmark', 'dumps', 'get_conversation_history', 'isoformat', 'basicConfig', 'generate_test_data', 'len', 'teardown', 'get_memory_item', 'setup', 'add_memory_item', 'random', 'initialize', 'FirestoreMemoryManagerV2', 'FirestoreMemoryManager', 'utcnow', 'time', 'info', 'run_add_benchmark', 'ArgumentParser'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
          "line": 18,
          "module": "packages.shared.src.memory.concrete_memory_manager",
          "item": "FirestoreV1MemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
          "line": 20,
          "module": "packages.shared.src.storage.postgresql.firestore_memory",
          "item": "FirestoreMemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
          "line": 21,
          "module": "packages.shared.src.storage.postgresql.v2",
          "item": "FirestoreMemoryManagerV2",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tests/services/test_memory_service.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "HashRecord",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "core.conductor.src.services.memory_service",
            "item": "MemoryService",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_memory_manager",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b282c0490>"
            ]
          },
          {
            "name": "memory_service",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b282c1150>"
            ]
          },
          {
            "name": "test_hash_record_model",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'dict', 'MemoryService', 'assert_called_once', 'utcnow', 'AsyncMock', 'get_by_hash', 'timedelta', 'HashRecord', 'isinstance', 'store_hash'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/conductor/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/conductor/test_agent_registry.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "importlib",
            "item": "import_module",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_llm_agent_is_default",
            "line": 5,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'import_module'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/conductor/test_startup.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "importlib",
            "item": "import_module",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_main_import",
            "line": 5,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_memory_factory_default",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'import_module', 'get_default_memory', 'hasattr'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/conductor/api/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/core/conductor/api/test_query.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "fastapi.testclient",
            "item": "TestClient",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.api.app",
            "item": "app",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "client",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2782b1d0>"
            ]
          },
          {
            "name": "test_api_query_success",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27828bd0>"
            ]
          },
          {
            "name": "test_api_query_with_documents",
            "line": 50,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b28190ad0>"
            ]
          },
          {
            "name": "test_api_query_error_handling",
            "line": 94,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b277ea9d0>"
            ]
          }
        ],
        "classes": [],
        "function_calls": "{'post', 'Exception', 'assert_called_once', 'TestClient', 'len', 'patch', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/packages/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/packages/shared/portkey/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/packages/agents/runtime/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tests/packages/agents/phidata/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/factory_integration/tests/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/factory_integration/tests/test_context_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 8
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "CacheManager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.context_manager",
            "item": "ContextMetadata",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "factory_integration.context_manager",
            "item": "ContextVersion",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "factory_integration.context_manager",
            "item": "UnifiedContextManager",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_weaviate_client",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27fd0350>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestUnifiedContextManager",
            "line": 64,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MagicMock', 'search_similar_contexts', 'assert_called_once_with', 'startswith', 'sleep', 'get_metrics', 'ContextMetadata', 'store_context', 'merge_contexts', 'get_context', 'stop', 'assert_not_called', 'UnifiedContextManager', 'sync_with_factory', 'cleanup_old_versions', 'AsyncMock', 'raises', 'len', 'patch', 'cancelled', 'assert_called_once', 'utcnow', 'start', 'sync_to_factory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "time",
            "alias": null,
            "line": 5
          },
          {
            "module": "aioredis",
            "alias": null,
            "line": 8
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 9
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "CacheEntry",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "CacheManager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "CacheMetrics",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "L1Cache",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "L2Cache",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "L3Cache",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_integration.cache_manager",
            "item": "create_cache_manager",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_cache_entry_creation",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_hit_rate_calculation",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_hit_rate_zero_requests",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "l1_cache",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2781cf10>"
            ]
          },
          {
            "name": "test_get_metrics",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestCacheEntry",
            "line": 22,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestCacheMetrics",
            "line": 36,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestL1Cache",
            "line": 60,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestL2Cache",
            "line": 148,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestL3Cache",
            "line": 249,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestCacheManager",
            "line": 338,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestCreateCacheManager",
            "line": 520,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'assert_called_once_with', 'loads', 'sleep', 'get_metrics', 'isinstance', 'create_cache_manager', 'disconnect', 'L3Cache', 'get', 'stop', 'delete', 'cleanup_expired', 'clear', 'assert_not_called', 'clear_pattern', 'CacheManager', '_warm_cache_loop', 'invalidate_pattern', 'L1Cache', 'L2Cache', 'dumps', 'AsyncMock', 'warm_cache', 'len', 'patch', 'CacheEntry', 'Exception', 'approx', 'cancelled', 'set', 'assert_called_once', 'start', 'connect', 'CacheMetrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/infra/components/postgres_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 28
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 29
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 30
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 31,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PostgresComponent",
            "line": 33,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'join', 'register_outputs', 'get_droplet', 'Command', 'FirewallInboundRuleArgs', 'Firewall', 'FirewallOutboundRuleArgs', 'get', 'ResourceOptions', 'concat', '__init__', 'ConnectionArgs', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
          "line": 29,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
          "line": 30,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/vultr_server_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 1
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 2
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 3
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 9,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "VultrServerComponent",
            "line": 6,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'register_outputs', 'format', 'Command', 'Instance', 'BlockStorage', 'get', 'ResourceOptions', 'VolumeAttachment', '__init__', 'ConnectionArgs', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
          "line": 2,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
          "line": 3,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/weaviate_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 24
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "secret_helper",
            "item": "create_k8s_secret_from_config",
            "alias": null,
            "line": 27,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateComponent",
            "line": 29,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'ResourceRequirementsArgs', 'register_outputs', 'ServicePortArgs', 'ObjectMetaArgs', 'VolumeMountArgs', 'create_k8s_secret_from_config', 'PodSpecArgs', 'VolumeArgs', 'HTTPGetActionArgs', 'ServiceSpecArgs', 'ContainerArgs', 'ProbeArgs', 'SecretKeySelectorArgs', 'get', 'ContainerPortArgs', 'apply', 'PersistentVolumeClaimSpecArgs', 'Deployment', 'Service', 'EnvVarSourceArgs', '__init__', 'super', 'PersistentVolumeClaim', 'LabelSelectorArgs', 'DeploymentSpecArgs', 'EnvVarArgs', 'PersistentVolumeClaimVolumeSourceArgs', 'PodTemplateSpecArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/weaviate_component.py",
          "line": 24,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/database_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 7
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 11,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_database",
            "line": 21,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DatabaseComponent",
            "line": 10,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'export', '_setup_database', 'DatabaseFirewall', 'DatabaseCluster', 'require', 'get', 'DatabaseUser', 'concat'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/database_component.py",
          "line": 7,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/litellm_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LiteLLMComponent",
            "line": 12,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'ResourceRequirementsArgs', 'register_outputs', 'ServicePortArgs', 'ObjectMetaArgs', 'Secret', 'VolumeMountArgs', 'HorizontalPodAutoscalerSpecArgs', 'PodSpecArgs', 'MetricTargetArgs', 'concat', 'VolumeArgs', 'MetricSpecArgs', 'SecretEnvSourceArgs', 'ConfigMap', 'HTTPGetActionArgs', 'ServiceSpecArgs', 'ContainerArgs', 'ProbeArgs', 'get', 'ResourceOptions', 'ContainerPortArgs', 'CrossVersionObjectReferenceArgs', 'str', 'EnvFromSourceArgs', 'Deployment', 'Service', 'ResourceMetricSourceArgs', '__init__', 'super', 'ConfigMapVolumeSourceArgs', 'LabelSelectorArgs', 'DeploymentSpecArgs', 'HorizontalPodAutoscaler', 'PodTemplateSpecArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/litellm_component.py",
          "line": 9,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/ingress_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 72
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_install_nginx_ingress",
            "line": 50,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_install_cert_manager",
            "line": 59,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_certificate_issuer",
            "line": 68,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_ingress",
            "line": 104,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IngressComponent",
            "line": 12,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'ConfigFile', 'register_outputs', 'ObjectMetaArgs', 'HTTPIngressPathArgs', 'IngressRuleArgs', 'ServiceBackendPortArgs', 'sleep', 'IngressSpecArgs', 'IngressBackendArgs', 'get', 'ResourceOptions', '_create_ingress', 'IngressServiceBackendArgs', 'IngressTLSArgs', '_install_nginx_ingress', 'CustomResource', '_install_cert_manager', 'Ingress', 'HTTPIngressRuleValueArgs', '__init__', 'super', '_create_certificate_issuer'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/ingress_component.py",
          "line": 9,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/secret_helper.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 21
          },
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 22
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_k8s_secret_from_config",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'Secret', 'require_secret', 'ObjectMetaArgs', 'Config'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/secret_helper.py",
          "line": 22,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/monitoring_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi_kubernetes",
            "alias": "k8s",
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 15,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_grafana_dashboard",
            "line": 429,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MonitoringComponent",
            "line": 12,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'ResourceRequirementsArgs', 'register_outputs', 'ServiceAccount', 'ObjectMetaArgs', 'ServicePortArgs', 'VolumeMountArgs', 'PodSpecArgs', 'concat', 'ClusterRoleBinding', '_get_grafana_dashboard', 'VolumeArgs', 'ClusterRole', 'ConfigMap', 'ServiceSpecArgs', 'ContainerArgs', 'ContainerPortArgs', 'ResourceOptions', 'apply', 'PersistentVolumeClaimSpecArgs', 'Deployment', 'Service', '__init__', 'super', 'Namespace', 'ConfigMapVolumeSourceArgs', 'PersistentVolumeClaim', 'SubjectArgs', 'RoleRefArgs', 'LabelSelectorArgs', 'KeyToPathArgs', 'PolicyRuleArgs', 'DeploymentSpecArgs', 'EnvVarArgs', 'PersistentVolumeClaimVolumeSourceArgs', 'PodTemplateSpecArgs'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/monitoring_component.py",
          "line": 9,
          "module": "pulumi_kubernetes",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/infra/components/vector_droplet_component.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 28
          },
          {
            "module": "pulumi_digitalocean",
            "alias": "do",
            "line": 29
          },
          {
            "module": "pulumi_command",
            "alias": "command",
            "line": 30
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ComponentResource",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 31,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 39,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "VectorDropletComponent",
            "line": 33,
            "bases": [
              "ComponentResource"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'join', 'register_outputs', 'get_droplet', 'Command', 'super', 'Firewall', 'concat', 'FirewallInboundRuleArgs', 'append', 'FirewallOutboundRuleArgs', 'get', 'ResourceOptions', 'VolumeAttachment', '__init__', 'ConnectionArgs', 'Volume'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
          "line": 29,
          "module": "pulumi_digitalocean",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
          "line": 30,
          "module": "pulumi_command",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/.factory/bridge/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "api_gateway",
            "item": "FactoryBridgeGateway",
            "alias": null,
            "line": 8,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.factory/bridge/api_gateway.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "UUID",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "fastapi.middleware.cors",
            "item": "CORSMiddleware",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 77,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_circuit_breaker",
            "line": 135,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_record_success",
            "line": 160,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_record_failure",
            "line": 166,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_transform_to_mcp_format",
            "line": 324,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_transform_from_mcp_format",
            "line": 336,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_average_response_time",
            "line": 341,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 350,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_request_history",
            "line": 364,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DroidType",
            "line": 27,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskStatus",
            "line": 36,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreakerState",
            "line": 46,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "FactoryRequest",
            "line": 54,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "FactoryResponse",
            "line": 64,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "FactoryBridgeGateway",
            "line": 74,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'uuid4', 'Field', '_transform_from_mcp_format', 'get_metrics', 'on_event', 'fallback_to_mcp', 'ClientSession', 'dict', 'pop', 'close', '_update_average_response_time', 'ClientTimeout', 'append', 'get', 'get_request_history', 'now', 'str', 'FastAPI', 'add_middleware', 'CircuitBreakerState', 'FactoryBridgeGateway', 'isoformat', 'FactoryResponse', '_record_success', 'len', '_transform_to_mcp_format', 'text', 'json', 'error', '_check_circuit_breaker', 'warning', 'process_request', 'time', 'HTTPException', 'items', '_record_failure'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 1
          },
          {
            "module": "requests",
            "alias": null,
            "line": 2
          },
          {
            "module": "json",
            "alias": null,
            "line": 3
          },
          {
            "module": "time",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "enrich_contact",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_call_apollo_api",
            "line": 89,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_process_apollo_person",
            "line": 113,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_store_enriched_contact",
            "line": 147,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_with_claude",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_claude_prompt",
            "line": 186,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ContactEnrichmentAgent",
            "line": 9,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_process_apollo_person', 'int', 'post', 'getLogger', '_generate_claude_prompt', 'error', 'len', 'warning', '_call_apollo_api', 'str', 'dumps', 'get', 'info', 'items', 'sleep', '_store_enriched_contact', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/tool_agent_example.py": {
      "imports": {
        "standard": [
          {
            "module": "requests",
            "alias": null,
            "line": 4
          }
        ],
        "from": [
          {
            "module": "packages.agents.src._base",
            "item": "cherry_aiAgentBase",
            "alias": null,
            "line": 3,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolAgent",
            "line": 6,
            "bases": [
              "cherry_aiAgentBase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 1
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 9,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "enrich_property_data",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_geocode_address",
            "line": 62,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_neighborhood_info",
            "line": 73,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_estimate_property_value",
            "line": 88,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_store_enriched_data",
            "line": 102,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PropertyEnrichmentAgent",
            "line": 6,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_store_enriched_data', 'getLogger', 'debug', '_estimate_property_value', '_geocode_address', '_get_neighborhood_info', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/base.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "setup_tools",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_feedback",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "shutdown",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "BaseAgent",
            "line": 14,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'lower', 'get', 'getLogger', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/llm/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/agent_coordination.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.gateway_adapter",
            "item": "get_gateway_adapter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "AgentMessage",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "log_info",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_warning",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_error",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_debug",
            "line": 145,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_critical",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_exception",
            "line": 153,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 164,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 385,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_capabilities_for_role",
            "line": 391,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 597,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentRole",
            "line": 21,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "BaseAgent",
            "line": 49,
            "bases": [],
            "decorators": []
          },
          {
            "name": "DomainExpertAgent",
            "line": 157,
            "bases": [
              "BaseAgent"
            ],
            "decorators": []
          },
          {
            "name": "WorkerAgent",
            "line": 379,
            "bases": [
              "BaseAgent"
            ],
            "decorators": []
          },
          {
            "name": "Agentconductor",
            "line": 590,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'enumerate', 'list', '_process_data_processor_task', 'process_message', '_execute_worker_task', '_process_crm_task', 'strftime', '_process_analyst_task', '_initialize_workers', 'generate_chat_completion', 'join', 'append', '_execute_with_workers', 'exception', 'get', 'keys', 'now', 'str', 'RuntimeError', '_process_generic_task', '_determine_worker_assignments', 'AgentMessage', 'WorkerAgent', 'sorted', 'isoformat', '_determine_domain', 'len', 'upper', '__init__', 'super', 'error', '_get_capabilities_for_role', 'initialize', '_process_coder_task', 'critical', 'warning', 'DomainExpertAgent', 'lower', 'strip', 'set', 'get_gateway_adapter', '_process_web_researcher_task', 'generate_completion', 'gather', '_initialize_domain_experts', 'info', 'items', '_integrate_results'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 16
          },
          {
            "module": "portkey_ai",
            "alias": null,
            "line": 85
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "provider_name",
            "line": 56,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "is_initialized",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 71,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "provider_name",
            "line": 205,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_initialized",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "_select_model",
            "line": 236,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_model_string",
            "line": 252,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_virtual_key_for_provider",
            "line": 261,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_record_error",
            "line": 272,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 289,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "provider_name",
            "line": 331,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "is_initialized",
            "line": 336,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "_load_config",
            "line": 388,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "_process_env_vars",
            "line": 421,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "GatewayAdapter",
            "line": 21,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "PortkeyGatewayAdapter",
            "line": 68,
            "bases": [
              "GatewayAdapter"
            ],
            "decorators": []
          },
          {
            "name": "KongGatewayAdapter",
            "line": 286,
            "bases": [
              "GatewayAdapter"
            ],
            "decorators": []
          },
          {
            "name": "GatewayAdapterFactory",
            "line": 345,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'getLogger', 'enumerate', '_get_virtual_key_for_provider', 'ValueError', '_load_config', '_record_error', 'startswith', 'isinstance', 'endswith', 'append', 'get', '_select_model', 'create_adapter', 'str', 'RuntimeError', '_parse_model_string', '_process_env_vars', 'split', 'NotImplementedError', 'error', 'initialize', 'warning', 'lower', 'PortkeyGatewayAdapter', 'hasattr', 'open', 'Portkey', 'use_virtual_key', 'time', 'info', 'KongGatewayAdapter', 'items', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/memory/stubs.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 1,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 6,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 10,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "store",
            "line": 15,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 22,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "ttl",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InMemoryMemoryManagerStub",
            "line": 3,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'list', 'scan', 'pop', 'get', 'keys', 'delete', 'rstrip', 'startswith', 'store'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/memory/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "stubs",
            "item": "InMemoryMemoryManagerStub",
            "alias": null,
            "line": 1,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/models/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "base_models",
            "item": "MemoryItem",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "base_models",
            "item": "PersonaConfig",
            "alias": "LegacyPersonaConfig",
            "line": 8,
            "level": 1
          },
          {
            "module": "core_models",
            "item": "AgentData",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "core_models",
            "item": "PersonaConfig",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "core_models",
            "item": "UserInteraction",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "AgentResponse",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "Configuration",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "MemoryRecord",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "PayReadyContact",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "PayReadyLead",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "UserRequest",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "domain_models",
            "item": "WorkflowState",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/models/domain_models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "Field",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UserRequest",
            "line": 23,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentResponse",
            "line": 48,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryRecord",
            "line": 71,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowState",
            "line": 98,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PayReadyContact",
            "line": 124,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PayReadyLead",
            "line": 153,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Configuration",
            "line": 179,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'field', 'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "re",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.version",
            "item": "VERSION",
            "alias": null,
            "line": 322,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_metadata",
            "line": 255,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_dev_note_metadata",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_user_data_metadata",
            "line": 286,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_standard_metadata_fields",
            "line": 301,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "default_visibility",
            "line": 118,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_priority",
            "line": 122,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_tags",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_version",
            "line": 130,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_note_type",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_priority",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_commit_id",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_expiration",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_data_classification",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_pii_detected",
            "line": 203,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "default_retention_period",
            "line": 207,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_data_classification",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_retention_period",
            "line": 221,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_content_hash",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "validate_expiration",
            "line": 235,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MetadataValidationError",
            "line": 18,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "DevNoteType",
            "line": 21,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "PrivacyLevel",
            "line": 34,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MetadataValidator",
            "line": 41,
            "bases": [],
            "decorators": []
          },
          {
            "name": "DevNoteMetadata",
            "line": 97,
            "bases": [
              "MetadataValidator"
            ],
            "decorators": []
          },
          {
            "name": "UserDataMetadata",
            "line": 178,
            "bases": [
              "MetadataValidator"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'ValueError', 'MetadataValidationError', 'isinstance', 'validate', 'join', 'DevNoteType', 'fromisoformat', 'keys', 'callable', 'PrivacyLevel', 'copy', 'union', 'warning', 'match', 'hasattr', 'default_value', 'set', 'getattr', 'utcnow', 'items', 'validate_metadata'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
          "line": 322,
          "module": "packages.shared.src.version",
          "item": "VERSION",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/packages/shared/src/models/core_models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "Field",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaConfig",
            "line": 23,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UserInteraction",
            "line": 43,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentData",
            "line": 63,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'field', 'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/models/base_models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "MemoryItem",
            "line": 12,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentMessage",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaTraits",
            "line": 41,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaConfig",
            "line": 58,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentConfig",
            "line": 76,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentData",
            "line": 95,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'now', 'Field', 'isoformat'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "os",
            "alias": null,
            "line": 14
          },
          {
            "module": "requests",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 63,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_handle_response",
            "line": 91,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_virtual_key",
            "line": 125,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_virtual_keys",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_virtual_key",
            "line": 213,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_virtual_key",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_virtual_key",
            "line": 295,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "rotate_virtual_key",
            "line": 315,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_gateway_config",
            "line": 346,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_gateway_configs",
            "line": 392,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_gateway_config",
            "line": 422,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_gateway_config",
            "line": 449,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_gateway_config",
            "line": 502,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_usage_stats",
            "line": 524,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PortkeyAdminException",
            "line": 26,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "VirtualKey",
            "line": 30,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "GatewayConfig",
            "line": 42,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "PortkeyAdminClient",
            "line": 53,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'update', 'PortkeyAdminException', 'GatewayConfig', 'get_virtual_key', 'append', 'get', 'delete', '_handle_response', 'get_gateway_config', 'patch', 'json', 'Session', 'error', 'warning', 'raise_for_status', 'info', 'VirtualKey'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/portkey/manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "portkey",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "portkey.exceptions",
            "item": "PortkeyError",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_client",
            "line": 55,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_initialized",
            "line": 271,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PortkeyManager",
            "line": 27,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PortkeyError",
            "line": 21,
            "bases": [
              "Exception"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'AttributeError', 'getLogger', 'debug', 'ValueError', 'ImportError', 'isinstance', '_initialize_client', 'join', 'encode', 'run_in_executor', 'get', 'hexdigest', 'str', 'RuntimeError', 'method', 'len', 'ConnectionError', 'error', 'warning', 'sha256', 'hasattr', 'getattr', '_run_method', 'Portkey', 'info', 'get_running_loop'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/shared/src/portkey/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/builder/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "urllib.parse",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          },
          {
            "module": "requests",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "packages.agents.base",
            "item": "BaseAgent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.base_models",
            "item": "AgentData",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 38,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "setup_tools",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "process_feedback",
            "line": 303,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "shutdown",
            "line": 313,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WebScraperRuntimeAgent",
            "line": 23,
            "bases": [
              "BaseAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'ValueError', 'AgentData', 'urlparse', 'update', 'dict', 'close', 'get', '_scrape_with_requests', 'setup_tools', 'str', 'iscoroutinefunction', 'add_raw_agent_data', '_store_result_in_memory', '__init__', 'super', 'Session', 'error', 'warning', 'all', 'getattr', 'raise_for_status', 'to_thread', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/runtime/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/hobby/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/langchain_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "AgentResponse",
            "alias": "AgentOutput",
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "UserRequest",
            "alias": "AgentInput",
            "line": 11,
            "level": 0
          },
          {
            "module": "core.conductor.src.main",
            "item": "short_term_memory",
            "alias": null,
            "line": 84,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "_base",
            "item": "cherry_aiAgentBase",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_langchain_agent",
            "line": 43,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LangChainAgentWrapper",
            "line": 17,
            "bases": [
              "cherry_aiAgentBase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'__import__', 'AttributeError', 'getLogger', 'ValueError', 'AgentOutput', 'agent_class', 'join', 'get', 'str', 'split', 'iscoroutinefunction', 'process', '__init__', 'super', 'error', 'hasattr', 'getattr', 'info', '_initialize_langchain_agent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/phidata_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "AgentResponse",
            "alias": "AgentOutput",
            "line": 9,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "UserRequest",
            "alias": "AgentInput",
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.main",
            "item": "short_term_memory",
            "alias": null,
            "line": 81,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "_base",
            "item": "cherry_aiAgentBase",
            "alias": null,
            "line": 11,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_phidata_agent",
            "line": 41,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PhidataAgentWrapper",
            "line": 15,
            "bases": [
              "cherry_aiAgentBase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'__import__', 'str', 'error', 'getLogger', 'join', 'split', 'ValueError', 'getattr', 'AgentOutput', 'get', 'info', 'agent_class', 'process', '_initialize_phidata_agent', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/routing.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 1
          },
          {
            "module": "time",
            "alias": null,
            "line": 2
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 5
          },
          {
            "module": "random",
            "alias": null,
            "line": 6
          },
          {
            "module": "datetime",
            "alias": null,
            "line": 7
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 4,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_agent",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "route_request",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_candidate_agents",
            "line": 168,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_rate_limits",
            "line": 192,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_rate_limits",
            "line": 206,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_reset_rate_limits_if_needed",
            "line": 217,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_estimate_token_count",
            "line": 228,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_apply_balanced_strategy",
            "line": 235,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_apply_cost_strategy",
            "line": 258,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_apply_performance_strategy",
            "line": 282,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_health_status",
            "line": 300,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_select_shadow_agent",
            "line": 330,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_execute_shadow_test",
            "line": 350,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "record_shadow_test_result",
            "line": 366,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_hash_result",
            "line": 400,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_log_shadow_test_result",
            "line": 406,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_stats",
            "line": 426,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentRouter",
            "line": 12,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'ValueError', '_check_rate_limits', '_apply_performance_strategy', '_get_candidate_agents', '_select_shadow_agent', 'float', 'update', 'encode', 'append', 'get', 'hexdigest', 'now', 'choice', 'str', '_estimate_token_count', 'dumps', '_apply_cost_strategy', '_apply_balanced_strategy', '_execute_shadow_test', 'copy', 'isoformat', 'len', '_log_shadow_test_result', '_hash_result', 'warning', 'sha256', '_reset_rate_limits_if_needed', '_update_rate_limits', 'time', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/_base.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.shared.src.llm_client.portkey_client",
            "item": "PortkeyClient",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.shared.src.memory.memory_manager",
            "item": "MemoryManager",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "AgentResponse",
            "alias": "AgentOutput",
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.models.domain_models",
            "item": "UserRequest",
            "alias": "AgentInput",
            "line": 19,
            "level": 0
          },
          {
            "module": "packages.shared.src.storage.base",
            "item": "ToolRegistry",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiAgentBase",
            "line": 24,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'lower', 'get', 'getLogger', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
          "line": 13,
          "module": "packages.shared.src.llm_client.portkey_client",
          "item": "PortkeyClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
          "line": 16,
          "module": "packages.shared.src.memory.memory_manager",
          "item": "MemoryManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
          "line": 20,
          "module": "packages.shared.src.storage.base",
          "item": "ToolRegistry",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/packages/agents/src/registry.py": {
      "imports": {
        "standard": [
          {
            "module": "importlib",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.agents.src._base",
            "item": "cherry_aiAgentBase",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.agents.src.phidata.team_wrapper",
            "item": "PhidataTeamAgentWrapper",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.agents.src.routing",
            "item": "AgentRouting",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "packages.agents.src.langchain_agent",
            "item": "LangChainAgentWrapper",
            "alias": null,
            "line": 57,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_registry",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_register_builtin_wrappers",
            "line": 51,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_wrapper_class",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_agent",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_wrapper_types",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_wrapper_class_from_path",
            "line": 157,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentRegistry",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'import_module', 'dict', 'AgentRouting', 'get', 'register_wrapper_class', '_register_builtin_wrappers', 'split', 'register_agent', 'issubclass', 'AgentRegistry', 'error', 'strip', 'warning', 'getattr', 'rsplit', 'info', 'items', 'wrapper_class'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/protocols.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Protocol",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "packages.core.src.models",
            "item": "AgentInput",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "packages.core.src.models",
            "item": "AgentOutput",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "AgentProtocol",
            "line": 12,
            "bases": [
              "Protocol"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
          "line": 10,
          "module": "packages.core.src.models",
          "item": "AgentInput",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
          "line": 10,
          "module": "packages.core.src.models",
          "item": "AgentOutput",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/packages/agents/runtime/security/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "packages.agents.base",
            "item": "BaseAgent",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_credentials_manager",
            "line": 374,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 31,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "process_feedback",
            "line": 361,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "shutdown",
            "line": 366,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CredentialsManager",
            "line": 22,
            "bases": [
              "BaseAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'CredentialsManager', 'join', 'next', 'get', 'keys', 'inject_credentials_to_env', 'str', 'iter', 'list_available_credentials', 'process_feedback', 'len', '__init__', 'get_credential', 'super', 'error', 'warning', 'values', 'shutdown', 'info', 'items', 'check_credential_exists'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/phidata/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py": {
      "imports": {
        "standard": [
          {
            "module": "importlib",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "packages.agents.src.phidata.wrapper",
            "item": "PhidataAgentWrapper",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "packages.agents.src.protocols",
            "item": "AgentProtocol",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "packages.agents.src.registry",
            "item": "get_registry",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "packages.phidata.src.cloudsql_pgvector",
            "item": "get_pg_agent_storage",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "packages.phidata.src.cloudsql_pgvector",
            "item": "get_pgvector_memory",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.core.config",
            "item": "get_agent_config",
            "alias": null,
            "line": 67,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_init_team_members",
            "line": 31,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PhidataTeamAgentWrapper",
            "line": 22,
            "bases": [
              "PhidataAgentWrapper",
              "AgentProtocol"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Agent', 'get_pg_agent_storage', 'import_module', 'ValueError', 'ImportError', 'startswith', 'isinstance', 'get_agent_config', 'get_registry', 'replace', 'append', 'get', 'create_agent', 'get_pgvector_memory', 'get_tool', '_get_llm_from_ref', 'tool_class', 'len', 'error', 'strip', 'to_phidata_tool', 'lower', 'hasattr', 'getattr', 'rsplit', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
          "line": 13,
          "module": "packages.agents.src.phidata.wrapper",
          "item": "PhidataAgentWrapper",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
          "line": 18,
          "module": "packages.phidata.src.cloudsql_pgvector",
          "item": "get_pg_agent_storage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
          "line": 18,
          "module": "packages.phidata.src.cloudsql_pgvector",
          "item": "get_pgvector_memory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
          "line": 67,
          "module": "core.conductor.src.core.config",
          "item": "get_agent_config",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/packages/llm/src/portkey_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "portkey_ai",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "config",
            "item": "LLMProviderConfig",
            "alias": null,
            "line": 15,
            "level": 1
          },
          {
            "module": "config",
            "item": "get_provider_config",
            "alias": null,
            "line": 15,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_portkey_headers",
            "line": 23,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_phidata_model",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_model_from_settings",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'update', 'error', 'getLogger', 'configure_phidata_model', 'TypeVar', 'model_class', 'create_portkey_headers', 'createHeaders', 'get_provider_config'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/llm/src/config.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.conductor.src.config.settings",
            "item": "Settings",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_provider_config",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_model_name_for_provider",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LLMProviderConfig",
            "line": 17,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'lower', 'getLogger', 'getattr', 'LLMProviderConfig'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/packages/llm/src/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/memory/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "base",
            "item": "BaseMemory",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryEntry",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemorySearchResult",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryTier",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "dragonfly_cache",
            "item": "DragonflyCache",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "langchain_memory",
            "item": "LangChainMemoryWrapper",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "qdrant_semantic",
            "item": "QdrantSemanticMemory",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 172
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 270
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 158
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "shared.memory.memory_manager",
            "item": "FirestoreMemoryManager",
            "alias": "FirestoreEpisodicMemory",
            "line": 31,
            "level": 0
          },
          {
            "module": "langchain.memory.chat_memory",
            "item": "BaseChatMemory",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "langchain.memory.chat_message_histories",
            "item": "ChatMessageHistory",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "langchain.memory.summary_buffer",
            "item": "ConversationSummaryBufferMemory",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "langchain.memory.utils",
            "item": "get_prompt_input_key",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "AIMessage",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "BaseMemory",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "BaseMessage",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "langchain.schema",
            "item": "HumanMessage",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "utils.structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 33,
            "level": 2
          },
          {
            "module": "base",
            "item": "MemoryEntry",
            "alias": null,
            "line": 34,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 34,
            "level": 1
          },
          {
            "module": "base",
            "item": "MemoryTier",
            "alias": null,
            "line": 34,
            "level": 1
          },
          {
            "module": "dragonfly_cache",
            "item": "DragonflyCache",
            "alias": null,
            "line": 35,
            "level": 1
          },
          {
            "module": "qdrant_semantic",
            "item": "QdrantSemanticMemory",
            "alias": null,
            "line": 36,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 51,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "memory_variables",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "load_memory_variables",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_context",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 398,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "LangChainMemoryWrapper",
            "line": 40,
            "bases": [
              "BaseChatMemory"
            ],
            "decorators": []
          },
          {
            "name": "ConversationSummaryBufferMemoryWrapper",
            "line": 388,
            "bases": [
              "ConversationSummaryBufferMemory"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'FirestoreEpisodicMemory', 'run_until_complete', 'get_prompt_input_key', 'debug', 'list', 'asave_context', 'AIMessage', 'create_task', 'ImportError', 'DragonflyCache', 'isinstance', 'stats', 'join', 'MemoryEntry', 'QdrantSemanticMemory', 'MemoryMetadata', 'append', '_load_recent_messages', 'get', 'keys', 'delete', 'clear', 'extend', 'sort', 'list_keys', 'str', 'LangChainMemoryWrapper', 'split', 'HumanMessage', 'isoformat', 'len', 'new_event_loop', '__init__', 'super', 'error', 'initialize', 'warning', 'save', '_migrate_old_messages', 'utcnow', 'info', 'should_migrate', 'aclear', 'get_logger', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 14,
          "module": "langchain.memory.chat_memory",
          "item": "BaseChatMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 15,
          "module": "langchain.memory.chat_message_histories",
          "item": "ChatMessageHistory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 16,
          "module": "langchain.memory.summary_buffer",
          "item": "ConversationSummaryBufferMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 17,
          "module": "langchain.memory.utils",
          "item": "get_prompt_input_key",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 18,
          "module": "langchain.schema",
          "item": "AIMessage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 18,
          "module": "langchain.schema",
          "item": "BaseMemory",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 18,
          "module": "langchain.schema",
          "item": "BaseMessage",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
          "line": 18,
          "module": "langchain.schema",
          "item": "HumanMessage",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/memory/base.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "update_access",
            "line": 40,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compute_hash",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__post_init__",
            "line": 60,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__lt__",
            "line": 117,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 128,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "should_migrate",
            "line": 296,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryTier",
            "line": 18,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryMetadata",
            "line": 26,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryEntry",
            "line": 52,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemorySearchResult",
            "line": 110,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "BaseMemory",
            "line": 121,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'uuid4', 'Lock', 'MemoryTier', 'total_seconds', 'fromisoformat', 'MemoryMetadata', 'encode', 'get', 'hexdigest', 'str', 'RuntimeError', 'dumps', 'isoformat', 'cls', 'initialize', 'compute_hash', 'save', 'sha256', 'utcnow', 'field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/rules/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "rule_engine",
            "item": "Rule",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "RuleCategory",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "RuleEngine",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "RuleSeverity",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "RuleViolation",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "check_content",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "get_rule_engine",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rule_engine",
            "item": "load_rules_from_file",
            "alias": null,
            "line": 10,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/rules/rule_engine.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "re",
            "alias": null,
            "line": 11
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Pattern",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "utils.structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 19,
            "level": 2
          },
          {
            "module": "utils.structured_logging",
            "item": "with_correlation_id",
            "alias": null,
            "line": 19,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_rule_engine",
            "line": 551,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_content",
            "line": 558,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_rules_from_file",
            "line": 568,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 52,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__post_init__",
            "line": 87,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "check",
            "line": 97,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 169,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 185,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_rules_from_file",
            "line": 192,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "with_correlation_id"
            ]
          },
          {
            "name": "add_rule",
            "line": 247,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_rule",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "enable_rule",
            "line": 277,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "disable_rule",
            "line": 293,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_rule_set",
            "line": 309,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_to_rule_set",
            "line": 329,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_from_rule_set",
            "line": 351,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_default_rule_set",
            "line": 372,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "check_content",
            "line": 390,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "with_correlation_id"
            ]
          },
          {
            "name": "get_rule",
            "line": 443,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rules_by_category",
            "line": 454,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rules_by_severity",
            "line": 465,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rules_by_tag",
            "line": 476,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rule_set",
            "line": 487,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rule_sets",
            "line": 498,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_rules_to_file",
            "line": 506,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RuleSeverity",
            "line": 23,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RuleCategory",
            "line": 31,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RuleViolation",
            "line": 43,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Rule",
            "line": 74,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "RuleEngine",
            "line": 182,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'debug', 'get_logger', 'list', 'group', 'count', 'remove', 'RuleSeverity', 'get_rule_engine', 'isinstance', 'load', 'check_content', 'append', 'get', 'add', 'add_rule', 'RuleViolation', 'extend', 'str', 'compile', 'to_dict', 'any', 'check', 'len', 'check_func', 'cls', 'end', 'discard', 'dump', 'error', 'warning', 'RuleCategory', 'lower', 'open', 'load_rules_from_file', 'set', 'values', 'finditer', 'exists', 'from_dict', 'info', 'items', 'start', 'field', 'RuleEngine'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "threading",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_performance_monitor",
            "line": 178,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_operation",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "monitor",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_slow_operations",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset",
            "line": 142,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_recommendations",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27812750>"
            ]
          }
        ],
        "classes": [
          {
            "name": "PerformanceMonitor",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'min', 'get_metrics', 'Lock', 'record_operation', 'append', 'get', 'keys', 'get_slow_operations', 'clear', 'func', 'max', 'sorted', 'any', 'wraps', 'len', 'PerformanceMonitor', 'sum', 'defaultdict', 'warning', 'values', 'time', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/secret_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_secret_manager",
            "line": 170,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_secret",
            "line": 177,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_local_secrets",
            "line": 49,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_secret",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b277ea650>"
            ]
          },
          {
            "name": "clear_cache",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_multiple_secrets",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SecretManager",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'debug', 'get_secret', 'startswith', 'dict', 'is_file', 'replace', 'load', 'cache_clear', 'run_in_executor', 'get', 'clear', 'get_event_loop', 'get_secret_manager', '_load_local_secrets', 'zip', 'len', 'upper', 'SecretManager', 'error', 'warning', 'open', 'get_secret_async', 'exists', 'gather', 'time', 'info', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py": {
      "imports": {
        "standard": [
          {
            "module": "copy",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "pickle",
            "alias": null,
            "line": 13
          },
          {
            "module": "zlib",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "CompressionLevel",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 18,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "compress",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "_compress_string",
            "line": 61,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "_compress_dict",
            "line": 126,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "_compress_list",
            "line": 209,
            "is_private": true,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "decompress",
            "line": 272,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "get_compression_stats",
            "line": 314,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          }
        ],
        "classes": [
          {
            "name": "MemoryCompressionEngine",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', 'fromhex', 'loads', 'isinstance', 'round', '_compress_list', 'join', 'encode', 'get', 'keys', 'hex', '_compress_string', 'str', '_compress_dict', 'split', 'dumps', 'sorted', 'decode', 'compress', 'len', 'sum', 'type', 'error', 'warning', 'set', 'deepcopy', 'items', 'decompress'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/memory_key.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_memory_key",
            "line": 443,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "parse_memory_key",
            "line": 466,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_memory_key_pattern",
            "line": 477,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 36,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__str__",
            "line": 62,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__repr__",
            "line": 82,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__eq__",
            "line": 90,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__hash__",
            "line": 97,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "parse",
            "line": 102,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "create",
            "line": 162,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "with_user",
            "line": 206,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_session",
            "line": 224,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_agent",
            "line": 242,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_scope",
            "line": 260,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "matches_pattern",
            "line": 279,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_parent_of",
            "line": 318,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate_key",
            "line": 355,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 372,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__str__",
            "line": 398,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "matches",
            "line": 425,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryKeyScope",
            "line": 18,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryKey",
            "line": 29,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MemoryKeyPattern",
            "line": 369,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'uuid4', 'group', 'ValueError', 'isinstance', 'hash', 'join', 'append', 'MemoryKey', 'matches_pattern', 'str', 'split', 'compile', 'len', 'sum', 'cls', 'MemoryKeyPattern', 'match', 'parse', 'get_logger', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/structured_logging.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "functools",
            "alias": null,
            "line": 11
          },
          {
            "module": "inspect",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "sys",
            "alias": null,
            "line": 15
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "contextvars",
            "item": "ContextVar",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "configure_logging",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_correlation_id",
            "line": 208,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_correlation_id",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_correlation_id",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_context",
            "line": 332,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_context",
            "line": 343,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_context",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_logger",
            "line": 382,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_log_with_extra",
            "line": 89,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "debug",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "info",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "warning",
            "line": 135,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "error",
            "line": 139,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "critical",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "exception",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 361,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__enter__",
            "line": 370,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__exit__",
            "line": 378,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "sync_wrapper",
            "line": 288,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b276fdf90>"
            ]
          }
        ],
        "classes": [
          {
            "name": "StructuredLogFormatter",
            "line": 32,
            "bases": [
              "Formatter"
            ],
            "decorators": []
          },
          {
            "name": "StructuredLogger",
            "line": 86,
            "bases": [
              "Logger"
            ],
            "decorators": []
          },
          {
            "name": "LogContext",
            "line": 358,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'debug', 'getMessage', 'fromtimestamp', '_log_with_extra', 'formatException', 'update', 'StreamHandler', 'reset', 'append', 'exception', 'removeHandler', 'get', 'currentframe', 'print', 'setFormatter', 'str', 'func', 'TypeVar', 'setLoggerClass', 'dumps', 'iscoroutinefunction', 'addHandler', 'copy', 'isoformat', 'StructuredLogFormatter', 'wraps', 'cast', 'getmodule', '_log', 'super', 'ContextVar', 'hasattr', 'getLevelName', 'set', 'Formatter', 'setLevel', 'info', 'items', 'FileHandler'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "re",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 16,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "estimate_tokens",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_fit_entry",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_entry",
            "line": 108,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_entry",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_budget",
            "line": 142,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "reset_usage",
            "line": 157,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_usage_stats",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TokenBudgetManager",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'int', 'str', 'estimate_tokens', 'getLogger', 'debug', 'round', 'max', 'warning', 'list', 'dumps', 'compile', 'findall', 'can_fit_entry', 'get', 'keys', 'info', 'len', 'isinstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/idempotency.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "functools",
            "alias": null,
            "line": 10
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "time",
            "alias": null,
            "line": 13
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 14
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 20
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Awaitable",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "cast",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 26,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "idempotent",
            "line": 416,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_idempotency_manager",
            "line": 456,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "configure_idempotency",
            "line": 463,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "default_idempotent",
            "line": 485,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "generate",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "from_request",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "from_args",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "is_valid",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 102,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_cleanup_expired",
            "line": 185,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 202,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 300,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_with_redis",
            "line": 315,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "decorator",
            "line": 433,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IdempotencyKey",
            "line": 34,
            "bases": [],
            "decorators": []
          },
          {
            "name": "InMemoryIdempotencyStore",
            "line": 99,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RedisIdempotencyStore",
            "line": 199,
            "bases": [],
            "decorators": []
          },
          {
            "name": "IdempotencyManager",
            "line": 297,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'uuid4', 'IdempotencyManager', 'UUID', 'RedisIdempotencyStore', 'count', 'ImportError', 'get_result', 'loads', 'sleep', 'from_args', 'mark_in_progress', 'pop', 'bool', 'execute_idempotent', 'encode', '_cleanup_expired', 'get', 'delete', 'clear_in_progress', 'hexdigest', 'range', 'now', 'str', 'idempotent', 'from_url', 'func', 'TypeVar', 'dumps', 'isoformat', 'key_func', 'wraps', 'create_with_redis', 'cast', 'len', 'type', 'error', 'warning', 'sha256', 'all', 'lower', 'set', 'get_idempotency_manager', 'time', 'info', 'store_result', 'items', 'get_logger', 'InMemoryIdempotencyStore', 'from_request'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/token_estimation.py": {
      "imports": {
        "standard": [
          {
            "module": "functools",
            "alias": null,
            "line": 10
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 11
          },
          {
            "module": "json",
            "alias": null,
            "line": 12
          },
          {
            "module": "re",
            "alias": null,
            "line": 13
          },
          {
            "module": "tiktoken",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 25,
            "level": 2
          },
          {
            "module": "structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 28,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_encoding",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_compute_hash",
            "line": 105,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_manage_cache_size",
            "line": 124,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "count_tokens",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "count_tokens_recursive",
            "line": 184,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "estimate_memory_entry_tokens",
            "line": 225,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "with_token_counting",
            "line": 256,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 305,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "estimate_tokens",
            "line": 313,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "estimate_memory_entry",
            "line": 324,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_cache",
            "line": 335,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 270,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27811d10>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TokenEstimator",
            "line": 302,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'debug', 'list', 'ValueError', 'count_tokens_recursive', 'encoding_for_model', 'isinstance', '_manage_cache_size', '_compute_hash', 'encode', 'findall', 'get', 'keys', 'clear', 'hexdigest', 'get_encoding', 'int', 'str', 'func', 'max', 'TypeVar', 'dumps', 'compile', 'to_dict', 'wraps', 'len', 'sum', 'count_tokens', 'error', 'md5', 'warning', 'items', 'get_logger', 'estimate_memory_entry_tokens'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "gc",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "threading",
            "alias": null,
            "line": 13
          },
          {
            "module": "time",
            "alias": null,
            "line": 14
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "functools",
            "item": "wraps",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_performance_tuner",
            "line": 314,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cache_result",
            "line": 322,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "track_performance",
            "line": 330,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "limit_concurrency",
            "line": 338,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 342,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_apply_environment_settings",
            "line": 66,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_start_monitoring",
            "line": 103,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_reduce_memory_usage",
            "line": 128,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cache_result",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "track_performance",
            "line": 224,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 268,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_batch_size",
            "line": 280,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "monitor_resources",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 157,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 193,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "wrapper",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2781cc10>"
            ]
          },
          {
            "name": "wrapper",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b277f9110>"
            ]
          }
        ],
        "classes": [
          {
            "name": "PerformanceTuner",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'PerformanceTuner', 'getLogger', 'cpu_count', 'list', 'Thread', 'min', 'async_track_performance', 'sleep', 'get_metrics', 'get_performance_tuner', 'float', '_reduce_memory_usage', 'getpid', 'cpu_percent', 'endswith', 'get', 'keys', 'clear', 'limit_concurrency', 'int', 'str', 'func', 'Process', 'max', '_start_monitoring', 'sorted', 'Semaphore', 'cache_result', 'wraps', '_apply_environment_settings', 'track_performance', 'error', 'async_cache_result', 'warning', 'lower', 'hasattr', 'memory_info', 'collect', 'time', 'info', 'start', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 18
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "weaviate.exceptions",
            "item": "WeaviateException",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "mcp",
            "item": "Server",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Resource",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "setup_handlers",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WeaviateDirectServer",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'AuthApiKey', 'where', 'run', 'with_meta_count', 'Tool', '_insert', 'startswith', 'main', 'WeaviateDirectServer', 'setup_handlers', 'Server', 'Resource', 'list_all', 'dirname', 'close', 'replace', 'append', '_create_collection', 'get', 'now', 'int', 'str', 'delete_by_id', 'text2vec_openai', 'near_text', 'split', 'list_tools', 'WeaviateClient', 'dumps', 'isoformat', 'basicConfig', 'list_resources', '_connect_to_weaviate', 'ConnectionParams', 'getenv', 'len', '_get_schema', '_search', 'ProtocolParams', 'DataType', 'over_all', '_delete', 'do', 'read_resource', 'error', 'call_tool', 'abspath', 'hasattr', 'getattr', 'Property', 'info', 'insert', '_get_stats', 'connect', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "time",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 58,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_validate_secrets",
            "line": 73,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_health_status",
            "line": 181,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPServerConfig",
            "line": 23,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HealthStatus",
            "line": 46,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BaseMCPServer",
            "line": 55,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "RetryHelper",
            "line": 211,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ExampleMCPServer",
            "line": 243,
            "bases": [
              "BaseMCPServer"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', '_validate_secrets', 'ValueError', 'run', 'create_task', 'min', 'self_heal', 'sleep', 'isinstance', 'join', 'append', 'get', 'check_health', 'range', 'str', 'MCPServerConfig', 'func', 'on_start', 'ExampleMCPServer', 'any', 'on_stop', 'getenv', 'publish_event', '_health_check_loop', 'HealthStatus', 'error', 'warning', 'attempt_self_heal', 'all', 'values', 'utcnow', 'time', 'info', 'start', 'cancel'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "sys",
            "alias": null,
            "line": 14
          },
          {
            "module": "time",
            "alias": null,
            "line": 15
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 562
          },
          {
            "module": "redis",
            "alias": null,
            "line": 125
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "ScrapingResult",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "ScrapingStrategy",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "ScrapingTask",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "TaskPriority",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "web_scraping_ai_agents",
            "item": "WebScrapingconductor",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 504,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 504,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 505,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base_mcp_server",
            "item": "BaseMCPServer",
            "alias": null,
            "line": 19,
            "level": 1
          },
          {
            "module": "base_mcp_server",
            "item": "MCPServerConfig",
            "alias": null,
            "line": 19,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_format_search_result",
            "line": 433,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_scrape_result",
            "line": 454,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_analysis_result",
            "line": 483,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiWebScrapingMCPServer",
            "line": 29,
            "bases": [
              "BaseMCPServer"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'handle_get_task_status', 'post', 'getLogger', 'enumerate', '_format_scrape_result', 'ValueError', 'run', 'create_task', '_format_analysis_result', 'JSONResponse', 'cherry_aiWebScrapingMCPServer', 'sleep', 'on_event', 'handle_analyze_content', 'hash', 'handle_scrape_website', 'join', 'dirname', 'append', 'get', 'stop', 'ScrapingStrategy', 'ping', 'range', 'handle_bulk_scrape', 'int', 'str', 'MCPServerConfig', 'FastAPI', 'qsize', 'on_start', 'WebScrapingconductor', 'list_tools', 'dumps', 'health_check', 'Redis', 'isoformat', 'basicConfig', 'getenv', 'publish_event', 'len', 'sum', '__init__', 'super', 'error', 'call_tool', 'abspath', '_format_search_result', 'submit_task', 'hasattr', 'warning', 'values', 'get_health_status', 'handle_web_search', 'info', 'HTTPException', 'ScrapingTask', 'start', 'items', 'time', 'get_result'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 13
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "os",
            "alias": null,
            "line": 16
          },
          {
            "module": "redis.asyncio",
            "alias": "aioredis",
            "line": 20
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 474
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "neo4j",
            "item": "Driver",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "neo4j",
            "item": "GraphDatabase",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AsyncOpenAI",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "sentence_transformers",
            "item": "SentenceTransformer",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "mcp_server.config.loader",
            "item": "load_config",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "mcp_server.config.models",
            "item": "MCPConfig",
            "alias": null,
            "line": 28,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "generate_id",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_neo4j_session",
            "line": 123,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_node_tx",
            "line": 142,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_tx_logic",
            "line": 224,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_tx",
            "line": 270,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_tx",
            "line": 319,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_tx",
            "line": 345,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_tx",
            "line": 362,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryItem",
            "line": 79,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "EntityItem",
            "line": 91,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MemoryQuery",
            "line": 99,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DeleteMemoryArgs",
            "line": 107,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ClearGraphArgs",
            "line": 111,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolDefinition",
            "line": 114,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'load_config', 'run_until_complete', 'Field', 'run_sync_neo4j_op', 'single', 'clear_graph_logic', 'ValueError', 'run', 'execute_write', 'AsyncOpenAI', 'startswith', 'loads', 'driver', 'store_memory_logic', 'delete_memory_logic', 'isinstance', 'dict', 'join', 'encode', 'setex', 'append', 'get', 'extract_entities_with_llm', 'hexdigest', 'get_event_loop', 'store_extracted_entities', 'sort', 'int', 'str', 'FastAPI', 'from_url', 'capitalize', 'dumps', 'split', 'SentenceTransformer', 'tolist', 'isoformat', 'basicConfig', 'schema', 'get_neo4j_session', 'getenv', 'MCPToolDefinition', 'upper', 'ConnectionError', 'session', 'execute_read', 'error', 'md5', 'strip', 'lower', 'all', 'hasattr', 'sha256', 'generate_id', 'values', 'utcnow', 'get_agent_memories_logic', 'to_thread', 'info', 'HTTPException', 'query_memory_logic', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          "line": 22,
          "module": "neo4j",
          "item": "Driver",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          "line": 22,
          "module": "neo4j",
          "item": "GraphDatabase",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
          "line": 25,
          "module": "sentence_transformers",
          "item": "SentenceTransformer",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "os",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 15
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 315
          },
          {
            "module": "hmac",
            "alias": null,
            "line": 316
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 542
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_configurations",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow_steps",
            "line": 356,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentMode",
            "line": 45,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowStatus",
            "line": 57,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Task",
            "line": 66,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Workflow",
            "line": 81,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModeSwitch",
            "line": 95,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowRequest",
            "line": 102,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolDefinition",
            "line": 109,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Workflow', 'post', 'getLogger', 'safe_load', 'Field', 'enumerate', 'put', 'execute_task', 'uuid4', 'Queue', 'run', 'create_task', 'sleep', 'on_event', 'get_workflow_steps', 'bool', 'load_configurations', 'encode', 'append', 'get', 'hexdigest', 'body', 'new', 'str', 'FastAPI', 'qsize', 'add_task', 'sorted', 'isoformat', 'basicConfig', 'Task', 'getenv', 'MCPToolDefinition', 'len', 'sum', 'Depends', 'compare_digest', 'error', 'open', 'task_worker', 'values', 'exists', 'utcnow', 'info', 'HTTPException'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/deployment_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "logging",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "base_mcp_server",
            "item": "BaseMCPServer",
            "alias": null,
            "line": 14,
            "level": 1
          },
          {
            "module": "base_mcp_server",
            "item": "MCPServerConfig",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DeploymentServer",
            "line": 22,
            "bases": [
              "BaseMCPServer"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'MCPServerConfig', 'getLogger', 'sleep', 'ValueError', 'run', 'print', 'main', 'basicConfig', 'get', 'info', 'stop', 'getenv', 'start', 'DeploymentServer', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/conductor_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_logs",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "restart_agent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_config",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "update_agent_config",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_metrics",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.workflow_runner",
            "item": "run_workflow",
            "alias": "run_workflow_sync",
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 67,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "setup_handlers",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConductorServer",
            "line": 64,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'run_workflow_sync', 'run_workflow', 'run', 'Tool', 'get_all_agents', 'run_agent_task', 'setup_handlers', 'get_agent_config', 'Server', 'join', 'dirname', 'get', 'list_tools', 'get_agent_logs', 'ConductorServer', 'TextContent', 'call_tool', 'abspath', 'get_agent_metrics', 'stdio_server', 'insert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/memory_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 20,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "setup_database",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_handlers",
            "line": 34,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryServer",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'uuid4', 'add_to_knowledge_base', 'setup_database', 'enumerate', 'run', 'search_memories', 'loads', 'setup_handlers', 'isinstance', 'Server', 'join', 'dirname', 'get_recent_memories', 'get', 'store_conversation', 'print', 'str', 'create_session', 'list_tools', 'health_check', 'get_conversation_history', 'store_memory', 'MemoryServer', 'getenv', 'len', 'upper', 'TextContent', 'get_session_with_history', 'call_tool', 'abspath', 'search_knowledge', 'search_conversations', 'stdio_server', 'insert', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/tools_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 5
          },
          {
            "module": "json",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "core.conductor.src.tools.executor",
            "item": "ToolExecutor",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.conductor.src.tools.registry",
            "item": "ToolRegistry",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "core.conductor.src.tools.implementations",
            "item": "cache_tools",
            "alias": null,
            "line": 36,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_register_tool_implementations",
            "line": 33,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "setup_handlers",
            "line": 45,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolsServer",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'search_tools', 'run', 'Tool', 'register_implementation', 'startswith', 'setup_handlers', 'Server', 'join', 'ToolsServer', 'dirname', 'ToolExecutor', 'append', 'get', 'get_tool', 'extend', '_register_tool_implementations', 'ToolRegistry', 'list_tools', 'dumps', 'sorted', 'len', 'TextContent', 'call_tool', 'abspath', 'execute', 'set', 'values', 'items', 'stdio_server'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 17
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 18
          },
          {
            "module": "redis.asyncio",
            "alias": "redis_async",
            "line": 19
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Literal",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "motor.motor_asyncio",
            "item": "AsyncIOMotorClient",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "UnifiedMemoryService",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "MemoryItem",
            "alias": "CoreMemoryItem",
            "line": 26,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "SearchResult",
            "alias": "CoreSearchResult",
            "line": 26,
            "level": 0
          },
          {
            "module": "core.services.memory.base",
            "item": "MemoryLayer",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "core.infrastructure.connectivity.base",
            "item": "ServiceRegistry",
            "alias": null,
            "line": 33,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "get_settings",
            "alias": null,
            "line": 34,
            "level": 0
          },
          {
            "module": "core.infrastructure.config.settings",
            "item": "AppSettings",
            "alias": null,
            "line": 34,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 57,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_service",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPServiceRegistry",
            "line": 51,
            "bases": [
              "ServiceRegistry"
            ],
            "decorators": []
          },
          {
            "name": "MemoryItemResponse",
            "line": 192,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SearchResultResponse",
            "line": 200,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RememberRequest",
            "line": 204,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RememberResponse",
            "line": 210,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RecallRequest",
            "line": 215,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SearchMemoriesRequest",
            "line": 218,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SearchMemoriesResponse",
            "line": 225,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ForgetRequest",
            "line": 229,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ForgetResponse",
            "line": 232,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "GetMemoryStatsResponse",
            "line": 236,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolProperty",
            "line": 239,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolParameters",
            "line": 244,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolDefinition",
            "line": 249,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'AuthApiKey', 'MemoryItemResponse', 'get_default_database', 'run', 'AsyncIOMotorClient', 'ForgetResponse', 'SearchMemoriesResponse', 'loads', 'on_event', 'MCPToolProperty', 'evict', 'get_memory_service', 'close', 'append', 'is_connected', 'get', 'ping', 'store', 'retrieve', 'int', 'MCPToolParameters', 'command', 'FastAPI', 'from_url', 'is_ready', 'str', 'SearchResultResponse', 'WeaviateClient', 'get_settings', 'isoformat', 'basicConfig', 'getenv', 'MCPToolDefinition', 'upper', 'RememberResponse', 'initialize_services', 'Depends', 'len', 'ConnectionError', 'MCPServiceRegistry', 'error', 'GetMemoryStatsResponse', 'initialize', 'critical', 'warning', 'shutdown_services', 'from_params', 'get_stats', 'info', 'HTTPException', 'items', 'connect', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
          "line": 20,
          "module": "motor.motor_asyncio",
          "item": "AsyncIOMotorClient",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 12
          },
          {
            "module": "os",
            "alias": null,
            "line": 13
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 16
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 17
          },
          {
            "module": "weaviate.classes",
            "alias": "wvc",
            "line": 18
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "mcp_server.config.weaviate_mcp_config",
            "item": "get_weaviate_client_params",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "mcp_server.config.weaviate_mcp_config",
            "item": "validate_weaviate_config",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "mcp_server.config.weaviate_mcp_config",
            "item": "log_weaviate_config",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "_translate_simple_filters",
            "line": 357,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "GetSchemaRequest",
            "line": 45,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AddObjectRequest",
            "line": 50,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AddObjectResponse",
            "line": 56,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "GetObjectRequest",
            "line": 61,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "GetObjectResponse",
            "line": 66,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DeleteObjectRequest",
            "line": 72,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DeleteObjectResponse",
            "line": 76,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HybridSearchRequest",
            "line": 80,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SearchResultItem",
            "line": 96,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "HybridSearchResponse",
            "line": 103,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RawGraphQLRequest",
            "line": 107,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RawGraphQLResponse",
            "line": 110,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolProperty",
            "line": 114,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolParameters",
            "line": 119,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPToolDefinition",
            "line": 124,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'Field', 'get_weaviate_client_params', 'run', 'HybridSearchResponse', 'on_event', 'isinstance', 'MCPToolProperty', 'DeleteObjectResponse', 'greater_than', 'list_all', 'close', '_translate_simple_filters', 'append', 'is_connected', 'validate_weaviate_config', 'get', 'equal', 'by_property', 'int', 'all_of', 'RuntimeError', 'FastAPI', 'delete_by_id', 'is_ready', 'str', 'MCPToolParameters', 'WeaviateClient', 'init_weaviate_client', 'to_dict', 'basicConfig', 'getenv', 'MCPToolDefinition', 'upper', 'len', 'not_equal', 'Depends', 'ConnectionError', 'MetadataQuery', 'error', 'SearchResultItem', 'critical', 'warning', 'from_params', 'hybrid', 'RawGraphQLResponse', 'lower', 'hasattr', 'GetObjectResponse', 'raw', 'info', 'HTTPException', 'items', 'AddObjectResponse', 'insert', 'fetch_object_by_id', 'connect'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 10
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timezone",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "collections",
            "item": "OrderedDict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "TextContent",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp.types",
            "item": "Tool",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "mcp_server.base.enhanced_server_base",
            "item": "EnhancedMCPServerBase",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "mcp_server.base.enhanced_server_base",
            "item": "logger",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": "get_intelligent_cache",
            "line": 24,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": "IntelligentCacheType",
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 49,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_cache_key",
            "line": 80,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "VectorBatchProcessor",
            "line": 26,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedMemoryServer",
            "line": 46,
            "bases": [
              "EnhancedMCPServerBase"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'get_performance_metrics', 'uuid4', 'enumerate', 'insert_record', 'IntelligentCacheType', 'execute_with_retry', 'sleep', 'get_metrics', '_generate_cache_key', 'dirname', '_handle_tool_internal', 'close', 'initialize_connection_pool', 'encode', 'vector_search', 'append', '_get_memory_statistics', 'get', 'hexdigest', 'range', 'now', 'extend', 'get_intelligent_cache', 'cleanup', 'str', 'process_func', 'invalidate_pattern', 'insert_vector', 'dumps', 'isoformat', 'getenv', 'len', 'upper', 'timedelta', 'TextContent', 'sum', '__init__', 'super', 'process_vectors_in_batches', 'error', 'initialize', 'md5', 'abspath', 'warning', 'set', 'VectorBatchProcessor', 'info', 'execute_query', 'insert', '_optimize_agent_memories', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 224
          },
          {
            "module": "os",
            "alias": null,
            "line": 227
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 13,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "tool_name",
            "line": 20,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "context_window_size",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property",
              "abstractmethod"
            ]
          },
          {
            "name": "tool_name",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "context_window_size",
            "line": 69,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "__init__",
            "line": 135,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "tool_name",
            "line": 141,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "context_window_size",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          }
        ],
        "classes": [
          {
            "name": "IToolAdapter",
            "line": 15,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "CopilotAdapter",
            "line": 60,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          },
          {
            "name": "GeminiAdapter",
            "line": 132,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'bool', 'basicConfig', 'get', '_store_in_copilot_context'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/interfaces/storage.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 14,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 58,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 63,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 75,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_keys",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_by_hash",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search",
            "line": 87,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 91,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IMemoryStorage",
            "line": 16,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "SyncMemoryStorage",
            "line": 51,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'run_until_complete', 'initialize', 'save', 'health_check', 'get', 'delete', 'get_by_hash', 'get_event_loop', 'search', 'list_keys'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/interfaces/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 59
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 13,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 57,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_memory",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_memory",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_memory",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search_memory",
            "line": 84,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "optimize_context_window",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_memory_status",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IMemoryManager",
            "line": 15,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "SyncMemoryManager",
            "line": 50,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_memory', 'create_memory', 'run_until_complete', 'initialize', 'get_memory_status', 'optimize_context_window', 'update_memory', 'get_event_loop', 'search_memory', 'delete_memory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/managers/performance_memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "threading",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.memory_manager",
            "item": "IMemoryManager",
            "alias": null,
            "line": 15,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "CompressionLevel",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryScope",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryType",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "StorageTier",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "storage.optimized_memory_storage",
            "item": "OptimizedMemoryStorage",
            "alias": null,
            "line": 17,
            "level": 2
          },
          {
            "module": "storage.sync_storage_adapter",
            "item": "SyncStorageAdapter",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "utils.performance_monitor",
            "item": "get_performance_monitor",
            "alias": null,
            "line": 19,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 46,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_evict_cache_items",
            "line": 471,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_clean_cache_if_needed",
            "line": 497,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PerformanceMemoryManager",
            "line": 23,
            "bases": [
              "IMemoryManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', '_check_initialized', 'min', 'SyncStorageAdapter', 'OptimizedMemoryStorage', 'dict', 'MemoryEntry', 'pop', 'record_operation', 'MemoryMetadata', 'append', 'get', 'keys', 'delete', 'store', 'retrieve', '_evict_cache_items', 'int', 'str', '_clean_cache_if_needed', 'sorted', 'len', 'error', 'initialize', 'get_health', 'hasattr', 'getattr', 'time', 'info', 'get_performance_monitor', 'items', 'RLock', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/managers/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "re",
            "alias": null,
            "line": 44
          },
          {
            "module": "copy",
            "alias": null,
            "line": 99
          },
          {
            "module": "copy",
            "alias": null,
            "line": 495
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.memory_manager",
            "item": "IMemoryManager",
            "alias": null,
            "line": 15,
            "level": 2
          },
          {
            "module": "interfaces.storage",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 17,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "CompressionLevel",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 18,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "estimate_tokens",
            "line": 30,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_fit_entry",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_entry",
            "line": 68,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "remove_entry",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_budget",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compress",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 166,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_tool",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TokenBudgetManager",
            "line": 22,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MemoryCompressionEngine",
            "line": 89,
            "bases": [],
            "decorators": []
          },
          {
            "name": "StandardMemoryManager",
            "line": 163,
            "bases": [
              "IMemoryManager"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'list', 'sync_update', 'can_fit_entry', 'sync_delete', 'isinstance', 'is_expired', 'TokenBudgetManager', 'join', '_compress_for_tool', 'findall', 'get_available_budget', 'append', 'get', 'MemoryCompressionEngine', 'delete', 'sync_create', 'keys', 'sort', 'list_keys', 'int', 'str', 'estimate_tokens', 'max', 'split', 'dumps', 'health_check', 'compress', 'len', 'error', 'initialize', 'create_memory', 'warning', 'save', 'set', 'get_status', 'deepcopy', 'update_hash', 'time', 'info', 'items', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "yaml",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models.agent_mode",
            "item": "DEFAULT_AGENT_MODES",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "models.agent_mode",
            "item": "AgentMode",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "models.agent_mode",
            "item": "AgentModeConfig",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "models.agent_mode",
            "item": "AgentModeType",
            "alias": null,
            "line": 18,
            "level": 2
          },
          {
            "module": "utils.structured_logging",
            "item": "get_logger",
            "alias": null,
            "line": 19,
            "level": 2
          },
          {
            "module": "utils.structured_logging",
            "item": "with_correlation_id",
            "alias": null,
            "line": 19,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_mode_manager",
            "line": 328,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_active_mode",
            "line": 335,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_active_mode",
            "line": 339,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_prompt",
            "line": 343,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_register_default_modes",
            "line": 73,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_from_file",
            "line": 80,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_mode",
            "line": 143,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_mode",
            "line": 160,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_active_mode",
            "line": 171,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_active_mode",
            "line": 194,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_all_modes",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_mode_names",
            "line": 212,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_prompt",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_mode_context",
            "line": 241,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "clear_mode_context",
            "line": 261,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_to_file",
            "line": 279,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentModeManager",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'safe_load', 'debug', 'list', 'AgentMode', 'load_from_file', 'register_mode', 'update', 'get_agent_mode_manager', 'format_prompt', 'load', 'append', 'get_mode', 'AgentModeType', 'get', 'now', 'AgentModeManager', '_register_default_modes', 'len', 'AgentModeConfig', 'dump', 'get_active_mode', 'error', 'warning', 'lower', 'open', 'values', 'exists', 'info', 'items', 'get_logger', 'set_active_mode'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "CircuitBreakerError",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "ArchitectAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "CodeAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "DebugAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "ReliabilityAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "KnowledgeAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "mcp_server.adapters.factory_mcp_adapter",
            "item": "CircuitState",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_adapter",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b283efb50>"
            ]
          },
          {
            "name": "test_metrics_calculation",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "architect_adapter",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27885650>"
            ]
          },
          {
            "name": "code_adapter",
            "line": 203,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27764fd0>"
            ]
          },
          {
            "name": "debug_adapter",
            "line": 247,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2780d8d0>"
            ]
          },
          {
            "name": "reliability_adapter",
            "line": 294,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2787f110>"
            ]
          },
          {
            "name": "knowledge_adapter",
            "line": 341,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b275e1f50>"
            ]
          }
        ],
        "classes": [
          {
            "name": "MockMCPServer",
            "line": 25,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestCircuitBreaker",
            "line": 32,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestFactoryMCPAdapter",
            "line": 86,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestArchitectAdapter",
            "line": 152,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestCodeAdapter",
            "line": 199,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestDebugAdapter",
            "line": 243,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestReliabilityAdapter",
            "line": 290,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestKnowledgeAdapter",
            "line": 337,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestIntegration",
            "line": 405,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestAdapter",
            "line": 93,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'ArchitectAdapter', 'ReliabilityAdapter', 'MockMCPServer', 'sleep', 'get_metrics', 'main', 'get', 'range', 'optimize_embeddings', 'DebugAdapter', 'health_check', 'CodeAdapter', 'AsyncMock', 'raises', 'len', 'translate_to_factory', 'CircuitBreaker', 'translate_to_mcp', 'call', 'KnowledgeAdapter', 'TestAdapter', 'Exception', 'process_request', 'process_alert_stream'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/roo_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RooAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "factory_ai",
            "item": "FactoryAI",
            "alias": null,
            "line": 185,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 14,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 45,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_map_method_to_action",
            "line": 215,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_incidents",
            "line": 234,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_remediation_actions",
            "line": 262,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_mock_response",
            "line": 297,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IncidentSeverity",
            "line": 18,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RemediationStatus",
            "line": 27,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ReliabilityAdapter",
            "line": 35,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'FactoryAI', '_map_method_to_action', '_get_mock_response', 'append', 'get', 'clear', 'now', 'extend', '_format_incidents', '_format_remediation_actions', 'isoformat', 'len', '__init__', 'super', 'error', 'execute', 'warning', 'process_request'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
          "line": 185,
          "module": "factory_ai",
          "item": "FactoryAI",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "factory_ai",
            "item": "FactoryAI",
            "alias": null,
            "line": 174,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_map_method_to_action",
            "line": 205,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_search_results",
            "line": 224,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_mock_response",
            "line": 250,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "KnowledgeAdapter",
            "line": 16,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'getLogger', 'debug', 'enumerate', 'execute', 'warning', 'hash', 'process_request', '_get_mock_response', 'append', 'get', '_format_search_results', 'len', 'FactoryAI', '_map_method_to_action', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
          "line": 174,
          "module": "factory_ai",
          "item": "FactoryAI",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/adapters/config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_config_from_env",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_config",
            "line": 168,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitBreakerConfig",
            "line": 12,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DroidConfig",
            "line": 20,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ArchitectConfig",
            "line": 30,
            "bases": [
              "DroidConfig"
            ],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CodeConfig",
            "line": 39,
            "bases": [
              "DroidConfig"
            ],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DebugConfig",
            "line": 51,
            "bases": [
              "DroidConfig"
            ],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ReliabilityConfig",
            "line": 62,
            "bases": [
              "DroidConfig"
            ],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "KnowledgeConfig",
            "line": 73,
            "bases": [
              "DroidConfig"
            ],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AdapterSystemConfig",
            "line": 91,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          }
        ],
        "function_calls": "{'int', 'DebugConfig', 'AdapterSystemConfig', 'ArchitectConfig', 'lower', 'ValueError', 'CodeConfig', 'ReliabilityConfig', 'CircuitBreakerConfig', 'getenv', 'KnowledgeConfig', 'field', 'upper'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/portkey_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PortkeyAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/codex_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CodexAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "factory_ai",
            "item": "FactoryAI",
            "alias": null,
            "line": 142,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 11,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 25,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_map_method_to_action",
            "line": 168,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_diagrams",
            "line": 186,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_mock_response",
            "line": 208,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ArchitectAdapter",
            "line": 15,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'getLogger', 'debug', 'execute', 'warning', '_format_diagrams', '_get_mock_response', 'append', 'get', 'FactoryAI', '_map_method_to_action', '__init__', 'super'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
          "line": 142,
          "module": "factory_ai",
          "item": "FactoryAI",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/adapters/example_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "ArchitectAdapter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "CodeAdapter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "DebugAdapter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "ReliabilityAdapter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters",
            "item": "KnowledgeAdapter",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "mcp_server.adapters.config",
            "item": "load_config_from_env",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "mcp_server.adapters.config",
            "item": "validate_config",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "mcp_server.adapters.config",
            "item": "DEVELOPMENT_CONFIG",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 50,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MockMCPServer",
            "line": 31,
            "bases": [],
            "decorators": []
          },
          {
            "name": "IntegratedAdapterSystem",
            "line": 47,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'optimize_system_performance', 'ArchitectAdapter', 'getLogger', 'ReliabilityAdapter', 'MockMCPServer', 'run', 'IntegratedAdapterSystem', 'load_config_from_env', 'main', 'health_check_all', 'get', 'keys', 'debug_production_issue', 'design_and_implement_system', 'str', 'DebugAdapter', 'health_check', 'basicConfig', 'CodeAdapter', 'len', 'validate_config', 'sum', 'KnowledgeAdapter', 'error', 'warning', 'process_request', 'values', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/openrouter_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "OpenRouterAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 198
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 17,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "tool_name",
            "line": 38,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "context_window_size",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "property"
            ]
          },
          {
            "name": "_estimate_tokens",
            "line": 256,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CopilotAdapter",
            "line": 21,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'sleep', 'isinstance', 'replace', 'encode', 'expanduser', 'append', 'get', 'range', 'digest', 'max', 'dumps', 'len', 'sum', '_estimate_tokens', 'error', 'warning', 'sha256', 'NamedTemporaryFile', 'lower', 'exists', 'write', 'unlink', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/cursor_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CursorAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/openai_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "OpenAIAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "factory_mcp_adapter",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "factory_mcp_adapter",
            "item": "CircuitBreakerError",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "architect_adapter",
            "item": "ArchitectAdapter",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "code_adapter",
            "item": "CodeAdapter",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "debug_adapter",
            "item": "DebugAdapter",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "reliability_adapter",
            "item": "ReliabilityAdapter",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "knowledge_adapter",
            "item": "KnowledgeAdapter",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_should_attempt_reset",
            "line": 91,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_success",
            "line": 97,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_failure",
            "line": 102,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 134,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_update_circuit_state_metric",
            "line": 283,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 292,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitState",
            "line": 23,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreakerError",
            "line": 30,
            "bases": [
              "Exception"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreaker",
            "line": 35,
            "bases": [],
            "decorators": []
          },
          {
            "name": "FactoryMCPAdapter",
            "line": 109,
            "bases": [
              "ABC"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Gauge', 'labels', '_fallback_to_mcp', 'get_metrics', 'CircuitBreakerError', 'Counter', 'total_seconds', '_update_circuit_state_metric', 'observe', 'get', 'now', '_on_success', 'handle_request', 'str', 'func', 'TypeVar', 'inc', 'isoformat', 'timedelta', 'translate_to_factory', 'CircuitBreaker', 'translate_to_mcp', 'call', '_on_failure', 'error', 'warning', 'hasattr', 'Histogram', 'set', 'getattr', '_should_attempt_reset', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "factory_ai",
            "item": "FactoryAI",
            "alias": null,
            "line": 166,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_map_method_to_action",
            "line": 191,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_format_solutions",
            "line": 210,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_mock_response",
            "line": 234,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DebugAdapter",
            "line": 16,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'error', 'getLogger', 'debug', 'enumerate', 'execute', '_format_solutions', 'warning', 'process_request', '_get_mock_response', 'append', 'format_exc', 'get', 'FactoryAI', '_map_method_to_action', '__init__', 'super', 'type'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
          "line": 166,
          "module": "factory_ai",
          "item": "FactoryAI",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncIterator",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "factory_ai",
            "item": "FactoryAI",
            "alias": null,
            "line": 168,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "factory_mcp_adapter",
            "item": "FactoryMCPAdapter",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_map_method_to_action",
            "line": 245,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_mock_response",
            "line": 264,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_mock_code",
            "line": 335,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_mock_tests",
            "line": 398,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CodeAdapter",
            "line": 16,
            "bases": [
              "FactoryMCPAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'close_stream', '_handle_streaming_request', 'create_task', 'id', 'send_stream_chunk', 'FactoryAI', '_map_method_to_action', 'stream', '_get_mock_response', 'get', '_stream_code_generation', 'str', 'split', '_generate_mock_tests', 'len', '__init__', 'super', 'error', '_generate_mock_code', 'execute', 'warning', 'hasattr'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
          "line": 168,
          "module": "factory_ai",
          "item": "FactoryAI",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/adapters/claude_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ClaudeAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/grok_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "GrokAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/adapters/deepseek_adapter.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "mcp_server.interfaces.tool_adapter",
            "item": "IToolAdapter",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_name",
            "line": 19,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DeepSeekAdapter",
            "line": 10,
            "bases": [
              "IToolAdapter"
            ],
            "decorators": []
          }
        ],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/models/agent_mode.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "validate_token_multiplier",
            "line": 43,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27881890>"
            ]
          },
          {
            "name": "to_dict",
            "line": 62,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_prompt_template",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_constraints_text",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "has_required_context",
            "line": 100,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "missing_context",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_prompt",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentModeType",
            "line": 16,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentModeConfig",
            "line": 30,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentMode",
            "line": 54,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 49,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 126,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'validator', 'join', 'Field', 'enumerate', 'all', 'get_prompt_template', 'ValueError', 'dumps', 'AgentModeConfig', 'format'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/models/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/models/memory.py": {
      "imports": {
        "standard": [
          {
            "module": "hashlib",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "to_dict",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 82,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "to_dict",
            "line": 111,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "from_dict",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "classmethod"
            ]
          },
          {
            "name": "is_expired",
            "line": 142,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_access",
            "line": 147,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compute_hash",
            "line": 152,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_hash",
            "line": 157,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryType",
            "line": 17,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryScope",
            "line": 26,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CompressionLevel",
            "line": 34,
            "bases": [
              "int",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "StorageTier",
            "line": 44,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "MemoryMetadata",
            "line": 52,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MemoryEntry",
            "line": 98,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          }
        ],
        "function_calls": "{'compute_hash', 'sha256', 'dumps', 'encode', 'to_dict', 'from_dict', 'time', 'get', 'hexdigest', 'field', 'cls'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 6
          },
          {
            "module": "time",
            "alias": null,
            "line": 7
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "backoff",
            "alias": null,
            "line": 13
          },
          {
            "module": "asyncpg",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Counter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Histogram",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "prometheus_client",
            "item": "Gauge",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "mcp.server",
            "item": "Server",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "mcp.server.stdio",
            "item": "stdio_server",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_should_attempt_reset",
            "line": 60,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_success",
            "line": 66,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_on_failure",
            "line": 71,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 82,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 115,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "track_request",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 159,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_base_handlers",
            "line": 177,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_memory_usage",
            "line": 214,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_connection_count",
            "line": 219,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_error_rate",
            "line": 225,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_avg_response_time",
            "line": 231,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 136,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CircuitState",
            "line": 25,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CircuitBreaker",
            "line": 32,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ConnectionPoolManager",
            "line": 79,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MCPMetrics",
            "line": 112,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedMCPServerBase",
            "line": 156,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_custom_tools', 'getLogger', 'MCPMetrics', 'Gauge', 'handle_custom_tool', 'run', 'labels', 'create_pool', 'on_exception', 'Server', 'Counter', 'close', 'get', 'observe', 'fetchval', 'now', '_on_success', 'acquire', 'str', 'get_size', 'func', '_setup_base_handlers', 'Process', 'TypeVar', 'list_tools', 'inc', 'isoformat', '_calculate_error_rate', 'basicConfig', '_get_avg_response_time', 'timedelta', 'CircuitBreaker', '_get_connection_count', '_check_dependencies', 'call', '_get_memory_usage', '_on_failure', 'error', 'initialize', 'call_tool', 'Exception', 'memory_info', 'Histogram', 'set', 'get_health_status', 'utcnow', 'time', '_should_attempt_reset', 'items', 'stdio_server', 'ConnectionPoolManager', 'cleanup'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 20,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_workflows",
            "line": 34,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_available_workflows",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_workflow",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute_cross_tool_workflow",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WorkflowManager",
            "line": 17,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'enumerate', 'glob', 'join', 'replace', 'load', 'append', 'execute_workflow', 'get', 'str', 'len', 'error', '_load_workflows', 'execute', 'open', 'set', 'exists', 'info', 'items', 'get_enabled_tools'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/workflows/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/monitoring/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 10
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 11
          },
          {
            "module": "curses",
            "alias": null,
            "line": 15
          },
          {
            "module": "argparse",
            "alias": null,
            "line": 17
          },
          {
            "module": "os",
            "alias": null,
            "line": 18
          },
          {
            "module": "sys",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "deque",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "main",
            "line": 393,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 47,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_alerts",
            "line": 122,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_system_metrics",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "format_duration",
            "line": 173,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "draw_dashboard",
            "line": 184,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_once",
            "line": 371,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ServerMetrics",
            "line": 25,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MCPHealthDashboard",
            "line": 44,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'run_monitoring_loop', '_check_alerts', 'field', 'enumerate', 'getch', 'add_argument', 'run', 'create_task', 'min', 'strftime', 'disk_usage', 'check_server_health', 'sleep', 'main', 'parse_args', 'ClientSession', 'getmaxyx', 'MCPHealthDashboard', 'cpu_percent', 'monitor', 'dirname', 'ClientTimeout', 'append', 'run_in_executor', 'nodelay', 'get', 'check_all_servers', 'deque', 'curs_set', 'clear', 'get_event_loop', 'range', 'ord', 'now', 'print', 'init_pair', 'str', 'refresh', 'dumps', 'format_duration', 'run_once', 'isoformat', 'len', 'sum', 'color_pair', 'get_system_metrics', 'dump', 'json', 'defaultdict', 'ServerMetrics', 'virtual_memory', 'abspath', 'open', 'values', 'wrapper', 'gather', 'time', 'items', 'cancel', 'ArgumentParser', 'insert', 'addstr'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "click",
            "alias": null,
            "line": 11
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "rich.console",
            "item": "Console",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "rich.layout",
            "item": "Layout",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "rich.live",
            "item": "Live",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "rich.panel",
            "item": "Panel",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "rich.table",
            "item": "Table",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_health_table",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'str', 'Table', 'add_column', 'add_row', 'total_seconds', 'split', 'AsyncClient', 'print', 'get', 'Console', 'startswith', 'now', 'json'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "modes",
            "item": "get_mode",
            "alias": null,
            "line": 17,
            "level": 1
          },
          {
            "module": "transitions",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 18,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "add_memory_key",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "add_result",
            "line": 59,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_status",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 79,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 376,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "OperationStatus",
            "line": 22,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "OperationContext",
            "line": 30,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BoomerangOperation",
            "line": 69,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RooMemoryCategory",
            "line": 356,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RooMemoryManager",
            "line": 366,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'Field', 'add_result', 'isinstance', 'update_status', 'dict', 'append', 'get_mode', 'get', 'store', 'retrieve', 'str', 'int', 'add_memory_key', 'len', 'error', 'prepare_transition', 'get_operation', 'time', 'info', 'OperationContext', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "get_all_agents",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "mcp_server.servers.conductor_server",
            "item": "run_agent_task",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "mcp_server.storage.async_memory_store",
            "item": "AsyncMemoryStore",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_setup_environment",
            "line": 37,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_default_agents",
            "line": 70,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_register_mode_handlers",
            "line": 99,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "enable_auto_mode",
            "line": 335,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "disable_auto_mode",
            "line": 340,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "cherry_aiRooIntegration",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'run', 'get_all_agents', 'run_agent_task', '_setup_environment', 'cherry_aiRooIntegration', 'get', 'keys', 'store', 'print', 'now', 'str', '_store_interaction', 'dumps', 'process_roo_request', 'isoformat', 'initialize_cherry_ai_roo', 'len', 'AsyncMemoryStore', '_register_mode_handlers', 'handler', 'error', 'initialize', 'test', 'get_status', 'info', '_get_default_agents', 'insert', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/rules.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "re",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Pattern",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "validator",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_rule_engine",
            "line": 351,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "compile_pattern",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b2813f0d0>"
            ]
          },
          {
            "name": "matches",
            "line": 67,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "matches",
            "line": 104,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 134,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_rule",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "register_rules",
            "line": 148,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "evaluate",
            "line": 158,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rules_by_intent",
            "line": 187,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_rules_by_type",
            "line": 199,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RuleType",
            "line": 18,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RuleIntent",
            "line": 30,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RuleSeverity",
            "line": 42,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RuleCondition",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Rule",
            "line": 87,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RuleEngine",
            "line": 124,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'debug', 'Field', 'startswith', 'isinstance', 'endswith', 'bool', 'append', 'register_rule', 'get', 'str', 'matches', 'Rule', 'compile', 'validator', 'values', 'register_rules', 'items', 'RuleCondition', 'RuleEngine', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "memory_hooks",
            "item": "BoomerangOperation",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "modes",
            "item": "MODES",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "modes",
            "item": "RooMode",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "modes",
            "item": "RooModeCapability",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "modes",
            "item": "get_mode",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "rules",
            "item": "Rule",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "rules",
            "item": "RuleEngine",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "rules",
            "item": "RuleIntent",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "rules",
            "item": "RuleType",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "transitions",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 12,
            "level": 1
          },
          {
            "module": "transitions",
            "item": "TransitionContext",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/transitions.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "modes",
            "item": "get_mode",
            "alias": null,
            "line": 16,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "add_memory_key",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "mark_completed",
            "line": 46,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 60,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TransitionContext",
            "line": 20,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModeTransitionManager",
            "line": 51,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', 'Field', 'list', 'isinstance', 'update', 'dict', 'append', 'get_mode', 'store', 'retrieve', 'TransitionContext', 'str', 'add_memory_key', 'error', 'values', 'time', 'mark_completed', 'info', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/config/models.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ServerConfig",
            "line": 12,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StorageConfig",
            "line": 25,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CopilotConfig",
            "line": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "GeminiConfig",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPConfig",
            "line": 65,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 22,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 33,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 46,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 58,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 80,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Field'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/config/weaviate_mcp_config.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthClientPassword",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthClientCredentials",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "log_weaviate_config",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "validate_weaviate_config",
            "line": 78,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_weaviate_client_params",
            "line": 99,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'update', 'error', 'getLogger', 'AuthApiKey', 'lower', 'warning', 'get_weaviate_client_params', 'AuthClientCredentials', 'validate_weaviate_config', 'AuthClientPassword', 'info', 'getenv', 'loads', 'items', 'log_weaviate_config', 'isinstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/config/loader.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "models",
            "item": "MCPConfig",
            "alias": null,
            "line": 13,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "load_config_from_file",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_config_from_env",
            "line": 36,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "merge_configs",
            "line": 132,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "load_config",
            "line": 156,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'error', 'getLogger', 'debug', 'dict', 'warning', 'lower', 'open', 'load', 'load_config_from_env', 'merge_configs', 'copy', 'MCPConfig', 'load_config_from_file', 'info', 'items', 'isinstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/config/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "loader",
            "item": "load_config",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "loader",
            "item": "load_config_from_env",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "loader",
            "item": "load_config_from_file",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "loader",
            "item": "merge_configs",
            "alias": null,
            "line": 7,
            "level": 1
          },
          {
            "module": "models",
            "item": "CopilotConfig",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "models",
            "item": "GeminiConfig",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "models",
            "item": "MCPConfig",
            "alias": null,
            "line": 8,
            "level": 1
          },
          {
            "module": "models",
            "item": "StorageConfig",
            "alias": null,
            "line": 8,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/config/memory_config_DEPRECATED.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 28,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "os",
            "alias": null,
            "line": 12
          },
          {
            "module": "time",
            "alias": null,
            "line": 13
          },
          {
            "module": "re",
            "alias": null,
            "line": 620
          },
          {
            "module": "json",
            "alias": null,
            "line": 663
          },
          {
            "module": "json",
            "alias": null,
            "line": 706
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 16,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 17,
            "level": 2
          },
          {
            "module": "utils.performance_monitor",
            "item": "get_performance_monitor",
            "alias": null,
            "line": 18,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 35,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_index_terms",
            "line": 573,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_search_terms",
            "line": 606,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "OptimizedMemoryStorage",
            "line": 22,
            "bases": [
              "IMemoryStorage"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', '_get_index_terms', '_persist_to_storage', 'remove', 'loads', 'isinstance', 'Lock', 'update', 'dirname', 'next', 'bool', 'replace', 'load', 'record_operation', 'append', 'get', 'keys', 'add', 'retrieve', 'store', 'str', '_get_search_terms', 'max', 'split', 'sub', 'dumps', '_load_from_persistence', 'copy', '_update_search_index', 'len', '_clean_expired_keys', 'makedirs', 'dump', 'get_health', 'error', 'warning', 'lower', 'hasattr', 'open', 'set', 'getattr', 'values', 'exists', 'time', 'info', 'get_performance_monitor', 'items', 'iter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/memory_store.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "threading",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_memory",
            "line": 51,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_start_cleanup_thread",
            "line": 78,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get",
            "line": 114,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set",
            "line": 155,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 204,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "sync",
            "line": 234,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_full_key",
            "line": 254,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup_task",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryStore",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', 'Thread', 'sleep', 'glob', '_start_cleanup_thread', '_get_full_key', 'load', 'fromisoformat', 'get', 'now', 'mkdir', 'isoformat', 'timedelta', 'len', '_load_memory', 'dump', 'error', 'open', 'set', 'exists', 'unlink', 'info', 'start'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "threading",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 14,
            "level": 2
          },
          {
            "module": "utils.performance_monitor",
            "item": "get_performance_monitor",
            "alias": null,
            "line": 15,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_event_loop",
            "line": 33,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_run_coroutine",
            "line": 43,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "initialize",
            "line": 66,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "store",
            "line": 70,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retrieve",
            "line": 83,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_keys",
            "line": 107,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "search",
            "line": 118,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_health",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SyncStorageAdapter",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'run_until_complete', 'is_running', 'result', 'run_coroutine_threadsafe', 'delete', 'get_event_loop', 'retrieve', 'store', '_run_coroutine', 'set_event_loop', 'list_keys', 'new_event_loop', '_get_event_loop', 'get_health', 'initialize', 'get_performance_monitor', 'RLock', 'get_running_loop', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "heapq",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 14
          },
          {
            "module": "time",
            "alias": null,
            "line": 15
          },
          {
            "module": "sys",
            "alias": null,
            "line": 208
          },
          {
            "module": "re",
            "alias": null,
            "line": 307
          }
        ],
        "from": [
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 19,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 20,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryScope",
            "alias": null,
            "line": 20,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryType",
            "alias": null,
            "line": 20,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_tokenize_text",
            "line": 305,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_relevance",
            "line": 312,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InMemoryStorage",
            "line": 24,
            "bases": [
              "IMemoryStorage"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'heappop', 'getLogger', 'debug', 'create_task', '_background_cleanup', 'startswith', 'sleep', 'isinstance', 'is_expired', 'update_access', 'update', 'heappush', 'append', '_remove_from_indexes', 'get', 'keys', 'delete', 'add', 'getsizeof', 'sort', 'str', '_calculate_relevance', '_add_to_indexes', 'split', 'done', 'dumps', 'intersection', 'len', 'sum', '_tokenize_text', 'discard', 'defaultdict', 'error', 'lower', 'set', 'values', 'update_hash', 'time', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/memory_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "interfaces.storage",
            "item": "IMemoryStorage",
            "alias": null,
            "line": 14,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryEntry",
            "alias": null,
            "line": 15,
            "level": 2
          },
          {
            "module": "models.memory",
            "item": "MemoryMetadata",
            "alias": null,
            "line": 15,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "StorageBridgeAdapter",
            "line": 19,
            "bases": [
              "IMemoryStorage"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'startswith', 'isinstance', 'Lock', 'dict', 'pop', 'MemoryEntry', 'MemoryMetadata', 'append', 'get', 'delete', 'store', 'retrieve', 'list_keys', 'get_health', 'initialize', 'hasattr', 'time', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 22,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_read_file",
            "line": 83,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_write_file",
            "line": 95,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_full_key",
            "line": 287,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AsyncMemoryStore",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'read', 'list', 'create_task', 'loads', 'sleep', 'glob', '_get_full_key', 'Lock', 'fromisoformat', 'get', 'now', 'mkdir', '_cleanup_task', 'dumps', 'isoformat', 'timedelta', 'len', '_load_memory', 'error', 'open', 'set', 'exists', 'write', 'to_thread', 'info'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/tools/tool_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 90
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "cline_integration",
            "item": "ClineModeManager",
            "alias": null,
            "line": 126,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_enabled_tools",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "execute",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_execute_roo",
            "line": 78,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_execute_cline",
            "line": 114,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_execute_gemini",
            "line": 141,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_execute_copilot",
            "line": 156,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ToolManager",
            "line": 16,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'list', '_execute_copilot', 'run', '_execute_cline', 'ClineModeManager', 'get', 'keys', '_execute_gemini', 'extend', 'str', 'error', 'execute_in_mode', 'strip', '_execute_roo', 'open', 'write', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
          "line": 126,
          "module": "cline_integration",
          "item": "ClineModeManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/mcp_server/tools/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/adapters/gemini_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "time",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "memory_hooks",
            "item": "BoomerangOperation",
            "alias": null,
            "line": 12,
            "level": 2
          },
          {
            "module": "memory_hooks",
            "item": "RooMemoryManager",
            "alias": null,
            "line": 12,
            "level": 2
          },
          {
            "module": "modes",
            "item": "get_mode",
            "alias": null,
            "line": 13,
            "level": 2
          },
          {
            "module": "rules",
            "item": "RuleEngine",
            "alias": null,
            "line": 14,
            "level": 2
          },
          {
            "module": "rules",
            "item": "create_rule_engine",
            "alias": null,
            "line": 14,
            "level": 2
          },
          {
            "module": "transitions",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 15,
            "level": 2
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "GeminiRooAdapter",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'ModeTransitionManager', 'getLogger', 'start_operation', 'get_recent_changes_for_file', 'prepare_context', 'dict', 'evaluate', 'get_mode', 'complete_transition', 'get_transition', 'get', 'store_mode_context', 'create_rule_engine', 'retrieve_mode_contexts', 'store_code_change', 'BoomerangOperation', 'error', 'prepare_transition', 'get_operation', 'RooMemoryManager', 'time', 'advance_operation'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/mcp_server/roo/adapters/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "gemini_adapter",
            "item": "GeminiRooAdapter",
            "alias": null,
            "line": 9,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 15
          },
          {
            "module": "base64",
            "alias": null,
            "line": 16
          },
          {
            "module": "io",
            "alias": null,
            "line": 18
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 266
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 451
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "PIL",
            "item": "Image",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "src.shared.storage_adapter",
            "item": "StorageAdapter",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "src.operator_mode.operator_manager",
            "item": "OperatorManager",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AsyncOpenAI",
            "alias": null,
            "line": 175,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AsyncOpenAI",
            "alias": null,
            "line": 353,
            "level": 0
          },
          {
            "module": "openai",
            "item": "AsyncOpenAI",
            "alias": null,
            "line": 416,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ImageGenerationController",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'read', 'enumerate', 'ValueError', '_download_and_store_image', 'AsyncOpenAI', 'strftime', 'startswith', 'sleep', 'StorageAdapter', 'isinstance', 'ClientSession', 'complete', 'join', 'close', '_generate_stable_diffusion', '_create_dalle3_variations', 'append', 'get', 'upload_file', 'hexdigest', '_enhance_prompt', '_store_generation_record', 'str', 'create_variation', 'edit', 'complete_with_image', 'dumps', 'OperatorManager', '_generate_midjourney', 'isoformat', 'b64encode', 'decode', 'await_task_completion', '_generate_dalle3', 'NotImplementedError', 'fetch_one', 'error', 'LLMClient', 'strip', '_load_image_data', 'NamedTemporaryFile', 'open', '_apply_style_preset', 'submit_task', '_edit_dalle3', 'sha256', 'write', 'utcnow', 'unlink', 'info', 'UnifiedDatabase', 'generate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
          "line": 17,
          "module": "PIL",
          "item": "Image",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
          "line": 20,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
          "line": 21,
          "module": "src.shared.storage_adapter",
          "item": "StorageAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
          "line": 22,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 15
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 16
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 516
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.shared.storage_adapter",
            "item": "StorageAdapter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "src.multimedia_generation.image_gen_controller",
            "item": "ImageGenerationController",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "src.operator_mode.operator_manager",
            "item": "OperatorManager",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "VideoGenerationController",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'read', 'enumerate', '_generate_stable_video', 'ValueError', '_combine_videos', '_generate_runway', 'generate_video_from_image', 'strftime', 'startswith', 'sleep', 'StorageAdapter', '_image_to_video_stable', 'generate_video_from_text', 'isinstance', 'ClientSession', '_store_video', 'complete', 'join', '_generate_pika', 'append', 'get', '_store_generation_record', 'str', 'dumps', 'OperatorManager', '_enhance_motion_prompt', 'isoformat', '_enhance_video_prompt', '_generate_narration', 'len', '_add_audio', 'await_task_completion', 'sum', 'analyze_image', 'fetch_one', 'error', 'LLMClient', 'strip', 'submit_task', '_load_image_data', 'open', 'utcnow', 'write', 'info', 'UnifiedDatabase', 'ImageGenerationController', 'TemporaryDirectory'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
          "line": 18,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
          "line": 19,
          "module": "src.shared.storage_adapter",
          "item": "StorageAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
          "line": 20,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.multimedia_generation.image_gen_controller",
            "item": "ImageGenerationController",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "src.multimedia_generation.video_gen_controller",
            "item": "VideoGenerationController",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "src.operator_mode.operator_manager",
            "item": "OperatorManager",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "src.operator_mode.agent_supervisor",
            "item": "AgentSupervisor",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 41,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_story_to_video_template",
            "line": 397,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_product_showcase_template",
            "line": 436,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_educational_content_template",
            "line": 470,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_social_media_campaign_template",
            "line": 499,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_artistic_exploration_template",
            "line": 528,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_default_plan",
            "line": 575,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WorkflowStatus",
            "line": 26,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "OperatorModeCoordinator",
            "line": 35,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'VideoGenerationController', 'getLogger', 'uuid4', 'enumerate', '_execute_audio_step', 'ValueError', '_store_step_result', '_execute_quality_step', 'loads', '_compile_workflow_output', '_execute_single_step', 'generate_video_from_text', '_create_workflow', 'complete', '_plan_workflow', 'join', '_analyze_quality', 'append', 'get', 'keys', '_validate_execution_plan', 'add', 'AgentSupervisor', 'range', '_execute_generic_step', 'str', 'generate_image', '_create_artistic_exploration_template', 'create_video_sequence', 'dumps', '_execute_visual_step', '_create_default_plan', 'OperatorManager', 'isoformat', 'issubset', '_generate_workflow_summary', '_create_social_media_campaign_template', 'len', 'await_task_completion', 'locals', '_create_product_showcase_template', 'error', '_execute_workflow_steps', 'LLMClient', '_execute_video_step', 'execute', 'warning', 'submit_task', '_create_educational_content_template', 'set', 'utcnow', '_create_story_to_video_template', 'info', '_update_workflow_status', 'UnifiedDatabase', 'ImageGenerationController', '_store_workflow'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
          "line": 17,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
          "line": 18,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/search_engine/search_router.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "shared.enhanced_circuit_breaker",
            "item": "circuit_breaker",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 21,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SearchMode",
            "line": 11,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "SearchRouter",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'lower', 'SearchMode', 'get', 'strategy', 'circuit_breaker'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/src/search_engine/creative_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.search_engine.normal_search",
            "item": "NormalSearcher",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_rank_by_creativity",
            "line": 213,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CreativeSearcher",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'WeaviateAdapter', 'run', 'create_task', 'min', 'loads', 'isinstance', 'NormalSearcher', 'update', 'complete', 'join', 'append', 'get', 'semantic_search', '_search_expanded', 'extend', 'sort', 'str', '_rank_by_creativity', 'split', 'len', '_expand_query', '_generate_insights', 'sum', 'error', 'LLMClient', 'strip', 'lower', 'set', '_find_connections', 'gather', 'info', 'chr', 'insert', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
          "line": 13,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
          "line": 14,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
          "line": 15,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/search_engine/deep_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "src.search_engine.normal_search",
            "item": "NormalSearcher",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "src.search_engine.creative_search",
            "item": "CreativeSearcher",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_extract_terms",
            "line": 253,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_top_themes",
            "line": 315,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_merge_and_rank",
            "line": 330,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DeepSearcher",
            "line": 22,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_analyze_relationships', 'getLogger', '_get_top_themes', 'enumerate', '_extract_entities_concepts', 'list', 'WeaviateAdapter', '_search_term_deep', 'run', 'create_task', '_temporal_analysis', 'min', 'loads', 'isinstance', 'NormalSearcher', 'update', 'complete', '_deep_dive', 'join', 'dict', '_generate_deep_report', 'append', 'get', 'isalnum', 'add', 'semantic_search', 'extend', 'sort', 'str', 'split', '_merge_and_rank', '_domain_specific_search', 'sorted', 'intersection', '_extract_terms', 'len', 'defaultdict', 'error', 'LLMClient', 'strip', 'lower', 'set', 'CreativeSearcher', 'gather', 'info', 'items', 'chr', '_broad_search', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
          "line": 14,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
          "line": 15,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
          "line": 16,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/search_engine/normal_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 24,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_merge_results",
            "line": 183,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "NormalSearcher",
            "line": 18,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_semantic_search', 'getLogger', 'enumerate', 'WeaviateAdapter', 'create_task', 'min', 'isinstance', 'float', 'complete', 'join', 'replace', 'append', 'get', 'semantic_search', 'add', 'sort', 'str', 'len', 'fetch_all', 'error', 'LLMClient', 'strip', '_keyword_search', 'set', 'gather', '_merge_results', 'info', '_generate_summary', 'chr', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
          "line": 12,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
          "line": 13,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
          "line": 14,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/search_engine/super_deep_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "src.search_engine.deep_search",
            "item": "DeepSearcher",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.operator_mode.operator_manager",
            "item": "OperatorManager",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_compile_results",
            "line": 446,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SuperDeepSearcher",
            "line": 23,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'enumerate', 'WeaviateAdapter', 'run', 'create_task', 'min', '_cross_validate_findings', 'loads', '_compile_results', 'isinstance', 'complete', '_run_research_agent', 'join', '_deploy_research_agents', 'encode', 'append', 'get', 'semantic_search', 'hexdigest', 'add', 'range', 'DeepSearcher', 'sort', 'str', 'dumps', 'OperatorManager', '_causal_analysis', 'isoformat', 'len', '_create_research_plan', '_generate_executive_summary', '_generate_hypotheses', 'defaultdict', 'error', 'LLMClient', 'md5', 'strip', 'set', 'utcnow', 'gather', 'info', '_build_knowledge_graph', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
          "line": 15,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
          "line": 16,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
          "line": 17,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/search_engine/uncensored_search.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "src.search_engine.deep_search",
            "item": "DeepSearcher",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 27,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_compile_unfiltered",
            "line": 366,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_source_list",
            "line": 424,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UncensoredSearcher",
            "line": 21,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_find_minority_viewpoints', 'getLogger', 'list', 'WeaviateAdapter', 'min', '_analyze_biases', '_unfiltered_search', 'loads', 'float', 'update', 'complete', 'join', '_search_alternative_sources', 'encode', '_compile_unfiltered', 'append', 'get', 'semantic_search', 'add', 'hexdigest', 'DeepSearcher', 'sort', 'str', 'max', 'split', 'dumps', 'sorted', 'any', 'intersection', 'len', 'sum', '_add_credibility_scores', 'fetch_all', 'error', 'LLMClient', '_get_source_list', 'strip', 'md5', 'lower', 'set', '_generate_transparency_report', 'values', '_gather_perspectives', 'items', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
          "line": 14,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
          "line": 15,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
          "line": 16,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "zipfile",
            "alias": null,
            "line": 11
          },
          {
            "module": "tarfile",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "shutil",
            "alias": null,
            "line": 14
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 26,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_detect_archive_type",
            "line": 83,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "cleanup",
            "line": 282,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_archive_info",
            "line": 333,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ZipExtractor",
            "line": 20,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'read', 'FileNotFoundError', 'ValueError', 'stat', 'rmtree', 'fromtimestamp', 'startswith', 'ZipFile', 'update', 'endswith', 'join', 'pop', 'dirname', '_extract_tar', 'append', 'get', '_validate_extraction', 'add', 'hexdigest', 'isdir', 'oct', 'is_dir', '_detect_archive_type', 'str', 'getsize', 'max', 'getmembers', 'namelist', 'isoformat', 'normpath', '_extract_zip', 'len', 'mkdtemp', 'sum', 'makedirs', 'datetime', 'error', 'warning', 'lower', 'sha256', 'open', 'set', 'exists', 'extract', 'info', 'infolist', 'iter', '_calculate_file_hash'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/src/file_ingestion/video_processor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 14
          },
          {
            "module": "cv2",
            "alias": null,
            "line": 16
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 17
          },
          {
            "module": "imagehash",
            "alias": null,
            "line": 19
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "PIL",
            "item": "Image",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.file_ingestion.audio_transcriber",
            "item": "AudioTranscriber",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "src.shared.storage_adapter",
            "item": "StorageAdapter",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 32,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_hash_difference",
            "line": 306,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "VideoProcessor",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', '_extract_keyframes', 'getLogger', 'read', '_calculate_hash_difference', 'enumerate', 'FileNotFoundError', 'AudioTranscriber', 'ValueError', 'transcribe', 'loads', '_extract_and_transcribe_audio', 'StorageAdapter', 'isOpened', 'float', 'absdiff', 'update', 'join', 'close', 'append', 'get', 'upload_file', 'range', '_save_thumbnail', '_detect_scenes', 'create_subprocess_exec', 'int', 'RuntimeError', 'str', 'fromarray', 'release', 'resize', 'split', 'eval', 'VideoCapture', 'decode', 'cvtColor', 'communicate', 'len', 'mean', 'sum', '_generate_video_summary', 'error', '_get_video_info', 'warning', 'lower', 'NamedTemporaryFile', 'save', 'average_hash', 'hex_to_hash', 'exists', 'unlink', 'info', '_get_video_info_opencv'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
          "line": 16,
          "module": "cv2",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
          "line": 19,
          "module": "imagehash",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
          "line": 18,
          "module": "PIL",
          "item": "Image",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
          "line": 22,
          "module": "src.shared.storage_adapter",
          "item": "StorageAdapter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/file_ingestion/document_parser.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "csv",
            "alias": null,
            "line": 12
          },
          {
            "module": "io",
            "alias": null,
            "line": 13
          },
          {
            "module": "PyPDF2",
            "alias": null,
            "line": 16
          },
          {
            "module": "docx",
            "alias": null,
            "line": 17
          },
          {
            "module": "openpyxl",
            "alias": null,
            "line": 18
          },
          {
            "module": "markdown",
            "alias": null,
            "line": 19
          },
          {
            "module": "chardet",
            "alias": null,
            "line": 20
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_chunks",
            "line": 383,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DocumentParser",
            "line": 24,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'read', 'enumerate', 'list', 'FileNotFoundError', 'ValueError', 'stat', 'load_workbook', 'Sniffer', 'lstrip', 'extract_text', 'markdown', 'startswith', '_parse_text', 'reader', 'join', 'dict', 'close', 'rfind', 'append', 'get', 'str', 'Document', 'getsize', 'iter_rows', 'split', 'any', 'len', 'sum', 'detect', 'error', 'seek', 'strip', 'warning', 'lower', 'PdfReader', 'open', 'exists', 'sniff', '_create_chunks'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          "line": 16,
          "module": "PyPDF2",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          "line": 17,
          "module": "docx",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          "line": 18,
          "module": "openpyxl",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          "line": 19,
          "module": "markdown",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
          "line": 20,
          "module": "chardet",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 12
          },
          {
            "module": "mimetypes",
            "alias": null,
            "line": 13
          },
          {
            "module": "zipfile",
            "alias": null,
            "line": 14
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "BinaryIO",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.shared.weaviate_adapter",
            "item": "WeaviateAdapter",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "src.shared.storage_adapter",
            "item": "StorageAdapter",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "src.file_ingestion.document_parser",
            "item": "DocumentParser",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "src.file_ingestion.audio_transcriber",
            "item": "AudioTranscriber",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "src.file_ingestion.video_processor",
            "item": "VideoProcessor",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "src.file_ingestion.zip_extractor",
            "item": "ZipExtractor",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 34,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_detect_file_type",
            "line": 190,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_chunks",
            "line": 399,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IngestionController",
            "line": 28,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_create_ingestion_record', 'Path', 'getLogger', 'read', '_detect_file_type', 'enumerate', '_process_video', 'WeaviateAdapter', 'AudioTranscriber', 'FileNotFoundError', 'ValueError', 'stat', 'transcribe', '_process_archive', 'fromtimestamp', 'startswith', 'loads', 'StorageAdapter', 'update', 'join', 'ingest_file', 'append', 'get', '_validate_file', 'upload_file', 'hexdigest', '_process_file', 'str', 'split', 'dumps', 'ZipExtractor', '_process_unknown', 'isoformat', 'DocumentParser', 'store_document', 'process', '_generate_file_id', '_store_in_vector_db', 'len', 'locals', '_process_audio', '_update_ingestion_record', 'fetch_one', 'error', 'guess_type', 'execute', 'sha256', 'lower', 'NamedTemporaryFile', 'open', '_is_already_processed', '_process_document', 'warning', 'exists', 'extract', 'unlink', 'parse', 'info', 'write', 'items', 'VideoProcessor', 'utcnow', 'UnifiedDatabase', '_create_chunks'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
          "line": 18,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
          "line": 19,
          "module": "src.shared.weaviate_adapter",
          "item": "WeaviateAdapter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
          "line": 20,
          "module": "src.shared.storage_adapter",
          "item": "StorageAdapter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "tempfile",
            "alias": null,
            "line": 13
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 14
          },
          {
            "module": "whisper",
            "alias": null,
            "line": 18
          },
          {
            "module": "librosa",
            "alias": null,
            "line": 19
          },
          {
            "module": "soundfile",
            "alias": "sf",
            "line": 20
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 21
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pydub",
            "item": "AudioSegment",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "pydub.silence",
            "item": "split_on_silence",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_fixed_chunks",
            "line": 304,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AudioTranscriber",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_convert_with_ffmpeg', 'Path', 'export', 'getLogger', 'enumerate', 'spectral_rolloff', 'FileNotFoundError', 'set_channels', 'ValueError', 'transcribe', '_get_word_timestamps', '_load_model', '_create_fixed_chunks', 'mfcc', 'float', 'join', '_convert_to_wav', 'close', 'load', 'append', '_transcribe_direct', 'get', 'split_on_silence', '_get_audio_info', 'range', 'create_subprocess_exec', 'str', 'RuntimeError', 'spectral_centroid', 'set_frame_rate', 'from_file', 'load_model', '_transcribe_chunked', 'rms', 'tolist', 'tempo', 'decode', 'communicate', 'len', 'upper', 'from_wav', 'mean', 'error', 'strip', 'lower', 'NamedTemporaryFile', 'getattr', 'exists', 'unlink', 'info', 'zero_crossing_rate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          "line": 18,
          "module": "whisper",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          "line": 19,
          "module": "librosa",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          "line": 20,
          "module": "soundfile",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          "line": 22,
          "module": "pydub",
          "item": "AudioSegment",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
          "line": 23,
          "module": "pydub.silence",
          "item": "split_on_silence",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/operator_mode/operator_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 14
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "src.shared.llm_client",
            "item": "LLMClient",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "src.operator_mode.agent_task_queue",
            "item": "AgentTaskQueue",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "src.operator_mode.agent_supervisor",
            "item": "AgentSupervisor",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 50,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_research_template",
            "line": 514,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_analysis_template",
            "line": 549,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_content_template",
            "line": 575,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_problem_solving_template",
            "line": 610,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_workflow_template",
            "line": 645,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskStatus",
            "line": 25,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentType",
            "line": 35,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "OperatorManager",
            "line": 44,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_create_content_template', 'getLogger', 'uuid4', 'list', '_create_execution_plan', '_create_custom_plan', 'ValueError', '_execute_phase', 'create_task', '_create_analysis_template', 'min', '_create_problem_solving_template', 'loads', 'sleep', '_create_research_template', '_compile_results', '_complete_task', 'complete', 'join', '_create_agent', '_get_available_agents', '_assign_agent', 'total_seconds', 'TimeoutError', 'append', 'get', 'keys', 'enqueue', 'AgentSupervisor', 'range', 'cancel_task', 'str', 'from_url', '_analyze_task_complexity', 'AgentTaskQueue', '_adapt_template_to_task', 'dumps', '_retry_task', 'AgentType', 'register_agent', '_execute_action', 'isoformat', '_create_workflow_template', '_store_task', '_get_task', '_register_default_agents', '_execute_task', 'fetch_one', 'error', 'initialize', 'LLMClient', 'execute', 'Exception', '_fail_task', '_update_task_status', 'utcnow', 'info', 'items', 'chr', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
          "line": 18,
          "module": "src.shared.llm_client",
          "item": "LLMClient",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
          "line": 19,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 14
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "src.shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 44,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_health_score",
            "line": 319,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentStatus",
            "line": 21,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "HealthStatus",
            "line": 31,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentSupervisor",
            "line": 38,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', 'create_task', '_check_agent_health_status', 'strftime', 'remove', '_check_agent_health', 'sleep', 'hset', 'isinstance', 'update', 'cpu_percent', 'total_seconds', 'fromisoformat', 'setex', 'append', '_monitor_agents', 'get', '_restart_agent', 'delete', 'keys', '_reassign_agent_tasks', '_collect_metrics', 'str', 'update_agent_status', 'from_url', 'max', 'assign_task', 'dumps', 'isoformat', '_calculate_health_score', 'issubset', 'len', 'sum', 'error', 'get_best_agent', 'virtual_memory', 'warning', 'hgetall', 'set', 'values', 'utcnow', 'info', 'items', '_recover_agent', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
          "line": 17,
          "module": "src.shared.database",
          "item": "UnifiedDatabase",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 13
          },
          {
            "module": "heapq",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "QueuePriority",
            "line": 19,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskState",
            "line": 27,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentTaskQueue",
            "line": 36,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_acquire_task_lock', 'getLogger', 'smembers', '_find_stalled_tasks', 'list', 'timestamp', 'sadd', 'create_task', 'min', '_setup_queues', 'strftime', 'loads', 'sleep', 'hset', 'isinstance', 'zcard', '_update_task_field', 'update', 'incr', 'total_seconds', 'fromisoformat', 'replace', 'append', '_task_matches_capabilities', 'get', 'expire', 'delete', 'enqueue', 'QueuePriority', 'zrem', '_collect_metrics', 'hget', 'int', 'str', 'scan', '_retry_task', 'dumps', 'sorted', 'isoformat', '_release_task_lock', '_monitor_expired_tasks', 'timedelta', '_get_task', 'error', '_update_task_state', 'hgetall', 'zrange', 'all', 'get_queue_stats', 'set', 'warning', 'exists', 'utcnow', 'info', 'zadd', 'items', '_assign_task_to_agent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/src/infrastructure/pulumi/advanced_system_stack.py": {
      "imports": {
        "standard": [
          {
            "module": "pulumi",
            "alias": null,
            "line": 6
          },
          {
            "module": "pulumi_vultr",
            "alias": "vultr",
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "pulumi",
            "item": "Config",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "Output",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pulumi",
            "item": "ResourceOptions",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'ObjectStorageBucket', 'Database', 'export', 'require_secret', 'enumerate', 'Firewall', 'Instance', 'ObjectStorage', 'append', 'Config', 'get', 'LoadBalancer', 'Vpc', 'Kubernetes'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/src/infrastructure/pulumi/advanced_system_stack.py",
          "line": 7,
          "module": "pulumi_vultr",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 16
          },
          {
            "module": "json",
            "alias": null,
            "line": 17
          },
          {
            "module": "time",
            "alias": null,
            "line": 18
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 19
          },
          {
            "module": "logging",
            "alias": null,
            "line": 22
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 25
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Literal",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "functools",
            "item": "lru_cache",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 26,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_llm_router",
            "line": 481,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 193,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_validate_config",
            "line": 234,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_model_mapping",
            "line": 240,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27770690>"
            ]
          },
          {
            "name": "_get_cache_key",
            "line": 267,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 458,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UseCase",
            "line": 30,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ModelTier",
            "line": 42,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "RouterConfig",
            "line": 49,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModelMapping",
            "line": 62,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UnifiedLLMRouter",
            "line": 73,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'debug', 'Field', 'enumerate', 'ValueError', 'aclose', 'UnifiedLLMRouter', 'sleep', 'isinstance', '_get_cache_key', 'complete', 'join', 'ModelMapping', 'AsyncClient', 'append', 'get_llm_router', 'get', 'RouterConfig', '_make_portkey_request', 'str', 'dumps', 'sorted', 'getenv', 'len', 'json', '_validate_config', 'error', 'Exception', 'warning', '_make_openrouter_request', 'raise_for_status', 'get_model_mapping', 'time', 'info', 'items', 'insert', 'lru_cache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "TypeVar",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Type",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "contextlib",
            "item": "asynccontextmanager",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.llm_types",
            "item": "RouterConfig",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.llm_router_base",
            "item": "BaseLLMRouter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.config",
            "item": "get_settings",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.llm_router",
            "item": "UnifiedLLMRouter",
            "alias": null,
            "line": 98,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "DynamicLLMRouter",
            "alias": null,
            "line": 104,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'Lock', 'initialize', 'router_class', 'TypeVar', 'close', 'get_unified_router', 'values', 'get_router', 'get_dynamic_router', 'create_router', 'clear'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
          "line": 13,
          "module": "core.llm_router_base",
          "item": "BaseLLMRouter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
          "line": 98,
          "module": "core.llm_router",
          "item": "UnifiedLLMRouter",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_factory.py",
          "line": 104,
          "module": "core.llm_router_dynamic",
          "item": "DynamicLLMRouter",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_components/claude/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "anthropic",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 305
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 320
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 633,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 28,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_project_structure",
            "line": 337,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_analysis_prompt",
            "line": 369,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_code_generation_prompt",
            "line": 436,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_refactor_prompt",
            "line": 464,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_code_blocks",
            "line": 500,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "scan_directory",
            "line": 339,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ClaudeAnalyzer",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'debug', 'run', 'stat', 'ClaudeAnalyzer', '_create_analysis_prompt', '_create_refactor_prompt', 'startswith', 'generate_code', 'main', 'loads', 'ClientSession', '_log_error', 'scan_directory', 'join', 'find', 'abs', 'close', 'ClientTimeout', 'append', '_extract_code_blocks', 'get', 'print', 'now', 'is_dir', '_gather_project_context', 'str', 'analyze_project', 'split', '_log_analysis', 'dumps', 'sorted', 'initialize_database', 'isoformat', '_create_code_generation_prompt', 'iterdir', '_update_weaviate_context', 'json', 'Anthropic', 'error', 'read_text', 'strip', 'warning', 'exists', 'time', '_get_project_structure', 'execute_query', 'CursorAIClient', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "ast",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 12
          },
          {
            "module": "re",
            "alias": null,
            "line": 17
          },
          {
            "module": "tokenize",
            "alias": null,
            "line": 18
          },
          {
            "module": "io",
            "alias": null,
            "line": 19
          },
          {
            "module": "sys",
            "alias": null,
            "line": 22
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 667
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_mock_analyzer",
            "line": 631,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 61,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_files_to_analyze",
            "line": 226,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_is_comment",
            "line": 288,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_complexity",
            "line": 364,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_performance_issues",
            "line": 382,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_check_security_issues",
            "line": 394,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_project_metrics",
            "line": 406,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_aggregate_metrics",
            "line": 420,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_suggestions",
            "line": 454,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_requirements",
            "line": 549,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_package_json",
            "line": 565,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "FileMetrics",
            "line": 29,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ProjectMetrics",
            "line": 45,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "EnhancedMockAnalyzer",
            "line": 58,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'read', 'list', 'group', 'run', 'min', '_update_project_metrics', 'startswith', 'main', 'isinstance', 'glob', '_calculate_aggregate_metrics', 'WeaviateManager', 'store_context', '_check_security_issues', '_analyze_file', 'DatabaseLogger', 'is_file', 'load', '_is_comment', 'encode', 'append', 'rglob', 'log_action', 'get', 'keys', 'hexdigest', 'print', 'extend', 'walk', 'is_dir', 'now', 'str', 'EnhancedMockAnalyzer', 'int', 'relative_to', '_check_performance_issues', '_analyze_architecture', 'max', '_generate_suggestions', '_parse_requirements', 'split', 'dumps', 'isoformat', 'any', 'ProjectMetrics', 'len', '_parse_package_json', 'sum', 'splitlines', '_analyze_dependencies', 'dump', '_analyze_javascript_file', '_calculate_complexity', 'md5', 'strip', 'lower', 'open', '_get_files_to_analyze', 'finditer', 'analyze_codebase', 'get_mock_analyzer', 'FileMetrics', 'time', 'parse', 'items', '_analyze_python_file', 'field', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/eigencode/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "traceback",
            "alias": null,
            "line": 256
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedWorkflowconductor",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "AgentRole",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskPriority",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "EnhancedAgentCoordinator",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "ai_components.agents.cursor_ai_enhanced",
            "item": "get_enhanced_cursor_ai",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.agents.claude_integration",
            "item": "get_claude_integration",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "update_conductor_config",
            "line": 89,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "UpdatedAgentCoordinator",
            "line": 26,
            "bases": [
              "EnhancedAgentCoordinator"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'TaskDefinition', 'execute_task', 'timestamp', 'run', 'get_enhanced_cursor_ai', 'update_conductor_config', 'generate_code', 'main', 'test_integrated_workflow', 'review_code', 'append', 'UpdatedAgentCoordinator', 'execute_workflow', 'get', 'demonstrate_cursor_claude_synergy', 'create_workflow', 'print', 'mkdir', 'now', 'str', 'int', 'analyze_project', 'analyze_architecture', 'get_claude_integration', 'len', '__init__', 'super', 'dump', 'open', 'EnhancedWorkflowconductor', 'get_agent_metrics', 'items', 'print_exc'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 51,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_user_data",
            "line": 140,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 168,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 266,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 346,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_policies",
            "line": 353,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ScalingMetric",
            "line": 18,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ScalingPolicy",
            "line": 27,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "VultrInstance",
            "line": 38,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "VultrAPIClient",
            "line": 48,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AutoScaler",
            "line": 165,
            "bases": [],
            "decorators": []
          },
          {
            "name": "LoadBalancer",
            "line": 263,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Vultrconductor",
            "line": 343,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'_update_nginx_config', 'getLogger', 'post', 'evaluate_scaling', 'VultrInstance', 'timestamp', 'min', 'VultrAPIClient', 'LoadBalancer', 'startswith', 'sleep', 'AutoScaler', 'list_instances', 'delete_instance', 'ClientSession', 'create_instance', 'get_instance_metrics', 'ScalingPolicy', '_ensure_minimum_instances', '_generate_user_data', 'fromisoformat', 'ClientTimeout', 'append', 'get', 'delete', 'update_backend_pool', 'range', 'now', 'sort', '_check_instance_health', 'max', 'execute_scaling', '_initialize_policies', 'getenv', 'len', 'text', 'json', 'error', 'Exception', 'open', 'write', 'info', 'system'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "logging",
            "alias": null,
            "line": 5
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "shared.utils.error_handling",
            "item": "handle_errors",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.utils.performance",
            "item": "benchmark",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 84,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_mode_configs",
            "line": 107,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RooMode",
            "line": 21,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentCapability",
            "line": 37,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RooContext",
            "line": 47,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "MCPContext",
            "line": 58,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "RooModeConfig",
            "line": 69,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "RooMCPAdapter",
            "line": 81,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'Field', 'wrap_mode_as_agent', 'Limits', 'timestamp', 'ValueError', 'RooContext', 'aclose', 'MCPContext', 'dict', 'replace', 'AsyncClient', 'append', 'get', 'extend', 'AgentCapability', 'title', 'dumps', 'RooModeConfig', 'RooMode', 'len', 'json', 'error', 'execute', 'raise_for_status', 'utcnow', 'info', '_initialize_mode_configs', 'UnifiedDatabase'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "pickle",
            "alias": null,
            "line": 19
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 20
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "asdict",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 25,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "cache_decorator",
            "line": 662,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 56,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_performance_metrics",
            "line": 295,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_semantic_hash",
            "line": 368,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_context_hash",
            "line": 378,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_similarity",
            "line": 389,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_key_similarity",
            "line": 417,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_is_valid",
            "line": 433,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_memory_usage",
            "line": 491,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "decorator",
            "line": 664,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CacheType",
            "line": 29,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CacheEntry",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "IntelligentCache",
            "line": 53,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'get_performance_metrics', '_calculate_similarity', 'run', '_semantic_lookup', 'create_task', 'min', '_calculate_key_similarity', '_generate_context_hash', 'remove', 'loads', 'main', '_context_lookup', '_load_persistent_cache', '_evict_lru_entry', '_predictive_lookup', 'get_similar_entries', 'close', 'total_seconds', 'encode', 'CacheType', 'append', 'get', 'keys', 'hexdigest', '_save_persistent_cache', 'range', 'print', '_analyze_access_patterns', 'now', 'sort', 'getsizeof', 'str', '_setup_cache_database', 'func', 'max', 'split', '_update_memory_usage', 'dumps', 'sorted', 'initialize_database', 'get_cache', '__aenter__', '_is_valid', 'union', 'intersection', 'len', '_save_entry_to_db', 'timedelta', 'sum', '_remove_entry', '_ensure_capacity', 'type', 'error', 'CacheEntry', 'md5', 'warning', 'lower', 'set', 'values', '_generate_semantic_hash', 'time', 'info', 'items', 'execute_query', 'optimize_cache', 'IntelligentCache'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 7
          },
          {
            "module": "logging",
            "alias": null,
            "line": 8
          },
          {
            "module": "watchdog.observers",
            "alias": null,
            "line": 12
          },
          {
            "module": "watchdog.events",
            "alias": null,
            "line": 13
          },
          {
            "module": "fnmatch",
            "alias": null,
            "line": 14
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 23,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_event",
            "line": 31,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 43,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_patterns",
            "line": 52,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_modified",
            "line": 71,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "on_created",
            "line": 77,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_process_event",
            "line": 83,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_or_create_session",
            "line": 115,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "start",
            "line": 134,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "stop",
            "line": 144,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 153,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_automation_rules",
            "line": 158,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "stop",
            "line": 210,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CodingPattern",
            "line": 20,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CodingActivityMonitor",
            "line": 40,
            "bases": [
              "FileSystemEventHandler"
            ],
            "decorators": []
          },
          {
            "name": "ScheduledAutomation",
            "line": 150,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'list', '_process_event', 'create_task', 'add_event', 'schedule', 'strftime', 'sleep', 'Observer', 'join', '_trigger_coordination', 'append', 'stop', 'keys', 'now', 'fnmatch', '_get_or_create_session', 'basename', 'any', 'isoformat', 'len', 'timedelta', '__init__', 'super', 'CodingPattern', '_run_scheduled_task', 'error', '_load_automation_rules', 'exists', 'info', 'conductor_callback', 'start', 'cancel', 'items', '_initialize_patterns'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          "line": 12,
          "module": "watchdog.observers",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
          "line": 13,
          "module": "watchdog.events",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "logging",
            "alias": null,
            "line": 5
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooContext",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMode",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "shared.utils.error_handling",
            "item": "handle_errors",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.utils.performance",
            "item": "benchmark",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 86,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_transition_rules",
            "line": 93,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_evaluate_condition",
            "line": 430,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TransitionType",
            "line": 21,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TransitionState",
            "line": 30,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TransitionContext",
            "line": 41,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TransitionRule",
            "line": 55,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TransitionHistory",
            "line": 67,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModeTransitionManager",
            "line": 83,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'Field', '_update_transition_state', 'timestamp', 'ValueError', '_generate_handoff_summary', 'loads', '_preserve_context', '_evaluate_condition', '_store_transition', 'Lock', 'update', 'join', 'dict', 'next', 'total_seconds', 'TransitionState', 'append', 'get', '_perform_handoff', 'TransitionContext', 'sort', 'int', 'str', 'dumps', 'isoformat', 'copy', 'TransitionHistory', 'len', 'RooMode', 'sum', 'fetch_all', '_initialize_transition_rules', 'error', 'execute', 'warning', 'utcnow', 'TransitionType', 'info', 'field', 'UnifiedDatabase', 'TransitionRule'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 16
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 22
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 24
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 25
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 380
          },
          {
            "module": "json",
            "alias": null,
            "line": 381
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "psycopg2.extras",
            "item": "RealDictCursor",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "setup_secrets_manager",
            "item": "SecretsManager",
            "alias": null,
            "line": 30,
            "level": 0
          },
          {
            "module": "urllib.parse",
            "item": "urlparse",
            "alias": null,
            "line": 165,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_secrets_manager",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 102,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_connection",
            "line": 113,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_tables",
            "line": 117,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_action",
            "line": 140,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 159,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_ensure_schema",
            "line": 184,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "store_context",
            "line": 205,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retrieve_context",
            "line": 228,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "close",
            "line": 247,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 259,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 307,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 624,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_build_dependency_graph",
            "line": 733,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_checkpoint",
            "line": 740,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskStatus",
            "line": 44,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentRole",
            "line": 53,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowContext",
            "line": 61,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TaskDefinition",
            "line": 75,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "DatabaseLogger",
            "line": 99,
            "bases": [],
            "decorators": []
          },
          {
            "name": "WeaviateManager",
            "line": 156,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MCPContextManager",
            "line": 256,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AgentCoordinator",
            "line": 304,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CodeAnalyzerAgent",
            "line": 370,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AIImplementationAgent",
            "line": 454,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AIOptimizationAgent",
            "line": 536,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Workflowconductor",
            "line": 621,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'debug', 'ValueError', 'min', 'urlparse', 'connect_to_custom', 'get', 'create_workflow', 'split', 'dumps', 'zip', 'basicConfig', '_ensure_schema', '_ensure_tables', 'patch', 'strip', 'get_secrets_manager', 'Property', '_get_connection', 'AIImplementationAgent', 'connect', 'FileHandler', 'create', 'post', 'getLogger', 'TaskDefinition', 'AuthApiKey', 'run', 'strftime', 'startswith', 'ClientSession', 'StreamHandler', 'AIOptimizationAgent', 'append', 'extend', 'Workflowconductor', 'MCPContextManager', 'json', 'error', 'execute', 'lower', 'open', 'exists', 'gather', 'CodeAnalyzerAgent', 'Path', '_execute_single_task', 'create_task', 'main', 'isinstance', 'cursor', 'store_context', 'close', '_create_checkpoint', 'add', 'now', 'wait_for', 'int', 'max', '_build_dependency_graph', 'all', 'AgentCoordinator', 'info', 'field', 'insert', 'WorkflowContext', 'execute_task', 'SecretsManager', 'WeaviateManager', 'DatabaseLogger', 'execute_workflow', 'log_action', 'equal', 'by_property', 'str', 'RuntimeError', 'fetch_objects', 'isoformat', 'export_to_env', 'len', 'update_task_status', 'warning', 'set'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 13
          },
          {
            "module": "jwt",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 41,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 113,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "generate_token",
            "line": 120,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_token",
            "line": 131,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 156,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 229,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "create_app",
            "line": 319,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CodeEditOperation",
            "line": 20,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CursorSession",
            "line": 30,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CursorAPIClient",
            "line": 38,
            "bases": [],
            "decorators": []
          },
          {
            "name": "SecureAPIEndpoint",
            "line": 110,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AIModelBridge",
            "line": 153,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CursorIntegrationServer",
            "line": 226,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'Application', 'create_app', 'timestamp', 'Future', 'generate_token', 'execute_edit', 'CursorSession', 'startswith', 'ClientSession', 'handle_ai_request', 'get_code_context', 'CodeEditOperation', 'add_post', 'encode', 'append', 'add_get', 'get', 'json_response', 'AIModelBridge', 'verify_token', 'now', 'str', 'split', 'CursorAPIClient', 'AppRunner', 'isoformat', 'initialize_session', 'decode', 'getenv', 'len', 'setup', 'json', 'TCPSite', 'initialize', 'error', 'SecureAPIEndpoint', 'get_file_content', 'info', 'start'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "sys",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "signal",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "coordination.coding_activity_monitor",
            "item": "CodingActivityMonitor",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "coordination.coding_activity_monitor",
            "item": "ScheduledAutomation",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "coordination.mcp_integration",
            "item": "MCPCoordinator",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.mcp_integration",
            "item": "MCPContextManager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.mcp_integration",
            "item": "MCPWebSocketServer",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.mcp_integration",
            "item": "RooAgent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.mcp_integration",
            "item": "FactoryAIAgent",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.cursor_integration",
            "item": "CursorIntegrationServer",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "coordination.vultr_autoscaling",
            "item": "Vultrconductor",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "AICoordinator",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 36,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_configuration",
            "line": 44,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_status",
            "line": 322,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "signal_handler",
            "line": 354,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CherryAIConductor",
            "line": 33,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'timestamp', 'run', 'create_task', 'CodingActivityMonitor', 'main', '_load_configuration', 'dirname', 'append', 'get_agent_status', 'execute_workflow', 'CursorIntegrationServer', 'stop', 'MCPWebSocketServer', 'now', 'int', 'CherryAIConductor', 'MCPCoordinator', 'signal', 'ScheduledAutomation', 'register_agent', 'isoformat', 'basicConfig', 'getenv', 'len', 'MCPContextManager', 'initialize_components', 'error', 'abspath', 'lower', 'broadcast', 'FactoryAIAgent', 'gather', 'coordinate_workflow', 'info', 'Vultrconductor', 'start', 'cancel', 'AICoordinator', 'RooAgent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 17,
          "module": "coordination.coding_activity_monitor",
          "item": "CodingActivityMonitor",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 17,
          "module": "coordination.coding_activity_monitor",
          "item": "ScheduledAutomation",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 18,
          "module": "coordination.mcp_integration",
          "item": "MCPCoordinator",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 18,
          "module": "coordination.mcp_integration",
          "item": "MCPContextManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 18,
          "module": "coordination.mcp_integration",
          "item": "MCPWebSocketServer",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 18,
          "module": "coordination.mcp_integration",
          "item": "RooAgent",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 18,
          "module": "coordination.mcp_integration",
          "item": "FactoryAIAgent",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 22,
          "module": "coordination.cursor_integration",
          "item": "CursorIntegrationServer",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 23,
          "module": "coordination.vultr_autoscaling",
          "item": "Vultrconductor",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
          "line": 24,
          "module": "coordination.ai_conductor",
          "item": "AICoordinator",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "logging",
            "alias": null,
            "line": 4
          },
          {
            "module": "time",
            "alias": null,
            "line": 5
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "shared.utils.error_handling",
            "item": "handle_errors",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "shared.utils.performance",
            "item": "benchmark",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 60,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_success",
            "line": 81,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "record_failure",
            "line": 92,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_request",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 130,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_delay",
            "line": 150,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 166,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_routing_rules",
            "line": 228,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_make_routing_decision",
            "line": 282,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_requires_coordination",
            "line": 321,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_confidence",
            "line": 349,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_service_health",
            "line": 511,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ServiceType",
            "line": 20,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CircuitState",
            "line": 28,
            "bases": [
              "str",
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ServiceMetrics",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "RoutingDecision",
            "line": 48,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CircuitBreaker",
            "line": 57,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RetryStrategy",
            "line": 127,
            "bases": [],
            "decorators": []
          },
          {
            "name": "UnifiedAPIRouter",
            "line": 163,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'debug', 'Field', '_initialize_routing_rules', 'Limits', '_call_conductor', '_make_routing_decision', 'aclose', 'min', 'sleep', 'can_request', 'RetryStrategy', 'ServiceMetrics', 'RoutingDecision', 'total_seconds', 'AsyncClient', 'append', '_calculate_confidence', '_call_openrouter', 'get', 'range', 'record_success', '_requires_coordination', 'isoformat', 'any', 'len', 'CircuitBreaker', 'json', 'error', 'record_failure', 'Exception', 'warning', 'lower', 'utcnow', 'raise_for_status', 'time', 'info', 'get_delay', '_execute_with_retry'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 13
          },
          {
            "module": "websockets",
            "alias": null,
            "line": 14
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Callable",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "abc",
            "item": "ABC",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "abc",
            "item": "abstractmethod",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "weaviate.embedded",
            "item": "EmbeddedOptions",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "UnifiedDatabase",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "shared.utils.performance",
            "item": "benchmark",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMCPAdapter",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMode",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 48,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_capabilities",
            "line": 61,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "abstractmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 68,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_capabilities",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 120,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_capabilities",
            "line": 124,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 172,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "prune_context",
            "line": 220,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 232,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_initialize_weaviate",
            "line": 246,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_transition_patterns",
            "line": 471,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 486,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "register_agent",
            "line": 492,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_status",
            "line": 571,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 586,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MCPMessage",
            "line": 26,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "AgentCapability",
            "line": 37,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "MCPAgent",
            "line": 45,
            "bases": [
              "ABC"
            ],
            "decorators": []
          },
          {
            "name": "RooAgent",
            "line": 65,
            "bases": [
              "MCPAgent"
            ],
            "decorators": []
          },
          {
            "name": "FactoryAIAgent",
            "line": 117,
            "bases": [
              "MCPAgent"
            ],
            "decorators": []
          },
          {
            "name": "MCPContextManager",
            "line": 169,
            "bases": [],
            "decorators": []
          },
          {
            "name": "UnifiedContextManager",
            "line": 229,
            "bases": [
              "MCPContextManager"
            ],
            "decorators": []
          },
          {
            "name": "MCPCoordinator",
            "line": 483,
            "bases": [],
            "decorators": []
          },
          {
            "name": "MCPWebSocketServer",
            "line": 583,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'debug', 'Queue', 'Future', 'ValueError', 'RooMCPAdapter', 'timestamp', 'send', 'with_where', 'startswith', 'remove', 'serve', 'create_class', 'loads', '_index_roo_output', 'ClientSession', 'store_context', '_initialize_weaviate', 'Client', 'append', 'run_in_executor', 'get', 'add', 'get_event_loop', 'now', 'AgentCapability', 'str', 'get_capabilities', 'dumps', 'isoformat', 'transform_context', 'with_limit', 'getenv', 'len', 'with_near_text', '__init__', 'super', 'json', 'error', 'execute', 'warning', 'retrieve_context', 'set', 'MCPMessage', 'exists', 'utcnow', 'gather', 'info', 'route_message', 'items', 'field', 'UnifiedDatabase', 'do', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 16
          },
          {
            "module": "time",
            "alias": null,
            "line": 18
          },
          {
            "module": "multiprocessing",
            "alias": null,
            "line": 20
          },
          {
            "module": "psycopg2",
            "alias": null,
            "line": 25
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 27
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "concurrent.futures",
            "item": "ThreadPoolExecutor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "concurrent.futures",
            "item": "ProcessPoolExecutor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "psycopg2.extras",
            "item": "RealDictCursor",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "weaviate.auth",
            "item": "AuthApiKey",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "ai_components.eigencode.mock_analyzer",
            "item": "get_mock_analyzer",
            "alias": null,
            "line": 33,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 111,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_secret",
            "line": 146,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "get_required_secret",
            "line": 151,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "staticmethod"
            ]
          },
          {
            "name": "__init__",
            "line": 162,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_connection",
            "line": 172,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_ensure_tables",
            "line": 176,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "log_action",
            "line": 206,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 228,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_ensure_schema",
            "line": 241,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "store_context",
            "line": 264,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "retrieve_context",
            "line": 287,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 314,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_check_eigencode",
            "line": 319,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_basic_analysis",
            "line": 364,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 382,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 408,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 434,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_circuit_breaker",
            "line": 450,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 546,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_optimized_config",
            "line": 568,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_build_dependency_graph",
            "line": 754,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_checkpoint",
            "line": 761,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_calculate_parallel_efficiency",
            "line": 779,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_metrics",
            "line": 791,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TaskStatus",
            "line": 50,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AgentRole",
            "line": 60,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskPriority",
            "line": 67,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowContext",
            "line": 76,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "TaskDefinition",
            "line": 92,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CircuitBreaker",
            "line": 108,
            "bases": [],
            "decorators": []
          },
          {
            "name": "SecretManager",
            "line": 142,
            "bases": [],
            "decorators": []
          },
          {
            "name": "DatabaseLogger",
            "line": 159,
            "bases": [],
            "decorators": []
          },
          {
            "name": "WeaviateManager",
            "line": 225,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedEigenCodeAgent",
            "line": 311,
            "bases": [],
            "decorators": []
          },
          {
            "name": "CursorAIAgent",
            "line": 379,
            "bases": [],
            "decorators": []
          },
          {
            "name": "RooCodeAgent",
            "line": 405,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedAgentCoordinator",
            "line": 431,
            "bases": [],
            "decorators": []
          },
          {
            "name": "EnhancedWorkflowconductor",
            "line": 543,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'cpu_count', 'Queue', 'ValueError', 'min', 'create_class', 'sleep', 'get', 'create_workflow', 'dumps', 'basicConfig', '_ensure_schema', '_ensure_tables', 'EnhancedWorkflowconductor', 'get_agent_metrics', '_get_connection', 'items', 'get_secret', 'do', 'connect', 'create', 'FileHandler', 'getLogger', 'TaskDefinition', 'AuthApiKey', '_process_batch', 'run', 'strftime', 'StreamHandler', 'RooCodeAgent', '_batch_processor', '_calculate_parallel_efficiency', 'load', 'append', 'ProcessPoolExecutor', 'AgentRole', 'with_limit', '_load_optimized_config', 'ThreadPoolExecutor', 'CircuitBreaker', 'call', 'error', 'execute', 'open', 'exists', 'analyze_codebase', 'Path', 'list', '_execute_single_task', 'create_task', 'loads', 'main', 'cursor', 'store_context', 'CursorAIAgent', 'Client', '_create_checkpoint', 'add', 'now', 'wait_for', 'func', '_check_eigencode', '_build_dependency_graph', 'Exception', 'all', 'values', 'info', 'field', 'WorkflowContext', 'execute_task', 'EnhancedAgentCoordinator', 'with_where', 'EnhancedEigenCodeAgent', 'WeaviateManager', 'DatabaseLogger', 'execute_workflow', 'log_action', 'sort', 'str', 'RuntimeError', 'isoformat', 'len', 'warning', 'set', 'get_mock_analyzer', 'wait', 'time', '_basic_analysis'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/tests/test_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "pytest",
            "alias": null,
            "line": 7
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "sys",
            "alias": null,
            "line": 12
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "Mock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "Workflowconductor",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "TaskDefinition",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "AgentRole",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "TaskStatus",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "WorkflowContext",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "AgentCoordinator",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "coordination.ai_conductor",
            "item": "MCPContextManager",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_db_logger",
            "line": 35,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27636090>"
            ]
          },
          {
            "name": "mock_weaviate_manager",
            "line": 44,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b276342d0>"
            ]
          },
          {
            "name": "conductor",
            "line": 54,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2781ea10>"
            ]
          },
          {
            "name": "coordinator",
            "line": 226,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2771cf90>"
            ]
          },
          {
            "name": "mock_connection",
            "line": 325,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b277406d0>"
            ]
          },
          {
            "name": "test_log_action",
            "line": 334,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "mock_client",
            "line": 365,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b275ebcd0>"
            ]
          },
          {
            "name": "test_store_context",
            "line": 377,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestWorkflowconductor",
            "line": 31,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestAgentCoordinator",
            "line": 222,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestMCPContextManager",
            "line": 276,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestDatabaseLogger",
            "line": 321,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestWeaviateManager",
            "line": 361,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'TaskDefinition', 'list', 'execute_task', 'create_task', 'sleep', 'object', 'main', 'WeaviateManager', 'store_context', 'index', 'dict', 'DatabaseLogger', 'total_seconds', 'append', 'execute_workflow', 'log_action', 'range', 'now', 'create_workflow', 'str', 'assert_called', 'any', 'AsyncMock', 'len', 'Workflowconductor', 'MCPContextManager', 'patch', 'update_task_status', 'Exception', 'all', 'assert_called_once', 'AgentCoordinator', 'values', 'Mock', 'WorkflowContext'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "Workflowconductor",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "TaskDefinition",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "AgentRole",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "TaskStatus",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "WorkflowContext",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "AgentCoordinator",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "DatabaseLogger",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "WeaviateManager",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
          "line": 18,
          "module": "coordination.ai_conductor",
          "item": "MCPContextManager",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 3
          },
          {
            "module": "json",
            "alias": null,
            "line": 4
          },
          {
            "module": "os",
            "alias": null,
            "line": 5
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 9
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "AsyncMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "httpx",
            "item": "Response",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "ModeTransitionManager",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "TransitionState",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "TransitionType",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooContext",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMCPAdapter",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "ai_components.coordination.roo_mcp_adapter",
            "item": "RooMode",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "ai_components.coordination.unified_api_router",
            "item": "CircuitState",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.unified_api_router",
            "item": "ServiceType",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.unified_api_router",
            "item": "UnifiedAPIRouter",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.mode_transition_manager",
            "item": "TransitionContext",
            "alias": null,
            "line": 309,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "adapter",
            "line": 33,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27766510>"
            ]
          },
          {
            "name": "router",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27739ad0>"
            ]
          },
          {
            "name": "test_circuit_breaker_functionality",
            "line": 154,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_retry_strategy",
            "line": 176,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "manager",
            "line": 214,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b276fb8d0>"
            ]
          },
          {
            "name": "test_preserve_context",
            "line": 307,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestRooMCPAdapter",
            "line": 29,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestUnifiedAPIRouter",
            "line": 123,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestModeTransitionManager",
            "line": 210,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestIntegration",
            "line": 332,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'ModeTransitionManager', 'MagicMock', 'close_session', 'wrap_mode_as_agent', 'execute_transition', 'run', 'RooMCPAdapter', '_make_routing_decision', 'suggest_transition', 'startswith', 'can_request', 'main', 'object', '_preserve_context', 'next', 'analyze_transition_patterns', 'range', 'TransitionContext', 'create_session', 'any', 'transform_context', 'initiate_transition', 'AsyncMock', 'UnifiedAPIRouter', 'len', 'patch', 'route_request', 'record_failure', 'Exception', 'lower', 'update_session', 'execute_mode_task', 'utcnow', 'get_delay'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "TaskDefinition",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WorkflowContext",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.eigencode.mock_analyzer",
            "item": "get_mock_analyzer",
            "alias": null,
            "line": 217,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_enhanced_cursor_ai",
            "line": 658,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 50,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_generate_mock_response",
            "line": 551,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_from_cache",
            "line": 608,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_add_to_cache",
            "line": 618,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_latency_metric",
            "line": 629,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 635,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CursorAICapability",
            "line": 29,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CursorAIMode",
            "line": 40,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "EnhancedCursorAIAgent",
            "line": 47,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'refactor_code', 'run', 'get_enhanced_cursor_ai', '_update_latency_metric', 'generate_code', 'get_metrics', 'main', '_validate_refactoring', 'ClientSession', 'hash', 'optimize_performance', 'WeaviateManager', 'store_context', 'DatabaseLogger', 'implement_changes', 'ClientTimeout', 'append', 'log_action', 'get', 'print', 'now', '_get_from_cache', 'str', 'int', 'analyze_project', '_analyze_architecture', 'max', 'dumps', '_add_to_cache', '_enhance_analysis_results', 'isoformat', 'len', '_process_generated_code', 'CircuitBreaker', 'sum', 'splitlines', '_generate_mock_response', 'call', '_analyze_dependencies', '_compare_performance', 'json', 'error', 'text', 'Exception', 'analyze_codebase', 'get_mock_analyzer', 'time', 'items', 'EnhancedCursorAIAgent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/agents/claude_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "time",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "DatabaseLogger",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "WeaviateManager",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor_enhanced",
            "item": "CircuitBreaker",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_claude_integration",
            "line": 789,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 52,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_architecture_prompt",
            "line": 437,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_code_review_prompt",
            "line": 462,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_pattern_prompt",
            "line": 487,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_performance_prompt",
            "line": 509,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_security_prompt",
            "line": 531,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_architecture_analysis",
            "line": 561,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_code_review",
            "line": 589,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_pattern_suggestions",
            "line": 617,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_performance_analysis",
            "line": 639,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_security_audit",
            "line": 668,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_parse_roo_enhancements",
            "line": 700,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_mock_response",
            "line": 727,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_metrics",
            "line": 768,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_metrics",
            "line": 774,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ClaudeModel",
            "line": 29,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ClaudeCapability",
            "line": 37,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "ClaudeIntegration",
            "line": 49,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', '_call_via_openrouter', 'run', 'startswith', 'loads', 'get_metrics', 'main', 'ClientSession', 'WeaviateManager', 'store_context', 'join', '_call_anthropic_direct', 'DatabaseLogger', 'review_code', 'append', 'log_action', 'get', '_parse_performance_analysis', '_create_security_prompt', '_parse_security_audit', '_parse_architecture_analysis', 'print', '_create_performance_prompt', 'now', '_create_architecture_prompt', 'str', 'int', 'analyze_architecture', 'ClaudeIntegration', 'max', 'dumps', 'isoformat', 'get_claude_integration', 'len', 'CircuitBreaker', 'text', '_create_code_review_prompt', '_parse_code_review', 'call', '_generate_mock_response', 'json', 'error', 'strip', 'Exception', '_parse_roo_enhancements', '_parse_pattern_suggestions', 'time', '_create_pattern_prompt', '_update_metrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/agents/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/github_copilot/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 445,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeAnalyzer",
            "alias": null,
            "line": 457,
            "level": 0
          },
          {
            "module": "ai_components.cursor_ai.cursor_integration_enhanced",
            "item": "CursorAIClient",
            "alias": null,
            "line": 260,
            "level": 0
          },
          {
            "module": "ai_components.claude.claude_analyzer",
            "item": "ClaudeAnalyzer",
            "alias": null,
            "line": 281,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "GitHubCopilotClient",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'getLogger', 'get_performance_metrics', 'enumerate', '_suggest_error_handling', 'run', '_suggest_tests', 'min', 'ClaudeAnalyzer', 'startswith', 'generate_code', '_log_completion', 'main', 'get_code_completions', 'ClientSession', 'float', '_parse_code_structure', 'suggest_improvements', 'WeaviateManager', 'update', 'store_context', 'endswith', '_log_error', 'GitHubCopilotClient', 'close', 'replace', '_simulate_copilot_completion', '_analyze_code_patterns', 'append', 'ClientTimeout', 'get', 'setup_copilot_database', '_get_ai_tools_context', 'print', 'now', 'str', 'int', 'max', 'title', 'split', 'dumps', '_suggest_performance_improvements', 'initialize_database', 'isoformat', '_suggest_style_improvements', '_analyze_tool_comparison', 'isupper', 'len', 'compare_with_other_tools', '_generate_inline_comments', '_generate_readme', '_update_weaviate_context', 'json', 'error', 'strip', 'warning', 'lower', '_get_mcp_context', '_generate_docstrings', 'time', '_suggest_documentation', 'execute_query', '_generate_general_docs', '_fallback_completion', 'CursorAIClient'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/cursor_ai/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.ai_conductor",
            "item": "WeaviateManager",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CursorAIClient",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'get_performance_metrics', 'read', 'run', 'generate_code', 'main', 'ClientSession', 'WeaviateManager', 'update', 'store_context', '_log_error', '_log_action', 'close', '_fallback_analysis', 'ClientTimeout', 'append', 'get', 'execute_query', 'print', 'now', 'str', 'int', 'analyze_code', 'dumps', 'initialize_database', 'isoformat', 'len', 'text', 'splitlines', 'json', '_update_weaviate_context', 'error', 'warning', 'Exception', 'open', 'time', 'items', '_get_mcp_context', 'CursorAIClient', 'test_integration'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/design/dalle_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "base64",
            "alias": null,
            "line": 13
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "cache_decorator",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": null,
            "line": 23,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "get_performance_metrics",
            "line": 660,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DALLEImageGenerator",
            "line": 27,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'get_performance_metrics', 'enumerate', 'run', 'generate_design_image', 'cache_decorator', 'main', '_enhance_image_prompt', 'ClientSession', '_fallback_image_generation', '_log_error', 'join', 'close', '_log_image_enhancement', 'append', 'DALLEImageGenerator', 'get', '_create_enhancement_prompt', 'range', 'print', '_setup_image_database', 'now', 'str', 'int', 'generate_icon_set', '_process_image_result', 'max', 'split', 'dumps', 'initialize_database', 'get_cache', 'isoformat', '_log_icon_set_generation', 'len', 'text', 'json', 'error', 'strip', 'Exception', '_create_icon_set_prompts', 'warning', '_generate_variations', '_log_image_generation', 'time', 'execute_query', '_route_through_openrouter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/design/recraft_integration.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 12
          },
          {
            "module": "logging",
            "alias": null,
            "line": 16
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "cache_decorator",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 29,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_get_framework_version",
            "line": 477,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_build_tools",
            "line": 487,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_dependencies",
            "line": 497,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_performance_metrics",
            "line": 640,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RecraftDesignGenerator",
            "line": 26,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'get_performance_metrics', 'RecraftDesignGenerator', 'run', '_enhance_code_output', 'cache_decorator', 'main', 'ClientSession', '_log_code_generation', '_log_error', '_get_build_tools', 'join', 'close', 'generate_code_from_design', 'append', 'get', '_process_design_result', 'print', 'now', 'str', 'int', '_enhance_design_brief', 'max', 'dumps', 'initialize_database', 'get_cache', 'isoformat', 'copy', '_create_code_generation_prompt', '_analyze_feedback', 'generate_design', '_log_design_refinement', 'locals', '_get_dependencies', 'text', 'json', 'error', 'warning', 'Exception', '_setup_design_database', '_log_design_generation', 'time', 'execute_query', '_fallback_design_generation', '_route_through_openrouter', '_get_framework_version', '_generate_code_output'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/design/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ai_components/design/design_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 7
          },
          {
            "module": "sys",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "time",
            "alias": null,
            "line": 10
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 441
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "shared.database",
            "item": "initialize_database",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "CacheType",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "cache_decorator",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.coordination.intelligent_cache",
            "item": "get_cache",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "ai_components.design.recraft_integration",
            "item": "RecraftDesignGenerator",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "ai_components.design.dalle_integration",
            "item": "DALLEImageGenerator",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 38,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_create_asset_brief",
            "line": 618,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_create_image_prompt",
            "line": 633,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_performance_metrics",
            "line": 877,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "DesignPhase",
            "line": 28,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Designconductor",
            "line": 35,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'get_performance_metrics', 'RecraftDesignGenerator', 'enumerate', 'list', '_log_project_completion', '_generate_dalle_asset', '_create_refinement_plan', 'ValueError', 'run', 'generate_design_image', 'timestamp', '_develop_design_concept', '_route_through_claude', 'generate_design_assets', '_finalize_project', 'startswith', '_create_analysis_prompt', 'loads', 'cache_decorator', 'main', 'isinstance', 'ClientSession', '_finalize_design_assets', 'update', '_log_error', 'join', '_log_asset_generation', 'close', 'append', '_analyze_feedback_with_claude', 'DALLEImageGenerator', 'get', 'create_design_project', '_create_image_prompt', 'keys', 'print', 'extend', 'now', 'refine_design', 'str', '__aexit__', 'int', 'generate_icon_set', '_setup_conductor_database', 'enhance_existing_image', 'max', '_log_analysis', 'dumps', 'initialize_database', 'get_cache', '__aenter__', 'isoformat', 'generate_design', 'len', 'analyze_design_requirements', '_create_asset_brief', '_auto_refine_designs', 'Designconductor', 'json', 'error', '_generate_recraft_asset', '_process_analysis_result', 'warning', 'strip', 'values', '_execute_design_workflow', 'gather', 'time', 'info', '_log_refinement', 'items', 'execute_query', 'chr'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/tests/test_example.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "test_example",
            "line": 2,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/tests/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/tests/test_personas_admin.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "pytest",
            "alias": null,
            "line": 13
          },
          {
            "module": "agent.app.routers.personas_admin",
            "alias": null,
            "line": 254
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "MagicMock",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "unittest.mock",
            "item": "patch",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "fastapi.testclient",
            "item": "TestClient",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfigError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfigManager",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaNotFoundError",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaStatus",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 28,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 29,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "InteractionMode",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyle",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "ResponseStyleType",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "PersonaTrait",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "core.personas.models",
            "item": "TraitCategory",
            "alias": null,
            "line": 31,
            "level": 0
          },
          {
            "module": "agent.app.main",
            "item": "app",
            "alias": null,
            "line": 82,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "mock_persona_config",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2778eb50>"
            ]
          },
          {
            "name": "mock_persona_manager",
            "line": 65,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27632a10>"
            ]
          },
          {
            "name": "test_client",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27630e50>"
            ]
          },
          {
            "name": "valid_api_key",
            "line": 88,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b27630750>"
            ]
          },
          {
            "name": "test_list_personas_success",
            "line": 95,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_personas_with_filters",
            "line": 109,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_list_personas_unauthorized",
            "line": 119,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_get_persona_success",
            "line": 127,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_get_persona_not_found",
            "line": 138,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_update_persona_success",
            "line": 149,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_update_persona_validation_error",
            "line": 161,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_reload_persona_success",
            "line": 169,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_validate_all_personas_success",
            "line": 180,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_validate_all_personas_with_issues",
            "line": 190,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_export_persona_success",
            "line": 206,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_check_for_updates_success",
            "line": 224,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_health_check_success",
            "line": 238,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_manager_initialization_error",
            "line": 248,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "test_full_persona_lifecycle",
            "line": 267,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Attribute object at 0x7a6b2767cc50>"
            ]
          }
        ],
        "classes": [
          {
            "name": "TestPersonasAdminRouter",
            "line": 92,
            "bases": [],
            "decorators": []
          },
          {
            "name": "TestPersonasAdminIntegration",
            "line": 263,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'MagicMock', 'post', 'uuid4', 'put', 'PersonaConfigError', 'assert_called_once_with', 'PersonaConfiguration', 'assert_called_with', 'PersonaNotFoundError', 'TestClient', 'get', 'PersonaTrait', 'str', 'len', 'ResponseStyle', 'patch', 'json', 'set', 'assert_called_once'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/main.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "time",
            "alias": null,
            "line": 7
          },
          {
            "module": "structlog",
            "alias": null,
            "line": 9
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 131
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Request",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "agent.app.routers.admin",
            "item": "router",
            "alias": "admin_router",
            "line": 14,
            "level": 0
          },
          {
            "module": "agent.app.routers.agents",
            "item": "router",
            "alias": "agents_router",
            "line": 15,
            "level": 0
          },
          {
            "module": "agent.app.routers.workflows",
            "item": "router",
            "alias": "workflows_router",
            "line": 16,
            "level": 0
          },
          {
            "module": "agent.app.routers.resources",
            "item": "router",
            "alias": "resources_router",
            "line": 17,
            "level": 0
          },
          {
            "module": "agent.app.routers.system",
            "item": "router",
            "alias": "system_router",
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.routers.audit",
            "item": "router",
            "alias": "audit_router",
            "line": 19,
            "level": 0
          },
          {
            "module": "agent.app.routers.automation",
            "item": "router",
            "alias": "automation_router",
            "line": 20,
            "level": 0
          },
          {
            "module": "agent.app.routers.natural_language",
            "item": "router",
            "alias": "natural_language_router",
            "line": 21,
            "level": 0
          },
          {
            "module": "agent.app.routers.intent",
            "item": "router",
            "alias": "intent_router",
            "line": 22,
            "level": 0
          },
          {
            "module": "agent.app.routers.suggestions",
            "item": "router",
            "alias": "suggestions_router",
            "line": 23,
            "level": 0
          },
          {
            "module": "agent.app.routers.llm",
            "item": "router",
            "alias": "llm_router",
            "line": 24,
            "level": 0
          },
          {
            "module": "agent.app.routers.personas_admin",
            "item": "router",
            "alias": "personas_admin_router",
            "line": 25,
            "level": 0
          },
          {
            "module": "agent.app.routers.llm_admin",
            "item": "router",
            "alias": "llm_admin_router",
            "line": 26,
            "level": 0
          },
          {
            "module": "agent.app.routers.llm_coordination",
            "item": "router",
            "alias": "llm_coordination_router",
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "QueryRequest",
            "line": 79,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'FastAPI', 'error', 'LoggerFactory', 'call_next', 'configure', 'include_router', 'middleware', 'run', 'ConsoleRenderer', 'get', 'time', 'info', 'HTTPException', 'getenv', 'StackInfoRenderer', 'get_logger'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/agents.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_logs",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "restart_agent",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_config",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "update_agent_config",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_control",
            "item": "get_agent_metrics",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'post', 'APIRouter', 'put', 'get', 'get_agent_logs', 'get_agent_metrics', 'update_agent_config', 'restart_agent', 'get_agent_config'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/admin.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Header",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "get_all_agents",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "get_system_metrics",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "run_agent_task",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 62,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "verify_api_key",
            "line": 17,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Agent",
            "line": 24,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryRequest",
            "line": 37,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryResponse",
            "line": 42,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'post', 'APIRouter', 'Agent', 'lower', 'split', 'isoformat', 'get_all_agents', 'get', 'run_agent_task', 'HTTPException', 'Header', 'now', 'len', 'QueryResponse', 'Depends', 'get_system_metrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/llm.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Union",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "get_dynamic_llm_router",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "UseCase",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "ModelTier",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "RouterConfig",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "LLMRequest",
            "line": 13,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "LLMResponse",
            "line": 26,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CodeGenerationRequest",
            "line": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ArchitectureRequest",
            "line": 42,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "DebugRequest",
            "line": 48,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ChatRequest",
            "line": 54,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "EmbeddingRequest",
            "line": 61,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'complete', 'post', 'get_dynamic_llm_router', 'len', 'Field', 'APIRouter', 'append', 'get_model_mapping', 'get', 'HTTPException', 'embed', 'get_metrics', 'LLMResponse', 'isinstance'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
          "line": 9,
          "module": "core.llm_router_dynamic",
          "item": "get_dynamic_llm_router",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
          "line": 9,
          "module": "core.llm_router_dynamic",
          "item": "UseCase",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
          "line": 9,
          "module": "core.llm_router_dynamic",
          "item": "ModelTier",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
          "line": 9,
          "module": "core.llm_router_dynamic",
          "item": "RouterConfig",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/routers/data_ingestion.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 12
          },
          {
            "module": "aiofiles",
            "alias": null,
            "line": 14
          },
          {
            "module": "os",
            "alias": null,
            "line": 15
          },
          {
            "module": "logging",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "UploadFile",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "File",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "select",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "update",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 21,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "core.database",
            "item": "get_db",
            "alias": null,
            "line": 23,
            "level": 3
          },
          {
            "module": "core.auth",
            "item": "get_current_user",
            "alias": null,
            "line": 24,
            "level": 3
          },
          {
            "module": "core.data_ingestion.parsers",
            "item": "get_parser",
            "alias": null,
            "line": 25,
            "level": 4
          },
          {
            "module": "core.data_ingestion.interfaces.processor",
            "item": "ProcessingStatus",
            "alias": null,
            "line": 26,
            "level": 4
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "FileUploadResponse",
            "line": 33,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ProcessingStatusResponse",
            "line": 41,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryRequest",
            "line": 54,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "QueryResponse",
            "line": 62,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'uuid4', 'Field', 'commit', 'read', 'BackgroundTasks', 'float', 'endswith', 'File', 'join', 'close', 'total_seconds', 'append', 'get', 'ProcessingStatusResponse', 'QueryResponse', 'range', 'mkdir', 'extend', 'int', 'str', 'APIRouter', 'cache_query_results', 'add_task', 'FileUploadResponse', 'len', 'Depends', 'fetch_all', 'fetch_one', 'ProcessingStatus', 'error', 'upload_files', 'execute', 'lower', 'check_query_cache', 'open', 'utcnow', 'write', 'unlink', 'info', 'HTTPException', 'Query'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
          "line": 14,
          "module": "aiofiles",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/routers/llm_admin.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "select",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "and_",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "delete",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "sqlalchemy.orm",
            "item": "selectinload",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "core.llm_router_dynamic",
            "item": "get_dynamic_llm_router",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMProvider",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMUseCase",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMModelAssignment",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMFallbackModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.database.llm_config_models",
            "item": "LLMMetric",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "agent.app.core.database",
            "item": "get_db",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "ProviderUpdate",
            "line": 27,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModelAssignmentCreate",
            "line": 34,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ModelTestRequest",
            "line": 45,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BulkModelUpdate",
            "line": 54,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'in_', 'commit', 'post', 'selectinload', 'put', 'Field', 'enumerate', 'get_configuration_summary', 'where', 'float', 'complete', 'round', 'join', 'order_by', 'total_seconds', 'append', 'get', 'LLMFallbackModel', 'delete', 'select', 'add', 'and_', 'scalars', 'discover_available_models', 'str', 'desc', 'refresh', 'APIRouter', 'LLMModelAssignment', 'scalar_one', 'add_task', 'to_dict', 'scalar_one_or_none', 'len', 'date', 'flush', 'sum', 'Depends', 'options', 'get_dynamic_llm_router', 'execute', 'all', 'values', 'utcnow', 'HTTPException', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
          "line": 13,
          "module": "core.llm_router_dynamic",
          "item": "get_dynamic_llm_router",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
          "line": 22,
          "module": "agent.app.core.database",
          "item": "get_db",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/routers/natural_language.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "WebSocket",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "StreamingResponse",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.auth.simple_auth",
            "item": "verify_api_key",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "run_agent_task",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "agent.app.services.real_agents",
            "item": "get_all_agents",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "NaturalLanguageProcessor",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "IntentClassifier",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "VoiceTranscriber",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "ResponseGenerator",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "TextCommand",
            "line": 31,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "VoiceCommand",
            "line": 38,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "NLResponse",
            "line": 46,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'NLResponse', 'handle_general_command', 'handle_agent_command', 'transcribe', 'get_all_agents', 'run_agent_task', 'NaturalLanguageProcessor', 'handle_workflow_command', 'dict', 'close', 'IntentClassifier', 'ResponseGenerator', 'get', 'TextCommand', 'receive_json', 'VoiceCommand', 'classify', 'VoiceTranscriber', 'str', 'APIRouter', 'handle_query', 'process_text_command', 'Depends', 'send_json', 'accept', 'hasattr', 'websocket', 'process_voice_command', 'text_to_speech', 'generate'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/llm_coordination.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "agent.app.core.database",
            "item": "get_db",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "get_intelligent_llm_router",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "QueryType",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "get_agent_conductor",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "create_comprehensive_search_workflow",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "agent.app.services.agent_conductor",
            "item": "WorkflowStatus",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "get_specialized_agent",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "AgentType",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "process_agent_task",
            "alias": null,
            "line": 24,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "TestRoutingRequest",
            "line": 34,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowCreateRequest",
            "line": 40,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "AgentTaskRequest",
            "line": 46,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonalSearchRequest",
            "line": 51,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ApartmentAnalysisRequest",
            "line": 57,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ClinicalTrialSearchRequest",
            "line": 62,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'search_clinical_trials', 'post', 'learn_preference', 'Field', 'get_intelligent_llm_router', 'get_specialized_agent', 'analyze_listing', 'cancel_workflow', 'create_comprehensive_search_workflow', 'process_agent_task', 'get', 'get_workflow_status', 'adaptive_search', 'create_workflow', 'str', 'APIRouter', 'route_query', 'add_task', 'AgentType', 'get_routing_analytics', 'isoformat', 'len', 'sum', 'values', 'get_status', 'utcnow', 'market_analysis', 'HTTPException', 'get_agent_conductor', 'Query', 'setup_trial_alert'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
          "line": 17,
          "module": "agent.app.core.database",
          "item": "get_db",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
          "line": 18,
          "module": "core.llm_intelligent_router",
          "item": "get_intelligent_llm_router",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
          "line": 18,
          "module": "core.llm_intelligent_router",
          "item": "QueryType",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/routers/automation.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.automation",
            "item": "trigger_backup",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.automation",
            "item": "run_healthcheck",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.automation",
            "item": "trigger_deploy",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.automation",
            "item": "snapshot_env",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'post', 'APIRouter', 'trigger_deploy', 'run_healthcheck', 'trigger_backup', 'get', 'snapshot_env'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/chat.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'post', 'APIRouter'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/suggestions.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "agent.app.routers.admin",
            "item": "verify_api_key",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [
          {
            "name": "Suggestion",
            "line": 11,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SuggestionsResponse",
            "line": 20,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "SuggestionEngine",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'list', 'min', 'append', 'get', 'keys', 'SuggestionsResponse', 'print', 'sort', 'str', 'get_suggestions', 'APIRouter', 'split', 'SuggestionEngine', 'copy', 'any', 'Depends', 'strip', 'lower', 'Query', 'Suggestion'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/workflows.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.workflow_runner",
            "item": "run_workflow",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.workflow_runner",
            "item": "get_workflow_history",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.workflow_runner",
            "item": "get_workflow_schedule",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.workflow_runner",
            "item": "set_workflow_schedule",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'run_workflow', 'post', 'APIRouter', 'get_workflow_schedule', 'get', 'set_workflow_schedule', 'get_workflow_history'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/intent.py": {
      "imports": {
        "standard": [
          {
            "module": "re",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 3,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "agent.app.routers.admin",
            "item": "verify_api_key",
            "alias": null,
            "line": 8,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "detect",
            "line": 41,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_extract_entities",
            "line": 60,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IntentRequest",
            "line": 12,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "IntentResponse",
            "line": 18,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "IntentDetector",
            "line": 25,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'detect', 'str', 'post', 'APIRouter', 'strip', 'match', 'IntentDetector', 'lower', 'print', 'HTTPException', 'items', 'IntentResponse', '_extract_entities', 'Depends', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 11
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "UploadFile",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "File",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Query",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "WebSocket",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "WebSocketDisconnect",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "JSONResponse",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "fastapi.responses",
            "item": "StreamingResponse",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "AsyncGenerator",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 18,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "core.database",
            "item": "get_db",
            "alias": null,
            "line": 20,
            "level": 3
          },
          {
            "module": "core.auth",
            "item": "get_current_user",
            "alias": null,
            "line": 21,
            "level": 3
          },
          {
            "module": "core.data_ingestion.deduplication",
            "item": "DeduplicationEngine",
            "alias": null,
            "line": 22,
            "level": 4
          },
          {
            "module": "core.data_ingestion.deduplication",
            "item": "DuplicateResolver",
            "alias": null,
            "line": 22,
            "level": 4
          },
          {
            "module": "core.data_ingestion.deduplication",
            "item": "DeduplicationAuditLogger",
            "alias": null,
            "line": 22,
            "level": 4
          },
          {
            "module": "core.data_ingestion.deduplication",
            "item": "UploadChannel",
            "alias": null,
            "line": 22,
            "level": 4
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 40,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "disconnect",
            "line": 47,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "ConnectionManager",
            "line": 39,
            "bases": [],
            "decorators": []
          },
          {
            "name": "UploadRequestV2",
            "line": 62,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "UploadResponseV2",
            "line": 73,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "NaturalLanguageUploadRequest",
            "line": 84,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "StreamingUploadResponse",
            "line": 90,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'commit', 'post', 'getLogger', 'uuid4', 'Field', 'read', 'log_duplicate_detected', 'strftime', 'loads', 'sleep', 'receive_text', 'BackgroundTasks', 'log_resolution', 'isinstance', 'UploadChannel', 'StreamingUploadResponse', 'File', 'disconnect', 'dict', 'generate_progress', 'append', 'resolve_duplicate', 'DeduplicationEngine', 'stop', 'get', 'DeduplicationAuditLogger', 'range', 'UploadResponseV2', 'str', 'get_upload_status', 'APIRouter', 'dumps', 'add_task', 'DuplicateResolver', 'StreamingResponse', 'any', 'decode', 'ConnectionManager', 'check_duplicate', 'len', 'log_duplicate_check', 'Depends', 'fetch_all', 'accept', 'execute', 'lower', 'values', 'websocket', 'connect', 'utcnow', 'send_personal_message', 'items', 'start', 'send_text', 'log_bulk_operation', 'Query'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/personas_admin.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 3
          }
        ],
        "from": [
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Header",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "Field",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfigError",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfigManager",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaConfiguration",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaNotFoundError",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "core.personas",
            "item": "PersonaStatus",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 209,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_persona_manager",
            "line": 29,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_api_key",
            "line": 55,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PersonaListResponse",
            "line": 73,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaUpdateRequest",
            "line": 80,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "PersonaExportRequest",
            "line": 98,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ValidationReport",
            "line": 103,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "Config",
            "line": 93,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'post', 'getLogger', 'put', 'Field', 'list', 'get_persona_manager', 'Header', 'model_dump', 'list_personas', 'load_all_personas', 'reload_persona', 'get', 'mkdir', 'str', 'APIRouter', 'split', 'PersonaListResponse', 'export_persona', 'PersonaConfigManager', 'len', 'Depends', 'error', 'validate_all', 'strip', 'hasattr', 'utcnow', 'HTTPException', 'get_persona', 'items', 'info', 'setattr', 'check_for_updates', 'ValidationReport'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/auth.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 8
          },
          {
            "module": "jwt",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "HTTPException",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "Depends",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "status",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "fastapi.security",
            "item": "OAuth2PasswordBearer",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "fastapi.security",
            "item": "OAuth2PasswordRequestForm",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "passlib.context",
            "item": "CryptContext",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "verify_password",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_password_hash",
            "line": 53,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "authenticate_user",
            "line": 57,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "create_access_token",
            "line": 64,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "verify_token",
            "line": 76,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "Token",
            "line": 34,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TokenData",
            "line": 40,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "User",
            "line": 44,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'OAuth2PasswordBearer', 'hash', 'update', 'User', 'encode', 'get', 'verify_token', 'int', 'Token', 'APIRouter', 'copy', 'CryptContext', 'decode', 'getenv', 'timedelta', 'verify', 'Depends', 'TokenData', 'utcnow', 'authenticate_user', 'HTTPException', 'create_access_token'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/audit.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.audit_log",
            "item": "get_audit_log",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.audit_log",
            "item": "export_audit_log",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_audit_log', 'get', 'APIRouter', 'export_audit_log'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/system.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.system_health",
            "item": "get_system_health",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.system_health",
            "item": "get_live_metrics",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.system_health",
            "item": "get_alerts",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'get_system_health', 'APIRouter', 'get_alerts', 'get', 'get_live_metrics'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/routers/resources.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "fastapi",
            "item": "APIRouter",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "UploadFile",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "File",
            "alias": null,
            "line": 1,
            "level": 0
          },
          {
            "module": "agent.app.services.resource_ops",
            "item": "upload_resource",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.resource_ops",
            "item": "download_resource",
            "alias": null,
            "line": 2,
            "level": 0
          },
          {
            "module": "agent.app.services.resource_ops",
            "item": "delete_resource",
            "alias": null,
            "line": 2,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "{'post', 'File', 'download_resource', 'APIRouter', 'get', 'delete', 'delete_resource', 'upload_resource'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/core/config.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_database_url",
            "line": 72,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_production",
            "line": 86,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "is_development",
            "line": 90,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'int', 'float', 'lower', 'getenv'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/core/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/system_health.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_system_health",
            "line": 1,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_live_metrics",
            "line": 6,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_alerts",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/agent_control.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_logs",
            "line": 1,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "restart_agent",
            "line": 6,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_config",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "update_agent_config",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_agent_metrics",
            "line": 21,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/real_agents.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 1
          },
          {
            "module": "random",
            "alias": null,
            "line": 2
          },
          {
            "module": "subprocess",
            "alias": null,
            "line": 3
          },
          {
            "module": "psutil",
            "alias": null,
            "line": 8
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 4,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 5,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "initialize_real_agents",
            "line": 116,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 16,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "to_dict",
            "line": 28,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "RealAgent",
            "line": 13,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'list', 'ValueError', 'run', 'create_task', 'initialize_real_agents', 'sleep', 'disk_usage', 'glob', 'cpu_percent', 'round', 'append', 'get', 'now', 'randint', 'str', 'Process', 'split', 'to_dict', 'isoformat', '_run_system_task', 'len', 'sum', 'random', 'virtual_memory', 'strip', 'lower', 'memory_info', 'run_task', 'values', '_run_analyzer_task', 'RealAgent', '_run_monitor_task'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/specialized_agents.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 11
          },
          {
            "module": "logging",
            "alias": null,
            "line": 15
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 17
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 19
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 24
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "select",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "and_",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "func",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "weaviate",
            "item": "Client",
            "alias": null,
            "line": 23,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "get_intelligent_llm_router",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "QueryType",
            "alias": null,
            "line": 26,
            "level": 0
          },
          {
            "module": "agent.app.core.database",
            "item": "get_db",
            "alias": null,
            "line": 27,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 77,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_redis",
            "line": 95,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_init_weaviate",
            "line": 106,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 137,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 351,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_calculate_tech_score",
            "line": 457,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 583,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "AgentType",
            "line": 31,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "UserPreference",
            "line": 38,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ApartmentListing",
            "line": 47,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "ClinicalTrial",
            "line": 62,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "BaseSpecializedAgent",
            "line": 74,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PersonalAgent",
            "line": 132,
            "bases": [
              "BaseSpecializedAgent"
            ],
            "decorators": []
          },
          {
            "name": "PayReadyAgent",
            "line": 346,
            "bases": [
              "BaseSpecializedAgent"
            ],
            "decorators": []
          },
          {
            "name": "ParagonMedicalResearchAgent",
            "line": 578,
            "bases": [
              "BaseSpecializedAgent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'_calculate_overall_score', 'search_clinical_trials', 'getLogger', 'learn_preference', 'enumerate', 'list', 'timestamp', 'ValueError', 'search_pubmed', 'get_intelligent_llm_router', 'min', 'get_specialized_agent', 'analyze_listing', '_extract_and_rank_results', 'hset', '_parse_clinical_trials', 'float', '_filter_by_distance', 'ClinicalTrial', 'update', 'join', 'Client', 'process_task', '_calculate_neighborhood_score', 'setex', 'append', 'fromisoformat', 'get', 'keys', 'adaptive_search', 'extend', 'sort', 'str', 'ParagonMedicalResearchAgent', 'PersonalAgent', '_init_weaviate', 'max', 'split', 'route_query', 'sorted', '_enhance_query_with_preferences', 'dumps', 'Redis', 'any', 'isoformat', '_init_redis', '_update_vector_store', 'PayReadyAgent', 'len', '__init__', 'super', 'defaultdict', 'error', 'ApartmentListing', 'strip', 'lower', '_calculate_relevance_score', 'setup_trial_alert', 'utcnow', 'market_analysis', 'info', '_calculate_tech_score', 'items', 'field', 'UserPreference', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          "line": 26,
          "module": "core.llm_intelligent_router",
          "item": "get_intelligent_llm_router",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          "line": 26,
          "module": "core.llm_intelligent_router",
          "item": "QueryType",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
          "line": 27,
          "module": "agent.app.core.database",
          "item": "get_db",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/services/automation.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "json",
            "alias": null,
            "line": 7
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 8,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 9,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 9,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "trigger_backup",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run_healthcheck",
            "line": 18,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "trigger_deploy",
            "line": 25,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "snapshot_env",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'utcnow', 'getenv', 'isoformat'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/audit_log.py": {
      "imports": {
        "standard": [],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 7,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_audit_log",
            "line": 9,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "export_audit_log",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "{'utcnow', 'isoformat'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/agent_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 12
          },
          {
            "module": "json",
            "alias": null,
            "line": 13
          },
          {
            "module": "uuid",
            "alias": null,
            "line": 14
          },
          {
            "module": "logging",
            "alias": null,
            "line": 19
          },
          {
            "module": "networkx",
            "alias": "nx",
            "line": 21
          },
          {
            "module": "redis.asyncio",
            "alias": "redis",
            "line": 23
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "field",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "collections",
            "item": "defaultdict",
            "alias": null,
            "line": 20,
            "level": 0
          },
          {
            "module": "sqlalchemy.ext.asyncio",
            "item": "AsyncSession",
            "alias": null,
            "line": 24,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "select",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "and_",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "sqlalchemy",
            "item": "func",
            "alias": null,
            "line": 25,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "get_specialized_agent",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "AgentType",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "agent.app.services.specialized_agents",
            "item": "BaseSpecializedAgent",
            "alias": null,
            "line": 27,
            "level": 0
          },
          {
            "module": "core.llm_intelligent_router",
            "item": "get_intelligent_llm_router",
            "alias": null,
            "line": 32,
            "level": 0
          },
          {
            "module": "agent.app.core.database",
            "item": "get_db",
            "alias": null,
            "line": 33,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_agent_conductor",
            "line": 579,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 86,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "record_success",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "record_failure",
            "line": 98,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "can_execute",
            "line": 106,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 126,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_redis",
            "line": 150,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_validate_dependencies",
            "line": 210,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_build_execution_plan",
            "line": 269,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_update_average_duration",
            "line": 397,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "WorkflowStatus",
            "line": 37,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "TaskStatus",
            "line": 46,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "WorkflowTask",
            "line": 56,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "Workflow",
            "line": 71,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "CircuitBreaker",
            "line": 83,
            "bases": [],
            "decorators": []
          },
          {
            "name": "Agentconductor",
            "line": 121,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Workflow', 'getLogger', 'uuid4', 'put', 'list', '_update_average_duration', 'Queue', 'ValueError', '_execute_single_task', 'create_task', '_execute_task_batch', 'get_intelligent_llm_router', 'loads', 'sleep', 'get_specialized_agent', 'hset', 'isinstance', '_health_monitor', 'update', 'WorkflowTask', 'add_node', 'total_seconds', 'process_task', '_create_checkpoint', 'append', 'Agentconductor', 'DiGraph', 'get', 'keys', 'add', 'can_execute', 'range', 'create_workflow', '_build_execution_plan', 'hget', 'str', 'RuntimeError', 'max', 'record_success', 'dumps', 'AgentType', 'Redis', 'isoformat', 'is_directed_acyclic_graph', '_init_redis', 'len', 'sum', 'CircuitBreaker', 'topological_sort', 'add_edge', 'defaultdict', 'error', 'record_failure', '_message_processor', 'hgetall', 'warning', 'all', 'set', 'values', 'get_status', 'utcnow', 'gather', 'info', 'get_agent_conductor', 'items', 'field', '_validate_dependencies'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          "line": 21,
          "module": "networkx",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          "line": 32,
          "module": "core.llm_intelligent_router",
          "item": "get_intelligent_llm_router",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
          "line": 33,
          "module": "agent.app.core.database",
          "item": "get_db",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/agent/app/services/workflow_runner.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "run_workflow",
            "line": 1,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow_history",
            "line": 6,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "get_workflow_schedule",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "set_workflow_schedule",
            "line": 16,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/natural_language_processor.py": {
      "imports": {
        "standard": [
          {
            "module": "os",
            "alias": null,
            "line": 6
          },
          {
            "module": "base64",
            "alias": null,
            "line": 7
          },
          {
            "module": "json",
            "alias": null,
            "line": 8
          },
          {
            "module": "re",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          },
          {
            "module": "httpx",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "elevenlabs.client",
            "item": "ElevenLabs",
            "alias": null,
            "line": 15,
            "level": 0
          },
          {
            "module": "elevenlabs",
            "item": "VoiceSettings",
            "alias": null,
            "line": 16,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__post_init__",
            "line": 44,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 51,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_load_intent_patterns",
            "line": 59,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 88,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_resolve_agent_id",
            "line": 129,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_resolve_workflow_name",
            "line": 140,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 154,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 194,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_init_elevenlabs",
            "line": 199,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_generate_help_response",
            "line": 258,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "IntentCategory",
            "line": 24,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "Intent",
            "line": 34,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "NaturalLanguageProcessor",
            "line": 48,
            "bases": [],
            "decorators": []
          },
          {
            "name": "IntentClassifier",
            "line": 85,
            "bases": [],
            "decorators": []
          },
          {
            "name": "VoiceTranscriber",
            "line": 151,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ResponseGenerator",
            "line": 191,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Intent', 'post', '_generate_help_response', 'ElevenLabs', 'remove', 'NaturalLanguageProcessor', 'getpid', 'join', 'AsyncClient', 'get_all', 'get', 'VoiceSettings', 'print', 'groups', '_load_intent_patterns', 'b64encode', 'decode', 'getenv', 'len', 'sum', 'b64decode', 'json', 'convert', 'strip', 'lower', '_init_elevenlabs', 'open', 'write', 'exists', 'items', '_resolve_workflow_name', '_resolve_agent_id', 'search'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/resource_ops.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "upload_resource",
            "line": 1,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "download_resource",
            "line": 6,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "delete_resource",
            "line": 11,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 6,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 7,
            "level": 0
          },
          {
            "module": "dataclasses",
            "item": "dataclass",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "Agent",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentConfig",
            "alias": "BaseAgentConfig",
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentCapability",
            "alias": "BaseAgentCapability",
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentMessage",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.agents.base",
            "item": "AgentStatus",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "core.services.memory.unified_memory",
            "item": "get_memory_service",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "agent.app.services.natural_language_processor",
            "item": "ResponseGenerator",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "create_agent_from_answers",
            "line": 263,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 61,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "add_task",
            "line": 250,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "approve_task",
            "line": 254,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "CustomAgentCapability",
            "line": 26,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "AutonomyLevel",
            "line": 33,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "CustomAgentConfig",
            "line": 42,
            "bases": [],
            "decorators": [
              "dataclass"
            ]
          },
          {
            "name": "YourFirstAgent",
            "line": 56,
            "bases": [
              "Agent"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'remember', 'timestamp', '_requires_approval', 'sleep', 'pop', '_handle_data_collection', 'append', 'execute_workflow', 'get', 'ResponseGenerator', 'add', '_handle_automation', 'now', 'CustomAgentConfig', 'str', 'AgentMessage', '_generate_response', 'isoformat', 'any', 'len', 'BaseAgentConfig', '_execute_task', '__init__', 'super', 'error', '_process_single_task', 'lower', 'send_message', '_handle_integration', 'set', 'gather', 'info', '_handle_general_task', 'text_to_speech', 'YourFirstAgent'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/agent/app/services/agent_templates/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "first_agent_template",
            "item": "YourFirstAgent",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "first_agent_template",
            "item": "CustomAgentConfig",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "first_agent_template",
            "item": "AutonomyLevel",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "first_agent_template",
            "item": "CustomAgentCapability",
            "alias": null,
            "line": 3,
            "level": 1
          },
          {
            "module": "first_agent_template",
            "item": "create_agent_from_answers",
            "alias": null,
            "line": 3,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/tools/llm_test_server/main.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 8
          },
          {
            "module": "json",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "os",
            "alias": null,
            "line": 11
          },
          {
            "module": "time",
            "alias": null,
            "line": 12
          },
          {
            "module": "prometheus_client",
            "alias": "prom",
            "line": 16
          },
          {
            "module": "uvicorn",
            "alias": null,
            "line": 17
          },
          {
            "module": "openrouter",
            "alias": null,
            "line": 111
          },
          {
            "module": "portkey",
            "alias": null,
            "line": 118
          },
          {
            "module": "openai",
            "alias": null,
            "line": 125
          },
          {
            "module": "anthropic",
            "alias": null,
            "line": 132
          },
          {
            "module": "deepseek",
            "alias": null,
            "line": 139
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "BackgroundTasks",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "fastapi",
            "item": "FastAPI",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "pydantic",
            "item": "BaseModel",
            "alias": null,
            "line": 19,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "get_provider_client",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 386,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b27436ad0>"
            ]
          },
          {
            "name": "metrics",
            "line": 515,
            "is_private": false,
            "is_dunder": false,
            "decorators": [
              "<ast.Call object at 0x7a6b26b66510>"
            ]
          },
          {
            "name": "start_server",
            "line": 520,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_results",
            "line": 457,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TestRequest",
            "line": 48,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "BenchmarkRequest",
            "line": 58,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "CascadeTestRequest",
            "line": 66,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "ProviderResponse",
            "line": 80,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          },
          {
            "name": "TestResponse",
            "line": 91,
            "bases": [
              "BaseModel"
            ],
            "decorators": []
          }
        ],
        "function_calls": "{'post', 'getLogger', 'list', 'ValueError', 'run', 'labels', 'strftime', 'startswith', 'sleep', 'ProviderResponse', 'dict', 'Counter', 'cascade_call', 'Client', 'OpenRouter', 'append', 'get', 'TestResponse', 'observe', 'OpenAI', 'add', 'range', 'now', 'wait_for', 'str', 'FastAPI', 'start_server', 'split', 'add_task', 'inc', 'copy', 'isoformat', 'basicConfig', 'get_provider_client', 'dump', 'Anthropic', 'error', 'generate_latest', 'open', 'Histogram', 'set', 'time', 'call_provider', 'info', 'execute_call', 'create'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
          "line": 111,
          "module": "openrouter",
          "type": "standard",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
          "line": 139,
          "module": "deepseek",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/tools/llm_test_server/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 8
          },
          {
            "module": "joblib",
            "alias": null,
            "line": 9
          },
          {
            "module": "asyncio",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "concurrent.futures",
            "item": "ThreadPoolExecutor",
            "alias": null,
            "line": 14,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 19,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_model",
            "line": 26,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "preprocess_input",
            "line": 37,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict",
            "line": 49,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "batch_predict",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 93,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 116,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_model",
            "line": 119,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "predict",
            "line": 126,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "list_models",
            "line": 133,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "health_check",
            "line": 137,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "InferencePipeline",
            "line": 16,
            "bases": [],
            "decorators": []
          },
          {
            "name": "ModelServer",
            "line": 113,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'InferencePipeline', 'list', 'std', 'ValueError', 'predict_proba', 'preprocess_input', 'load', 'total_seconds', 'append', 'run_in_executor', 'get', 'keys', 'get_event_loop', 'now', 'print', 'int', 'str', 'max', 'load_model', 'health_check', 'tolist', 'isoformat', 'ThreadPoolExecutor', 'mean', 'reshape', 'ModelServer', 'open', 'array', 'with_suffix', 'exists', 'predict', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/ml/pipelines/training_pipeline.py": {
      "imports": {
        "standard": [
          {
            "module": "json",
            "alias": null,
            "line": 7
          },
          {
            "module": "mlflow",
            "alias": null,
            "line": 8
          },
          {
            "module": "numpy",
            "alias": "np",
            "line": 9
          },
          {
            "module": "joblib",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "pathlib",
            "item": "Path",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "sklearn.metrics",
            "item": "accuracy_score",
            "alias": null,
            "line": 62,
            "level": 0
          },
          {
            "module": "sklearn.metrics",
            "item": "precision_score",
            "alias": null,
            "line": 62,
            "level": 0
          },
          {
            "module": "sklearn.metrics",
            "item": "recall_score",
            "alias": null,
            "line": 62,
            "level": 0
          },
          {
            "module": "sklearn.metrics",
            "item": "f1_score",
            "alias": null,
            "line": 62,
            "level": 0
          },
          {
            "module": "sklearn.model_selection",
            "item": "train_test_split",
            "alias": null,
            "line": 110,
            "level": 0
          },
          {
            "module": "sklearn.ensemble",
            "item": "RandomForestClassifier",
            "alias": null,
            "line": 47,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 18,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "load_data",
            "line": 24,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "preprocess_data",
            "line": 32,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "train_model",
            "line": 39,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "evaluate_model",
            "line": 60,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "save_model",
            "line": 79,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "run",
            "line": 101,
            "is_private": false,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "TrainingPipeline",
            "line": 15,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'Path', 'TrainingPipeline', 'score', 'std', 'log_model', 'run', 'recall_score', 'load_data', 'start_run', 'set_experiment', 'strftime', 'precision_score', 'f1_score', 'get', 'log_metric', 'randn', 'print', 'mkdir', 'randint', 'train_model', 'now', 'str', 'RandomForestClassifier', 'evaluate_model', 'isoformat', 'mean', 'dump', 'accuracy_score', 'open', 'with_suffix', 'predict', 'train_test_split', 'fit', 'log_params', 'items', 'preprocess_data', 'save_model'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
          "line": 8,
          "module": "mlflow",
          "type": "standard",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/services/pay_ready/etl_conductor.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "os",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 13
          },
          {
            "module": "json",
            "alias": null,
            "line": 15
          },
          {
            "module": "aiohttp",
            "alias": null,
            "line": 17
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "enum",
            "item": "Enum",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "prefect",
            "item": "task",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prefect",
            "item": "flow",
            "alias": null,
            "line": 18,
            "level": 0
          },
          {
            "module": "prefect.task_runners",
            "item": "ConcurrentTaskRunner",
            "alias": null,
            "line": 19,
            "level": 0
          },
          {
            "module": "shared.database.unified_postgresql_enhanced",
            "item": "get_unified_postgresql_enhanced",
            "alias": null,
            "line": 21,
            "level": 0
          },
          {
            "module": "services.weaviate_service",
            "item": "WeaviateService",
            "alias": null,
            "line": 22,
            "level": 0
          },
          {
            "module": "services.weaviate_service",
            "item": "WeaviateConfig",
            "alias": null,
            "line": 22,
            "level": 0
          }
        ],
        "relative": [
          {
            "module": "entity_resolver",
            "item": "PayReadyEntityResolver",
            "alias": null,
            "line": 23,
            "level": 1
          },
          {
            "module": "memory_manager",
            "item": "PayReadyMemoryManager",
            "alias": null,
            "line": 24,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 56,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_chunk_transcript",
            "line": 370,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "__init__",
            "line": 528,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "SourceType",
            "line": 28,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "SyncStatus",
            "line": 36,
            "bases": [
              "Enum"
            ],
            "decorators": []
          },
          {
            "name": "PayReadyETLconductor",
            "line": 44,
            "bases": [],
            "decorators": []
          },
          {
            "name": "AirbyteClient",
            "line": 525,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'get_unified_postgresql_enhanced', 'post', 'getLogger', 'enumerate', 'PayReadyEntityResolver', 'task', 'ValueError', 'store_interaction', 'resolve_company', 'fetchrow', 'sleep', 'resolve_person', 'ClientSession', '_fetch_new_records', 'update', 'dict', 'join', '_authenticate', 'processor', 'close', 'append', 'get', '_chunk_transcript', 'get_job_status', '_get_connection_id', '_get_last_processed', 'int', 'split', 'dumps', 'isoformat', 'fetch_raw', 'warm_cache', 'len', 'timedelta', 'execute_raw', 'getenv', 'AirbyteClient', 'json', 'PayReadyMemoryManager', 'error', 'initialize', 'WeaviateConfig', 'trigger_sync', '_update_sync_state', 'warning', '_init_airbyte_client', '_extract_company_from_text', '_ensure_session', 'utcnow', '_update_checkpoint', 'info', 'WeaviateService'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
          "line": 18,
          "module": "prefect",
          "item": "task",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
          "line": 18,
          "module": "prefect",
          "item": "flow",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
          "line": 19,
          "module": "prefect.task_runners",
          "item": "ConcurrentTaskRunner",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/services/pay_ready/entity_resolver.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "logging",
            "alias": null,
            "line": 10
          },
          {
            "module": "json",
            "alias": null,
            "line": 14
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Tuple",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "uuid",
            "item": "uuid4",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "rapidfuzz",
            "item": "fuzz",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "rapidfuzz",
            "item": "process",
            "alias": null,
            "line": 16,
            "level": 0
          },
          {
            "module": "email_validator",
            "item": "validate_email",
            "alias": null,
            "line": 17,
            "level": 0
          },
          {
            "module": "email_validator",
            "item": "EmailNotValidError",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 33,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_normalize_email",
            "line": 517,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_normalize_company_name",
            "line": 530,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PayReadyEntityResolver",
            "line": 21,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'uuid4', '_check_person_company_match', 'min', 'fetchrow', 'loads', 'isinstance', 'resolve_person', '_add_source_mapping', '_create_new_company', 'update', '_normalize_email', 'join', 'validate_email', 'replace', '_fuzzy_match_company', 'append', 'get', 'str', '_create_new_person', 'split', '_normalize_company_name', 'dumps', 'extractOne', 'isoformat', 'fetch_raw', 'execute_raw', 'len', 'initialize', '_fuzzy_match_person', 'strip', 'warning', 'lower', 'utcnow', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": [
        {
          "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
          "line": 16,
          "module": "rapidfuzz",
          "item": "fuzz",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
          "line": 16,
          "module": "rapidfuzz",
          "item": "process",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
          "line": 17,
          "module": "email_validator",
          "item": "validate_email",
          "type": "from",
          "issue": "Module not found"
        },
        {
          "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
          "line": 17,
          "module": "email_validator",
          "item": "EmailNotValidError",
          "type": "from",
          "issue": "Module not found"
        }
      ]
    },
    "/root/cherry_ai-main/services/pay_ready/__init__.py": {
      "imports": {
        "standard": [],
        "from": [],
        "relative": [
          {
            "module": "etl_conductor",
            "item": "PayReadyETLconductor",
            "alias": null,
            "line": 9,
            "level": 1
          },
          {
            "module": "entity_resolver",
            "item": "PayReadyEntityResolver",
            "alias": null,
            "line": 10,
            "level": 1
          },
          {
            "module": "memory_manager",
            "item": "PayReadyMemoryManager",
            "alias": null,
            "line": 11,
            "level": 1
          },
          {
            "module": "query_agent",
            "item": "PayReadyQueryAgent",
            "alias": null,
            "line": 12,
            "level": 1
          }
        ],
        "star": []
      },
      "definitions": {
        "functions": [],
        "classes": [],
        "function_calls": "set()",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/services/pay_ready/memory_manager.py": {
      "imports": {
        "standard": [
          {
            "module": "asyncio",
            "alias": null,
            "line": 9
          },
          {
            "module": "json",
            "alias": null,
            "line": 10
          },
          {
            "module": "logging",
            "alias": null,
            "line": 11
          },
          {
            "module": "hashlib",
            "alias": null,
            "line": 15
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Set",
            "alias": null,
            "line": 12,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 13,
            "level": 0
          },
          {
            "module": "collections",
            "item": "OrderedDict",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "services.weaviate_service",
            "item": "WeaviateService",
            "alias": null,
            "line": 17,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 42,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          },
          {
            "name": "_store_in_hot_cache",
            "line": 109,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_get_collection_for_type",
            "line": 230,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          },
          {
            "name": "_estimate_item_size",
            "line": 474,
            "is_private": true,
            "is_dunder": false,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "MemoryTier",
            "line": 21,
            "bases": [],
            "decorators": []
          },
          {
            "name": "PayReadyMemoryManager",
            "line": 29,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'getLogger', 'cache_stats', 'timestamp', 'ValueError', 'create_task', 'fetchrow', '_process_vector_batch', 'loads', '_store_in_warm_cache', '_store_in_cold_storage', 'update', 'dict', 'total_seconds', 'fromisoformat', 'cache_get', 'append', 'get', 'get_interaction', 'OrderedDict', '_get_collection_for_type', 'extend', 'sort', 'popitem', 'int', 'dumps', 'copy', 'isoformat', '_get_full_context', 'fetch_raw', 'cache_set', 'warm_cache', 'len', 'timedelta', 'execute_raw', 'sum', 'error', '_estimate_item_size', '_search_collection', '_compress_item', '_store_in_hot_cache', 'values', 'utcnow', '_get_interaction_context', 'info', 'items'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    },
    "/root/cherry_ai-main/services/pay_ready/query_agent.py": {
      "imports": {
        "standard": [
          {
            "module": "logging",
            "alias": null,
            "line": 9
          },
          {
            "module": "weaviate",
            "alias": null,
            "line": 13
          }
        ],
        "from": [
          {
            "module": "typing",
            "item": "Dict",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "List",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Optional",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "typing",
            "item": "Any",
            "alias": null,
            "line": 10,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "datetime",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "datetime",
            "item": "timedelta",
            "alias": null,
            "line": 11,
            "level": 0
          },
          {
            "module": "weaviate.classes",
            "item": "Auth",
            "alias": null,
            "line": 14,
            "level": 0
          },
          {
            "module": "weaviate.agents.query",
            "item": "QueryAgent",
            "alias": null,
            "line": 15,
            "level": 0
          }
        ],
        "relative": [],
        "star": []
      },
      "definitions": {
        "functions": [
          {
            "name": "__init__",
            "line": 30,
            "is_private": true,
            "is_dunder": true,
            "decorators": []
          }
        ],
        "classes": [
          {
            "name": "PayReadyQueryAgent",
            "line": 19,
            "bases": [],
            "decorators": []
          }
        ],
        "function_calls": "{'str', 'error', 'getLogger', 'query', 'join', 'initialize', 'run', 'append', 'isoformat', 'utcnow', 'get', 'QueryAgent', 'info', 'timedelta'}",
        "class_instantiations": "set()"
      },
      "broken_imports": []
    }
  }
}