{
  "audit_timestamp": "2025-06-03T21:52:02.554500",
  "project_root": "/root/cherry_ai-main",
  "statistics": {
    "total_files": 0,
    "python_files": 873,
    "js_files": 127,
    "config_files": 190,
    "api_endpoints": 52,
    "database_models": 0,
    "security_issues": 15,
    "performance_issues": 96
  },
  "issues": {
    "critical": [
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_elevenlabs_voice.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.513908"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/find_critical_lint_issues.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.516926"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/key_fix_script.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.518604"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/quick_check.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.519818"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/execute_strategy_workflow.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.521907"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/main_app.py",
        "line": 81,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.523414"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.525609"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_unified_systems.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.533592"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/verify_factory_ai_connection.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.535253"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scan_github_workflows.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.536284"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/error_handling_consolidation.py",
        "line": 23,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.538778"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 32,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.542469"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.544020"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.545595"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.552930"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_cli.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.556545"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/webscraping_app.py",
        "line": 97,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.559661"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/code_analysis.py",
        "line": 43,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.562630"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_personas_api.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.565394"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_mcp_system.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.569384"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.572263"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/memory_management_improvements.py",
        "line": 35,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.576435"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_modular_system.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.582144"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/service_management_consolidation.py",
        "line": 45,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.583554"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/monitor_extension_performance.py",
        "line": 27,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.586705"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scan_for_hardcoded_values.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.589201"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/data_source_integrations.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.590609"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/verify_app_startup.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.595321"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/test_mcp_data.py",
        "line": 29,
        "issue": "Syntax error: invalid syntax",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.596022"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/utils.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.597901"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/migration_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.600482"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/simple_mcp.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.604269"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/analyze_code_wrapper.py",
        "line": 4,
        "issue": "Syntax error: unterminated string literal (detected at line 4)",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.605839"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
        "line": 41,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.607319"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/phidata_team_agent_implementation.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.609642"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/setup_mcp_database.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.612022"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/simplified_agent_example.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.613123"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
        "line": 10,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.614065"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.615684"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/data_ingestion_demo.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.618422"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/litellm_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.626040"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/examples/memory_management_example.py",
        "line": 26,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.630137"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/cherry_ai_vultr_stack.py",
        "line": 40,
        "issue": "Syntax error: '(' was never closed",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.631689"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/vultr_deployment.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:52.635264"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.643647"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.646338"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/health_monitor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.647728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/mode_manager.py",
        "line": 13,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.649152"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.652350"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/main.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.653242"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/connection_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.655178"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/logging_config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.656654"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/llm_types.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.657400"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.658073"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.ai-memory/initialize.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.660489"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
        "line": 6,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.678757"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/deployment_readiness_check.py",
        "line": 160,
        "issue": "Hardcoded credential: password",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:52.683008"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.687913"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_final.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.688991"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.692640"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.696303"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/complete_domain_coordination.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.698014"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ai_code_assistant.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.711700"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.713745"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/check_dependencies.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.714199"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.715444"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_api_keys.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.717880"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/conductor_daemon.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.718926"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/architecture_analyzer.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.719417"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.722773"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
        "line": 6,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.730892"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 421,
        "issue": "Hardcoded credential: secrets_config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:52.756900"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_weaviate_simple.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.774656"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 25,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.775452"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_mcp_connection.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.781826"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/health_monitor.py",
        "line": 21,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.782211"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.785346"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/initialize_weaviate.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.792422"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 6,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.794812"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.797439"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.802639"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/final_cleanup.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.804785"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.807299"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 93,
        "issue": "Use of exec() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.814252"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.815467"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/create_first_agent.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.820405"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deep_cleanup.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.848596"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/update_dependencies.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.851108"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/fix_remaining_issues.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.854678"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/check_pre_commit_status.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.859338"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.860644"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/verify_enhancements.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.864590"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.866155"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/version_monitor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.869007"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.873179"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/performance_analyzer.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.874038"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/system_validation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.879205"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.886027"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/health_check.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.889945"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_status.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.890244"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_design_automation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.891517"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 11,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.897983"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/verify_roo_mcp_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.899962"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/validate_syntax.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.902009"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/version_manager.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.913612"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.917211"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.921674"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.926471"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:52.934590"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_cursor_ai_database.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.938662"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/start_mcp_servers.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.939115"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.939798"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.943728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ai_infrastructure_monitor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.945227"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/validate_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.947393"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/review_ai_context.py",
        "line": 42,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.948015"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_ai_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.949647"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/performance_test.py",
        "line": 11,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.954776"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.959121"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.962659"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.966272"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
        "line": 10,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.969697"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
        "line": 10,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.973209"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.976944"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/apply_audit_fixes.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.979812"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/how_to_use_roo_conductor.py",
        "line": 65,
        "issue": "Syntax error: closing parenthesis ')' does not match opening parenthesis '['",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.981792"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/fix_broken_imports.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:52.987060"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.988312"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/migrate_to_portkey.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.989921"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.991441"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/fix_coordination_config.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.008335"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/initialize_unified_postgresql.py",
        "line": 10,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.010365"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/backend_comprehensive_audit.py",
        "line": 188,
        "issue": "Syntax error: expected an indented block after 'for' statement on line 188",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.013749"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.015718"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/quick_start_design_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.017290"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 53,
        "issue": "Syntax error: unterminated string literal (detected at line 53)",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.022390"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.030693"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 613,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.033794"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 613,
        "issue": "Use of exec() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.033798"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.038230"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.048802"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.050310"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.054932"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.071713"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.084461"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/proof_of_functionality.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.092775"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.093800"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.107921"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.112109"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.116024"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/initialize_enhanced_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.119473"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.120042"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/parallel_mode_executor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.121908"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 120,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.127622"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 121,
        "issue": "Use of exec() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.127633"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 286,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.128560"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.130757"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "JWT signature verification disabled",
        "suggestion": "Always verify JWT signatures",
        "timestamp": "2025-06-03T21:51:53.130868"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py",
        "line": 6,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.132781"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_integration_complete.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.135907"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.141141"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/auto_mode_selector.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.147559"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.147960"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.149583"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_roo_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.153812"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.156550"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/metrics_pipeline.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.157894"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_advanced_caching.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.158578"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.162041"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.168431"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.172727"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.178573"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.182990"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_api_connections.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.184891"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.186252"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/system_preparedness.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.193957"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/system_preparedness.py",
        "line": 94,
        "issue": "Use of exec() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.194430"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/validate_config.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.203667"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.214881"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
        "line": 112,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.218830"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/initialize_roo_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.223618"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/search_engine_cleanup.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.235847"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.239019"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.241456"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.245170"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer_simple.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.249688"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.251552"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_postgres_connection.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.255356"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.262176"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.264429"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.274833"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.277224"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.282640"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/demo_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.287042"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_nl_and_agent.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.289504"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.301537"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.304696"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/security_audit.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.312137"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_new_setup.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.318728"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/test_deployment_ready.py",
        "line": 28,
        "issue": "Use of exec() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.323042"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_roo_integration_simple.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.324456"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_tool_system.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.325603"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.326474"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_postgres_schema.py",
        "line": 108,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.331581"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_conductor_demo.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.333947"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.335679"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_design_system.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.346604"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_natural_language.py",
        "line": 28,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.350790"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/simple_mcp_server.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.351728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/setup_ai_services.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.352266"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/fix_python_version_permanently.py",
        "line": 113,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.355521"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_coordination_setup.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.357509"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.359134"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.362861"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.364276"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_specialized_agents.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.367201"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.370270"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/conftest.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.373617"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_llm_intelligent_router.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.373962"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.375736"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_enhanced_methods.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.378757"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_mvp_imports.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.379683"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_infrastructure.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.380426"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_llm_router_core.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.381718"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_agent_conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.389728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/test_api_integration.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.392654"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/factory_integration/context_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.395584"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/factory_integration/__init__.py",
        "line": 18,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.398490"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.398917"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/vultr_deployment.py",
        "line": 132,
        "issue": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.401878"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 243,
        "issue": "Syntax error: '(' was never closed",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.404542"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/mcp_server.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.408453"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
        "line": 42,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.410146"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/core_stack.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.411852"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.factory/context.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.413047"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/async_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.415996"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/mcp_server_runner.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.417739"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.417984"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.420808"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/health_check.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.422236"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/test_conductor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.422463"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.422862"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
        "line": 261,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.424180"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
        "line": 370,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.424728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/main.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.426517"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/run_optimized_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.426744"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/run_mcp_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.428388"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/optimized_memory_sync.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.429709"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.430914"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
        "line": 33,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.433518"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/gateway.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.434873"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/workflows/pay_ready_etl_flow.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.438275"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.441598"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 15,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.445903"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
        "line": 28,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.452791"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tools/mode_switcher.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.455870"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tools/update_phidata_configs.py",
        "line": 73,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.459687"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tools/cherry_ai_cli.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.461289"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/services/weaviate_service.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.465888"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.470124"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.roo/scripts/verify_setup.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.472929"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_roomodes.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.474230"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.475368"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/__main__.py",
        "line": 68,
        "issue": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.478246"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/__init__.py",
        "line": 18,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.479447"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/data_ingestion/__init__.py",
        "line": 24,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.482529"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/__main__.py",
        "line": 82,
        "issue": "Syntax error: invalid syntax. Perhaps you forgot a comma?",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.486493"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/unified_memory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.489746"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/pinecone_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.491767"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/stubs.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.492432"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.492970"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/unified_postgresql_weaviate.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.494034"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/weaviate_session_cache.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.494414"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/memory/weaviate_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.494726"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/vertex_ai/bridge.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.495485"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/utils/performance.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.497151"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/utils/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.497415"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/utils/error_handling.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.497585"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/sessions/postgresql_sessions.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.497822"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/interfaces/domain_contracts.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.499394"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
        "line": 21,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.499885"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/mcp_extensions/tool_registry.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.500922"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/cache/postgresql_cache.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.502172"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/apply_unified_enhancements.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.503536"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/connection_manager_enhanced.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.504831"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/decorators.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.506925"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/unified_db.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.507571"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.510398"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.516593"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/unified_postgresql.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.519196"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/connection_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.521893"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/unified_database.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.523216"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.529454"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.530658"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/unified_compat.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.532750"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.532964"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/data_ingestion/file_processors.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.536186"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/data_ingestion/base_processor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.536473"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/data_ingestion/zip_processor.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.536929"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/data_ingestion/ingestion_pipeline.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.537154"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/extensions/pool_extensions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.537537"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/extensions/cache_extensions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.540113"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/extensions/memory_extensions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.540995"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/shared/database/extensions/session_extensions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.542918"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/interfaces.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.544185"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.545044"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/example_usage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.548386"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.551034"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/exceptions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.551419"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/shared/error_handler.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.553903"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/shared/utils.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.554676"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/utils/file_management.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.555108"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/utils/pydantic_validators.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.556544"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/main.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.558450"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/router_registry.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.560465"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/security/credential_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.560778"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/security/postgresql_secrets.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.562272"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.563312"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.567245"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/test_models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.569423"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/example_usage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.574689"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.576817"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/personas/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.580054"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/database/llm_config_models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.580463"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.583360"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/monitoring/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.586428"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/monitoring/monitored_litellm_client.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.586622"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/llm/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.587475"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/llm/unified_router.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.587794"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/llm/unified_router.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.592728"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/llm/factory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.594958"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.595181"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/config/settings_vultr.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.598433"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/config/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.598957"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 28,
        "issue": "Syntax error: invalid syntax",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.600123"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.605183"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/auth/simple_auth.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.607864"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/tests/test_memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.608197"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/metrics.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.612007"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.614297"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/optimizer.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.620412"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/storage/postgresql.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.622384"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/storage/inmemory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.625021"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/memory/implementations/storage/factory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.626842"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/infrastructure/deployment/base.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.628533"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/infrastructure/connectivity/mongodb.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.629162"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
        "line": 16,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.630408"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/infrastructure/config/settings.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.631417"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/models/requests.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.632977"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/models/responses.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.634024"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/endpoints/conversation.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.635443"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/api/middleware/error_handler.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.636594"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/examples/llm_client.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.637654"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/examples/llm_demo.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.638881"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.640455"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.640994"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/main_simple.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.642044"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/main.py",
        "line": 85,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.643005"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/exceptions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.645244"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.645575"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/unified_memory.py",
        "line": 94,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.648910"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.650593"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.651915"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/interface.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.654522"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/factory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.654807"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.655633"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
        "line": 18,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.657356"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/core/agents.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.660346"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.661247"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.662962"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.663932"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.664674"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/app.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.666214"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/persona_agent.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.667497"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/message_handler_mixin.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.669604"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/simplified_agent_registry.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.670112"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/llm_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.671906"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/messaging_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.675848"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.676907"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/stateful_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.677140"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/observable_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.678273"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/styling_strategies.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.680202"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/agent_base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.680807"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/resilience/circuit_breaker.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.681733"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/resilience/monitoring.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.685744"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/resilience/incident_reporter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.687306"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/resilience/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.688653"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/resilience/tasks.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.688875"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.691028"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.692358"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/personas/dependency.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.694449"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/protocols/agent_protocol.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.694774"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/workflows/state_machine.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.695698"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/workflows/example_workflows.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.698162"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_langchain_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.699755"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/llm/litellm_client.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.700376"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/settings_clean.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.702472"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/secret_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.703473"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.704295"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/config.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.705481"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/settings.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.706410"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/config/loader.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.707444"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/tools/executor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.709472"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.710543"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.713494"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/unified_registry.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.714429"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/agent_communication.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.716592"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/agent_service.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.718452"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.718688"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.719958"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_agent_conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.720307"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.722750"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/message_queue.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.724948"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.726051"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.727742"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/semantic_router.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.728916"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.729545"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/registry.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.732913"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_registry.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.733767"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/progressive_summarizer.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.736128"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/examples.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.739374"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/importance_scorer.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.741002"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.742259"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.745722"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.745983"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/hybrid_search.py",
        "line": 31,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.748049"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/parallel_retriever.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.751114"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/query_classifier.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.754162"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/retrieval/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.756306"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/utils/format_structured_output.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.756540"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/llm.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.758820"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/credentials.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.760074"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/cache.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.760705"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/prompt_builder.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.761329"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/memory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.761672"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/dependencies/personas.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.764883"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.765848"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.766589"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
        "line": 18,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.767695"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.769117"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
        "line": 67,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.770415"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.773855"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.775846"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
        "line": 66,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.778201"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
        "line": 29,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.779160"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py",
        "line": 13,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.780722"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 11,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.781382"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_loader.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.783033"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/api/middleware/persona_middleware.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.783765"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.784147"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
        "line": 15,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.784227"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/pubsub_agent_example.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.786590"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.788259"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/mongodb_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.788840"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/manager.py",
        "line": 15,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.790555"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/memory/layered_memory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.793932"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.796461"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/tools/base.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.800168"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/tools/implementations/cache_tools.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.801484"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/circuit_breaker.py",
        "line": 21,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.801965"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/header_validation.py",
        "line": 10,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.804247"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/startup_validation.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.805610"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.809298"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/exceptions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.809556"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/conductor/src/services/llm/providers.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.809821"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/personas/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.816054"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/personas/base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.816256"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/workflows/examples.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.817430"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/workflows/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.819972"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/workflows/base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.820238"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/llm/provider.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.822477"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/business/llm/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.824643"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.824809"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/duplicate_resolver.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.824983"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/deduplication_engine.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.827245"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.829682"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/storage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.831803"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/parser.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.832522"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.832779"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/interfaces/processor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.832971"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/parsers/slack_parser.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.833511"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/parsers/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.833994"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/parsers/zip_handler.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.834260"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/storage/__init__.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.835370"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/storage/postgres_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.835605"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.838932"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/events/event_bus.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.842599"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.844107"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/memory/base.py",
        "line": 15,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.850030"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/agents/examples.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.850627"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/agents/__init__.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.853500"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/core/services/agents/base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.853747"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.859428"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.860737"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/integration/test_mcp_servers.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.863493"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/mcp_server/conftest.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.864668"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/mocks/concrete_memory_mock.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.865573"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/mocks/memory_fixtures.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.865723"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.866189"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/core/conductor/test_agent_registry.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.870525"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/core/conductor/test_startup.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.870757"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tests/core/conductor/api/test_query.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.871198"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/factory_integration/tests/test_context_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.872521"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.874788"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
        "line": 17,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.878535"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/components/postgres_component.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.880544"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.881557"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/weaviate_component.py",
        "line": 13,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.882180"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/database_component.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.883687"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/litellm_component.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.884260"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/ingress_component.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.885844"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/secret_helper.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.887342"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/monitoring_component.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.887771"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/infra/components/vector_droplet_component.py",
        "line": 17,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.892221"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.894464"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
        "line": 13,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.897543"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/tool_agent_example.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.899048"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.899278"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.900070"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
        "line": 6,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.900582"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/gateway_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.906546"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/memory/stubs.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.909904"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/memory/redis_semantic_cacher.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.910320"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/models/__init__.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.910689"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/models/domain_models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.911059"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.912156"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.914301"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/models/base_models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.914976"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
        "line": 11,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.916238"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/shared/src/portkey/manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.919657"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.921798"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/langchain_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.924493"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/phidata_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.925303"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
        "line": 16,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.926168"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/_base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.929184"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/registry.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.929516"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/protocols.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.931411"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/runtime/security/credentials_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.931793"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/agents/src/phidata/team_wrapper.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.936156"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/llm/src/portkey_integration.py",
        "line": 13,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.939300"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/packages/llm/src/config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.940359"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/memory/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.941476"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.941700"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/memory/base.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.944863"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/rules/__init__.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.945829"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.946046"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/performance_monitor.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.948899"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.949811"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.950802"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.953147"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
        "line": 16,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.955058"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/token_budget_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.957113"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.958006"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
        "line": 36,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.960539"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/utils/token_estimation.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.961849"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/utils/performance_tuner.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.962569"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.964707"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/base_mcp_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.968192"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.970063"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 371,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.978387"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:53.981473"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.982883"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/deployment_server.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.987113"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.992184"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/tools_server.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.995707"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
        "line": 21,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.997642"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.012909"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:54.017113"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/interfaces/tool_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.019123"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/interfaces/storage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.020048"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/interfaces/memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.020519"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/managers/performance_memory_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.020866"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/managers/standard_memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.024915"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.028823"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/test_adapters.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.030743"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/roo_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.034267"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/reliability_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.034496"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/knowledge_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.038059"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/config.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.041638"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/portkey_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.043629"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/codex_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.043825"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/architect_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.044039"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/example_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.046323"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/openrouter_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.049190"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/copilot_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.049407"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/cursor_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.051779"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/openai_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.051974"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.052189"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/factory_mcp_adapter.py",
        "line": 18,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.052458"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/debug_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.054215"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/code_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.057153"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/claude_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.060000"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/grok_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.060216"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/adapters/deepseek_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.060409"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/models/agent_mode.py",
        "line": 17,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.060657"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.063422"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/base/enhanced_server_base.py",
        "line": 17,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.064499"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.066375"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.068049"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.071314"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/roo/memory_hooks.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.072255"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/roo/rules.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.083313"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/roo/transitions.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.085884"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/config/models.py",
        "line": 14,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.087611"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/config/weaviate_mcp_config.py",
        "line": 68,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.088946"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/config/loader.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.090890"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/config/__init__.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.092429"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/config/memory_config_DEPRECATED.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.092637"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.094069"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.098618"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/storage/sync_storage_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.100503"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/storage/in_memory_storage.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.100848"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/storage/memory_adapter.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.102798"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
        "line": 8,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.108474"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/mcp_server/roo/adapters/gemini_adapter.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.109513"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/search_engine/search_utils.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:54.132914"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/src/infrastructure/pulumi/advanced_system_stack.py",
        "line": 84,
        "issue": "Syntax error: invalid syntax. Maybe you meant '==' or ':=' instead of '='?",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.164618"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/.migration_backups/20250602_074346_duplicate_cleanup/llm_router.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.167280"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.171757"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.177144"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:54.177713"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.178242"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.181211"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.184161"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.187311"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
        "line": 0,
        "issue": "Weak password hashing algorithm",
        "suggestion": "Use bcrypt, scrypt, or argon2",
        "timestamp": "2025-06-03T21:51:54.189823"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.191124"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.192314"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.195886"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.201665"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.204339"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/unified_api_router.py",
        "line": 2,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.207519"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.209887"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.214352"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.219397"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.222244"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.224745"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.230559"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.236118"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.243650"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.247531"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.253434"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
        "line": 5,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.259121"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/tests/test_personas_admin.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.266609"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/main.py",
        "line": 61,
        "issue": "Syntax error: unindent does not match any outer indentation level",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.269322"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
        "line": 65,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.271491"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
        "line": 40,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.272618"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
        "line": 27,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.274106"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
        "line": 24,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.276707"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
        "line": 51,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.279200"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
        "line": 30,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.280575"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.284257"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
        "line": 9,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.286075"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
        "line": 63,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.287272"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
        "line": 12,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.290511"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/routers/auth.py",
        "line": 45,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.292808"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/core/config.py",
        "line": 69,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.295607"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/real_agents.py",
        "line": 16,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.297391"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/specialized_agents.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.299069"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/automation.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.305123"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/audit_log.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.305634"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.305901"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
        "line": 20,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.310285"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/agent/app/services/agent_templates/first_agent_template.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.312855"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.315251"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.319172"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.320111"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.321282"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.325016"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
        "line": 4,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.329326"
      },
      {
        "category": "syntax",
        "file": "/root/cherry_ai-main/services/pay_ready/query_agent.py",
        "line": 3,
        "issue": "Syntax error: unexpected indent",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.333117"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/313-bba577664545e320.js",
        "line": 1,
        "issue": "Use of eval() is dangerous",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.815553"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_180127.json",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:55.896120"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_180031.json",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:55.900863"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/conductor_startup_report_20250603_074725.json",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:56.119850"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_175938.json",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:56.123613"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.versions.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.214413"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/Pulumi.cherry_ai-production.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.218393"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/Pulumi.cherry_ai-production.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.218400"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/pulumi.vultr.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.220171"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/esc.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.220286"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/esc.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.220303"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deploy/cherry-ai-deployment.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.221271"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deploy/cherry-ai-deployment.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.221307"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/pnpm-lock.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.227904"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/agents_new.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.236425"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/llm_gateway_config.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.237518"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.241763"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.vultr.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.242184"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/dashboard/Pulumi.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.242827"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/Pulumi.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.243513"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/factory_integration/config/context.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.579815"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/monitoring.yaml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:57.946355"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/infrastructure/github_actions/advanced_system_ci_cd.yml",
        "line": 0,
        "issue": "Potential exposed secret in config",
        "suggestion": "Use environment variables",
        "timestamp": "2025-06-03T21:51:58.603695"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.development",
        "line": 0,
        "issue": ".env.development not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553530"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.deployment",
        "line": 0,
        "issue": ".env.deployment not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553621"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.production",
        "line": 0,
        "issue": ".env.production not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553701"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.production.template",
        "line": 0,
        "issue": ".env.production.template not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553779"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.template",
        "line": 0,
        "issue": ".env.template not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553857"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.envrc.example",
        "line": 0,
        "issue": ".envrc.example not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.553933"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.envrc",
        "line": 0,
        "issue": ".envrc not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.554106"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.master",
        "line": 0,
        "issue": ".env.master not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.554190"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.env.compose",
        "line": 0,
        "issue": ".env.compose not in .gitignore",
        "suggestion": "Add to .gitignore immediately",
        "timestamp": "2025-06-03T21:52:02.554268"
      }
    ],
    "high": [
      {
        "category": "security",
        "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.531108"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/test_claude_api.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.543768"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/redis_semantic_cache_example.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.544955"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.550706"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mvp_cherry_ai_ai.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.555425"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/webscraping_app.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:52.561504"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/enhanced_natural_language_interface.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.574959"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/memory_management_improvements.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.579430"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/data_source_integrations.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.593491"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/test_mcp_data.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.597280"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/setup_mcp_database.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.612643"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.615139"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:52.617468"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/examples/claude_monitoring_demo.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.623720"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.675834"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/ai_code_assistant.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.713059"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:52.732558"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.766434"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 94,
        "issue": "Bare except clause catches all exceptions",
        "suggestion": "Specify exception types to catch",
        "timestamp": "2025-06-03T21:51:52.813532"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/fix_all_syntax_errors.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:52.845639"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/test_database_consolidation.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.858545"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/verify_enhancements.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.865582"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.934886"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/performance_test.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.957719"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:52.975720"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/initialize_unified_postgresql.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.011849"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.053457"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.095652"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.118389"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/initialize_enhanced_system.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.119786"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.121295"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 123,
        "issue": "os.system() is vulnerable to injection",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.127650"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 219,
        "issue": "SSL verification disabled",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.128199"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "Potential N+1 query problem",
        "suggestion": "Use select_related() or prefetch_related()",
        "timestamp": "2025-06-03T21:51:53.130708"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/mobile_app_integration.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.139804"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/test_roo_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.155657"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.166410"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/activate_cherry_ai_in_roo.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.185883"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.191583"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 237,
        "issue": "Bare except clause catches all exceptions",
        "suggestion": "Specify exception types to catch",
        "timestamp": "2025-06-03T21:51:53.198717"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 351,
        "issue": "Bare except clause catches all exceptions",
        "suggestion": "Specify exception types to catch",
        "timestamp": "2025-06-03T21:51:53.208362"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.222151"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/initialize_roo_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.225809"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.243942"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_model_syntax.py",
        "line": 74,
        "issue": "Bare except clause catches all exceptions",
        "suggestion": "Specify exception types to catch",
        "timestamp": "2025-06-03T21:51:53.258552"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/reconstruct_critical_files.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.273390"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/setup_postgres_schema.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.333178"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_import_errors.py",
        "line": 274,
        "issue": "Bare except clause catches all exceptions",
        "suggestion": "Specify exception types to catch",
        "timestamp": "2025-06-03T21:51:53.341911"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tests/test_unified_postgresql.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.372544"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tests/test_enhanced_methods.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.379354"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/mcp_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.408983"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/async_server.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.417175"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/memory_sync_engine.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.419921"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/optimized_ide_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.421738"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/demo_memory_sync.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.425391"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/exceptions.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.432465"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/gateway.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.437117"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.444228"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tools/update_phidata_configs.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.460692"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/sessions/postgresql_sessions.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.498841"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.500543"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/apply_unified_enhancements.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.504375"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/dependencies.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.506802"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/unified_db.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.509415"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.514753"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/unified_postgresql.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.520998"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/connection_manager.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.522718"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/core.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.529201"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/unified_postgresql_enhanced.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.530232"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/postgresql_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.532061"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.535164"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/shared/database/extensions/session_extensions.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.543716"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/api/main.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.559669"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/monitoring/claude_monitor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.585347"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/monitoring/monitored_litellm_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.587156"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.597412"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/api/endpoints/conversation.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.636058"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/examples/llm_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.638443"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.641670"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/main_simple.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.642361"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/core/conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.662377"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.663561"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.663588"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/core/memory.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.664378"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/tools/registry.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.712515"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/interaction_service.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.719309"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/enhanced_agent_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.721945"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/conversation_service.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.724212"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/agent_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.727180"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/base_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.728504"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/services/distributed_task_queue.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.731806"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.766293"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.766313"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.767111"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.768582"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.768613"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.769530"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.772657"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.772726"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.775152"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.777142"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.777192"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.778621"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.779817"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.779847"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/query_agent.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.780517"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.782446"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/examples/agent_usage_example.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.785788"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/agents/teams/coordinator.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.798954"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/data_ingestion/deduplication/audit_logger.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.831100"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.862210"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tests/integration/test_mcp_servers.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.864123"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.896349"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.896406"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/packages/shared/src/agent_coordination.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.904792"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/packages/shared/src/models/metadata_schemas.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.913548"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/packages/shared/src/models/core_models.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.914695"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.918602"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.923507"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/memory/langchain_memory.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.943859"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/utils/memory_compression_engine.py",
        "line": 199,
        "issue": "Pickle can execute arbitrary code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.951789"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/utils/memory_key.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.954270"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/utils/structured_logging.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.956417"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.973378"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.981421"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.981512"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:53.985622"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:53.994637"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.000788"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.011146"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.017368"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/models/memory.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.064039"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/workflows/workflow_manager.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.067318"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.081963"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/config/weaviate_mcp_config.py",
        "line": 141,
        "issue": "SSL verification disabled",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.089713"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/config/weaviate_mcp_config.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.090272"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/storage/memory_store.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.099861"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.107469"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/api/main.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.114406"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.138933"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.143111"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.147322"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/personas/persona_manager.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.149059"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/database/unified_database.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.151867"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/infrastructure/pulumi/advanced_system_stack.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.166360"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.175478"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.183200"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/roo_mcp_adapter.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.186253"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/coding_activity_monitor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.191859"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.194630"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.199841"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/cursor_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.203458"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/comprehensive_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.206472"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/coordination/mcp_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.212901"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/tests/test_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.221299"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/tests/test_roo_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.223874"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.228697"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.234131"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.241221"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.246231"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.251567"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.257229"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.264173"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/main.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.269922"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/agents.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.270792"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.271960"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.273410"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.275664"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.278054"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.279922"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.282467"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/automation.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.283684"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/chat.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.284054"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.285023"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/workflows.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.285767"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.286472"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.289347"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/personas_admin.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.291813"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/audit.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.294252"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/system.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.294580"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent/app/routers/resources.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.294945"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
        "line": 0,
        "issue": "API endpoint without authentication",
        "suggestion": "Add authentication decorator/middleware",
        "timestamp": "2025-06-03T21:51:54.317772"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/services/pay_ready/etl_conductor.py",
        "line": 0,
        "issue": "Session cookies may lack security flags",
        "suggestion": "Set secure, httponly, and samesite flags",
        "timestamp": "2025-06-03T21:51:54.323822"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 2,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.800948"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 3,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.802457"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/117-1c5bfc45bfc4237d.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804177"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/framework-b370f160bb96059c.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804774"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 11,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811691"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/402-cba8184a1bf36c3c.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.812779"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/313-bba577664545e320.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.815769"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/fd9d1056-205af899b895cbac.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816487"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/main-8ee698634884314e.js",
        "line": 1,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816831"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 37,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829630"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 40,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829834"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 574,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832173"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 656,
        "issue": "Potential XSS vulnerability",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833973"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-minimal.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606180"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-app.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606265"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/shared/requirements.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606422"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/scripts/requirements.txt",
        "line": 0,
        "issue": "Flask versions below 2.0 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606493"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/infra/requirements.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606727"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/requirements.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.606877"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/packages/agents/requirements.txt",
        "line": 0,
        "issue": "Requests versions below 2.20 have security issues",
        "suggestion": "Update to latest version",
        "timestamp": "2025-06-03T21:52:00.607179"
      }
    ],
    "medium": [
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/test_elevenlabs_voice.py",
        "line": 62,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.515550"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/key_fix_script.py",
        "line": 97,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.519314"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/quick_check.py",
        "line": 35,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.520886"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/quick_check.py",
        "line": 152,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.521044"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/execute_strategy_workflow.py",
        "line": 11,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.522300"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/execute_strategy_workflow.py",
        "line": 12,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.522305"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/execute_strategy_workflow.py",
        "line": 35,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.522338"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
        "line": 708,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.530722"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/verify_factory_ai_connection.py",
        "line": 48,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.535772"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/verify_factory_ai_connection.py",
        "line": 49,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.535778"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scan_github_workflows.py",
        "line": 156,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.537684"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 7,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.542733"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 8,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.542737"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 9,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.542741"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 10,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.542744"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 39,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.542784"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/test_claude_api.py",
        "line": 11,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.543707"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
        "line": 39,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.549334"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
        "line": 662,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.550191"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/webscraping_app.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:52.561525"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/code_analysis.py",
        "line": 179,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.564176"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/test_api_key.py",
        "line": 9,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.568501"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/test_api_key.py",
        "line": 25,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.568527"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/service_management_consolidation.py",
        "line": 187,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.585405"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/monitor_extension_performance.py",
        "line": 82,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.588099"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/monitor_extension_performance.py",
        "line": 83,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.588106"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/monitor_extension_performance.py",
        "line": 95,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.588124"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/monitor_extension_performance.py",
        "line": 125,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.588166"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scan_for_hardcoded_values.py",
        "line": 68,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.589950"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/test_mcp_data.py",
        "line": 33,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.596986"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/utils.py",
        "line": 6,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.598296"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/migration_conductor.py",
        "line": 104,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.602576"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/migration_conductor.py",
        "line": 123,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.602604"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/setup_mcp_database.py",
        "line": 19,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.612509"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/examples/memory_management_integration.py",
        "line": 45,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.614924"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:52.617491"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 110,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:52.618042"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/examples/data_ingestion_demo.py",
        "line": 104,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.619519"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/shared/retry_utils.py",
        "line": 26,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.647552"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/mode_manager.py",
        "line": 29,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.650821"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/mode_manager.py",
        "line": 239,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.651112"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/mode_manager.py",
        "line": 255,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.651136"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/main.py",
        "line": 36,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.654193"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/main.py",
        "line": 57,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.654225"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 33,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659349"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 49,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659375"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 59,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659390"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 60,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659395"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 76,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659417"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 123,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659480"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 172,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659546"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 223,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.659616"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.ai-memory/initialize.py",
        "line": 76,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.661198"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.ai-memory/initialize.py",
        "line": 81,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.661209"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.ai-memory/initialize.py",
        "line": 103,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.661240"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 367,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.674530"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 390,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.674567"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 405,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.674590"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 803,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.675145"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 848,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.675208"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 919,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.675307"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
        "line": 26,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.680074"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:52.680428"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
        "line": 22,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.688453"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
        "line": 23,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.688459"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_tests.py",
        "line": 84,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.688542"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_final.py",
        "line": 364,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.691337"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
        "line": 128,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.694651"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
        "line": 206,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.694757"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
        "line": 278,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.695449"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_domain_coordination.py",
        "line": 159,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.699251"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_domain_coordination.py",
        "line": 171,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.699271"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/database_schema_validator.py",
        "line": 614,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.709387"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:52.713941"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/check_dependencies.py",
        "line": 12,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.714765"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 43,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.716708"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 72,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.716752"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 73,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.716757"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 99,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.716793"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 172,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:52.717648"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architecture_analyzer.py",
        "line": 280,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.721475"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architecture_analyzer.py",
        "line": 287,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.721488"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 59,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.724496"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 122,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.724584"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 166,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.724644"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 287,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.724804"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
        "line": 187,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.732404"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
        "line": 188,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.732410"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/scripts/start_cherry_ai_services.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:52.732575"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/reconstruct_remaining_files.py",
        "line": 73,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.737451"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 592,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.748783"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 389,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:52.750378"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 403,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:52.750401"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_aite_system_demo.py",
        "line": 221,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.753880"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 919,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.765249"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 1197,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.765619"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/automation_manager.py",
        "line": 1,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.770883"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_nginx_for_cherry_ai.py",
        "line": 109,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.773923"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/update_nginx_for_cherry_ai.py",
        "line": 143,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.774272"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 32,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.776472"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 54,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.776505"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 67,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.776524"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 85,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.776550"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
        "line": 204,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.780617"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
        "line": 251,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.780683"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
        "line": 260,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.781208"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/health_monitor.py",
        "line": 111,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.783900"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
        "line": 744,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.789930"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:52.790005"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/validate_weaviate_migration.py",
        "line": 79,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.790327"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 109,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.796235"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 111,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.796243"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 145,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.796290"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 117,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.796683"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 137,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.796712"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
        "line": 392,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.800639"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
        "line": 409,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.800666"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 23,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803222"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 58,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803271"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 69,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803288"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 70,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803292"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 77,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803302"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 94,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.803326"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 86,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.803505"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 232,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810503"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 459,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810806"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 470,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810823"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 471,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810828"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 521,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810894"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 522,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810899"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 556,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.810944"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 65,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.814630"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 86,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.814661"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 100,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.814936"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 104,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.814945"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
        "line": 478,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.818673"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/functional_validation_conductor.py",
        "line": 967,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.835806"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_all_syntax_errors.py",
        "line": 147,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.844502"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deep_cleanup.py",
        "line": 236,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.850118"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_dependencies.py",
        "line": 44,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.851897"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_dependencies.py",
        "line": 58,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.851919"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_dependencies.py",
        "line": 141,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.852029"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_remaining_issues.py",
        "line": 4,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.855142"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_remaining_issues.py",
        "line": 20,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.855166"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
        "line": 19,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.861481"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
        "line": 20,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.861487"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
        "line": 115,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.861614"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_admin_ui.py",
        "line": 144,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.863866"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
        "line": 241,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.867864"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
        "line": 248,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.867878"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
        "line": 253,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.867886"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
        "line": 26,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.873592"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
        "line": 27,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.873597"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_model_registry.py",
        "line": 61,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.873642"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/performance_analyzer.py",
        "line": 531,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.877376"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/system_validation.py",
        "line": 180,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.882915"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 98,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888157"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 99,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888164"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 110,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888179"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 117,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888190"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 118,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888195"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 128,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888210"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 358,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.888513"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_status.py",
        "line": 26,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.890813"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_status.py",
        "line": 54,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.890854"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_status.py",
        "line": 55,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.890858"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_design_automation.py",
        "line": 585,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.895342"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 19,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.899007"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 131,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.899181"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 175,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.899242"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 179,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.899250"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 166,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:52.899780"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_syntax.py",
        "line": 4,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.902371"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/deploy_to_cherry_ai.py",
        "line": 59,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.904852"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_caching_issue.py",
        "line": 62,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.906947"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_caching_issue.py",
        "line": 144,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.907057"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cleanup_old_deployments.py",
        "line": 199,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.910550"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_critical_files.py",
        "line": 60,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.912976"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_critical_files.py",
        "line": 64,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.912986"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_manager.py",
        "line": 239,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.915747"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_manager.py",
        "line": 353,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.915918"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 76,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919608"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 298,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919902"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 301,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919909"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 338,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919960"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 350,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919978"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 353,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.919984"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 451,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.920134"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
        "line": 56,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.923503"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 264,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.932988"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 269,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.933000"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 336,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.933105"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 344,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.933118"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 657,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.933529"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 895,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.933840"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 1232,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.934291"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 114,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.941972"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 115,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.941978"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 119,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.941985"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
        "line": 16,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.944467"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:52.944651"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ai_infrastructure_monitor.py",
        "line": 197,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.946618"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/review_ai_context.py",
        "line": 53,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.948839"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_ai_system.py",
        "line": 430,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.952527"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/performance_test.py",
        "line": 342,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.957467"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/performance_test.py",
        "line": 448,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.957613"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
        "line": 251,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.961210"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
        "line": 261,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.961231"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_improvement_conductor.py",
        "line": 313,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.961317"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 89,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964572"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 151,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964657"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 152,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964662"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 189,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964712"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 277,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964831"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 317,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.964885"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:52.964992"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
        "line": 140,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.968153"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ai_code_reviewer.py",
        "line": 339,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.971884"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
        "line": 88,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.975180"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/migrate_to_unified_postgresql.py",
        "line": 103,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.975205"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
        "line": 56,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.978458"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
        "line": 153,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.978592"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/setup_admin_user.py",
        "line": 32,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.981114"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/setup_admin_user.py",
        "line": 65,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.981161"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_broken_imports.py",
        "line": 65,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.986652"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_broken_imports.py",
        "line": 332,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.987005"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
        "line": 86,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.989199"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
        "line": 40,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.991894"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
        "line": 44,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.991902"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
        "line": 59,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:52.991924"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/documentation_consistency_cleaner.py",
        "line": 523,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.005414"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/documentation_consistency_cleaner.py",
        "line": 714,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.005668"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/quick_start_design_system.py",
        "line": 466,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.020422"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 639,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.027561"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 829,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.027813"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 473,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.029914"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 488,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.029937"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 140,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.034725"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 298,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.034953"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 411,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035126"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 428,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035152"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 472,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035213"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 515,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035272"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 588,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035370"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 609,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035399"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 662,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035472"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_codebase_audit.py",
        "line": 757,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.035599"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
        "line": 104,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.045725"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
        "line": 105,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.045732"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
        "line": 623,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.046443"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/setup_weaviate_collections.py",
        "line": 63,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.053546"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
        "line": 175,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.056297"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
        "line": 186,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.056316"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
        "line": 187,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.056320"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 255,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.067866"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 608,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.068368"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 667,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.068462"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 810,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.068666"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 37,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073018"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 65,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073060"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 127,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073161"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 149,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073192"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 163,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073213"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 189,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073248"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 240,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.073318"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/config_audit.py",
        "line": 548,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.082281"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 228,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.088993"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 239,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.089011"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 422,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.089268"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 435,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.089289"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 873,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.089868"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/proof_of_functionality.py",
        "line": 24,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.093277"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/proof_of_functionality.py",
        "line": 80,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.093353"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/proof_of_functionality.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.093381"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_integration.py",
        "line": 266,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.095527"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/final_cleanup_deliverables.py",
        "line": 592,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.105496"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/final_cleanup_deliverables.py",
        "line": 597,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.105509"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/final_cleanup_deliverables.py",
        "line": 604,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.105521"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
        "line": 132,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.110218"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
        "line": 348,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.110510"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
        "line": 355,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.110523"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 60,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114128"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 234,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114387"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 316,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114500"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 326,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114516"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 363,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114566"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 388,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.114601"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 202,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.118004"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 300,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.118177"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 316,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.118201"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
        "line": 143,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.121159"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 397,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.130475"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 489,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.130617"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 526,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.130670"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 542,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.130693"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.130718"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 250,
        "issue": "urllib2 is deprecated",
        "suggestion": "Use urllib.request",
        "timestamp": "2025-06-03T21:51:53.131961"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 251,
        "issue": "dict.has_key() is deprecated",
        "suggestion": "Use 'in' operator",
        "timestamp": "2025-06-03T21:51:53.131965"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 270,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.131993"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_integration_complete.py",
        "line": 23,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.136559"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/scripts/test_integration_complete.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.136708"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 98,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144538"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 167,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144632"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 250,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144740"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 277,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144779"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 291,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144799"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 292,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144804"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 310,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144829"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 317,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144840"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 341,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144874"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 359,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144900"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 386,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144937"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 411,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144972"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 412,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.144976"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 448,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.145024"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 480,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.145068"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 643,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.145306"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_infrastructure_conductor.py",
        "line": 654,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.145323"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 94,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.151780"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 161,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.151871"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 216,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.151943"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 217,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.151948"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 294,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.152049"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 399,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.152201"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 409,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.152218"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 18,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.157235"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 35,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.157262"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 49,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.157282"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 64,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.157303"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
        "line": 558,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.166001"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 172,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170781"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 196,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170815"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 228,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170860"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 235,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170871"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 255,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170899"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 261,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170910"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 262,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170915"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 286,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.170948"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 355,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.171042"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 363,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.171054"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 221,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176066"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 239,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176106"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 254,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176129"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 255,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176133"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 277,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176164"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 300,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176197"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 311,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176213"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 534,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176511"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 576,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.176568"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 11,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179575"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 65,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179650"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 72,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179661"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 101,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179700"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 139,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179752"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 165,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.179788"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_system_status.py",
        "line": 127,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.182385"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_api_connections.py",
        "line": 25,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.185154"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 318,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.190616"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 319,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.190622"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 733,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.191183"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 373,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.202178"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 378,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.202190"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_config.py",
        "line": 128,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.204728"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 346,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.212656"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 372,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.212696"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 515,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.212884"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 520,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.212893"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 13,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.216445"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 17,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.216454"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 46,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.217059"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 107,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.217160"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 212,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.217302"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 320,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.217449"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
        "line": 414,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.221826"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
        "line": 428,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.221849"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/initialize_roo_integration.py",
        "line": 234,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.225543"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/search_engine_cleanup.py",
        "line": 1005,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.235700"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 7,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.240199"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 29,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.240233"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 97,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.240323"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 223,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.240489"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
        "line": 345,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.243747"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
        "line": 24,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.247467"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
        "line": 25,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.247473"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_aited_codebase_fix.py",
        "line": 413,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.247986"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer_simple.py",
        "line": 95,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.250726"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer_simple.py",
        "line": 174,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.250835"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 80,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253559"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 86,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253570"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 101,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253592"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 166,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253680"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 259,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253805"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 285,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253842"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 363,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.253946"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_model_syntax.py",
        "line": 287,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.260938"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
        "line": 194,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.263522"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 31,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267454"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 32,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267461"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 96,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267547"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 97,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267551"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 164,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267640"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 207,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267700"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 236,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267740"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 280,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267801"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 309,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.267841"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 438,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268013"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 473,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268061"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 484,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268095"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 485,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268100"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 492,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268110"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 509,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268135"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 530,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268165"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 559,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.268206"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 355,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280421"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 372,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280447"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 387,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280470"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 406,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280497"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 428,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280529"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 531,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.280670"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
        "line": 441,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.285463"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 15,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.291940"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 22,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.291953"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 107,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298663"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 108,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298671"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 178,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298764"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 207,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298803"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 277,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298899"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 321,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.298959"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 445,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.299142"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 586,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.299328"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 605,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.299355"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_deployment.py",
        "line": 44,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.304052"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_deployment.py",
        "line": 59,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.304100"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
        "line": 550,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.308861"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
        "line": 573,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.308896"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
        "line": 660,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.309012"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/architect_advanced_system.py",
        "line": 668,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.309025"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_audit.py",
        "line": 151,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.315752"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_audit.py",
        "line": 200,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.315819"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_audit.py",
        "line": 343,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.316013"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/security_audit.py",
        "line": 656,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.316443"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_roo_integration_simple.py",
        "line": 23,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.325008"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_tool_system.py",
        "line": 43,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.326009"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/error_handling_enhancements.py",
        "line": 519,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.329706"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py",
        "line": 229,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.337709"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_local.py",
        "line": 325,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.337841"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_import_errors.py",
        "line": 381,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.345046"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_design_system.py",
        "line": 411,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.349218"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_natural_language.py",
        "line": 78,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.351324"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_python_version_permanently.py",
        "line": 128,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.356631"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/fix_python_version_permanently.py",
        "line": 145,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.356657"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_coordination_setup.py",
        "line": 20,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.358276"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 28,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.361052"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 72,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.361134"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 238,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.361355"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 239,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.361359"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 321,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.361472"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_connections.py",
        "line": 287,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.366119"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/tests/test_data_ingestion.py",
        "line": 140,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.377465"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/factory_integration/cache_manager.py",
        "line": 42,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.400116"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 303,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.406548"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 304,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.406554"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 311,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.406565"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 276,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.407024"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/infra/mcp_server.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.408990"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
        "line": 33,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.411006"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infra/do_superagi_stack.py",
        "line": 58,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.411041"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.factory/context.py",
        "line": 34,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.413783"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/run_optimized_server.py",
        "line": 17,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.427496"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/run_optimized_server.py",
        "line": 18,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.427501"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/performance_wrapper.py",
        "line": 4,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.434176"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/mcp_server/gateway.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.437144"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 37,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.449347"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 61,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.449384"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 62,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.449389"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 261,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.449649"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 540,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.450015"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 563,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.450048"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 564,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.450052"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 602,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.450125"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
        "line": 21,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.455302"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/tools/update_phidata_configs.py",
        "line": 73,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.460541"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/tools/update_phidata_configs.py",
        "line": 90,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.460566"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/tools/cherry_ai_cli.py",
        "line": 39,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.463636"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 86,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.471577"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 87,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.471583"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 152,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.471669"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 153,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.471673"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.roo/scripts/verify_setup.py",
        "line": 76,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.473632"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 65,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476712"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 150,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476824"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 154,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476831"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 168,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476851"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 184,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476874"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 196,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.476893"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/shared/memory/unified_memory.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.491051"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/shared/mcp_extensions/mcp_client.py",
        "line": 12,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.500398"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/shared/database/unified_db.py",
        "line": 224,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.509266"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/shared/database/weaviate_client.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.514631"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/shared/database/unified_database.py",
        "line": 27,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.525976"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/shared/database/unified_database.py",
        "line": 522,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.526667"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/shared/database/unified_database.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:53.526729"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/shared/data_ingestion/base_processor.py",
        "line": 5,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.536709"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/api/main.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.559682"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/security/credential_manager.py",
        "line": 87,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.561644"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/security/credential_manager.py",
        "line": 88,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.561649"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 35,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578546"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 52,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578575"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 73,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578605"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 95,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578636"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 109,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578656"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 122,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578674"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 127,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578683"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 159,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578726"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 177,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578752"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 194,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578776"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 202,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578788"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 212,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578803"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 227,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578824"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 240,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578842"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 245,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578851"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 264,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.578879"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 225,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.579330"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 258,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.597253"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 261,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.597265"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 272,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.597283"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 275,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.597289"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/config/unified_config.py",
        "line": 276,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.597294"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 351,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.604512"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 435,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.604629"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 519,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.604742"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/infrastructure/connectivity/base.py",
        "line": 42,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.630834"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/api/endpoints/conversation.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.636066"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
        "line": 10,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.640842"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/main_simple.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.642366"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
        "line": 71,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.656505"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/utils/config_loader.py",
        "line": 113,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.656562"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/conductor/src/utils/error_handling.py",
        "line": 241,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.659669"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/core/main.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.663570"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/core/personas.py",
        "line": 54,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.665437"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/personas/loader.py",
        "line": 82,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.691794"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/personas/enhanced_persona_manager.py",
        "line": 127,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.693523"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
        "line": 241,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.744360"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/lifecycle/memory_chunker.py",
        "line": 264,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.744395"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py",
        "line": 25,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.746931"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/backends/redis_memory.py",
        "line": 176,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.747187"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/interaction.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.766300"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/agents.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.767118"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/monitoring.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.768594"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/stubs.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.769536"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/llm_interaction.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.772681"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/health.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.775170"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/phidata_chat.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.777159"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/auth.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.778627"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/conversations.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.779827"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/query_agent.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.780522"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py",
        "line": 43,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.781018"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 68,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.782272"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 106,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.782325"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 113,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.782336"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 144,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.782377"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 157,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.782396"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/personas.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.782457"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
        "line": 167,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.847471"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/core/services/memory/unified_memory.py",
        "line": 245,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.847581"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 19,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.860061"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 37,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.860112"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 64,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.860150"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 89,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.860185"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 90,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.860189"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 30,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.861254"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 57,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.861294"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 71,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.861314"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 72,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.861318"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 90,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.861344"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
        "line": 14,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.863137"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
        "line": 111,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.876855"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/factory_integration/tests/test_cache_manager.py",
        "line": 208,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.876984"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/infra/components/vultr_server_component.py",
        "line": 48,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:53.882037"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
        "line": 148,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.896099"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/.factory/bridge/api_gateway.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.896367"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
        "line": 75,
        "issue": "Blocking sleep in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.898632"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/packages/agents/tool_agent_example.py",
        "line": 6,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.899121"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/packages/shared/src/portkey_admin/client.py",
        "line": 22,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.918114"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/packages/agents/runtime/web_scraper.py",
        "line": 16,
        "issue": "HTTP request without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.923118"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 127,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.947601"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 130,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.947610"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 131,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.947615"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 278,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.947809"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/rules/rule_engine.py",
        "line": 281,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.947816"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
        "line": 20,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.950317"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/utils/secret_manager.py",
        "line": 21,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.950323"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/utils/idempotency.py",
        "line": 95,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.959333"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
        "line": 187,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.966748"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.973411"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 188,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.980915"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_mcp_server.py",
        "line": 254,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.981005"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
        "line": 57,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.985027"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
        "line": 63,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.985042"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/mcp_server/servers/coordinator_server.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:53.985646"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
        "line": 269,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:53.994367"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
        "line": 82,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.000182"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/mcp_server/servers/cherry_ai_memory_mcp_server.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.000825"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 137,
        "issue": "Database connection without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.010588"
      },
      {
        "category": "database",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 0,
        "issue": "Raw SQL detected",
        "suggestion": "Consider using ORM methods for better security",
        "timestamp": "2025-06-03T21:51:54.011072"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 46,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.029843"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 49,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.029850"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 50,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.029855"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 174,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.030016"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/managers/agent_mode_manager.py",
        "line": 177,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.030022"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
        "line": 319,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.070184"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/config/loader.py",
        "line": 5,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.091668"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/config/loader.py",
        "line": 6,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.091674"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 94,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096518"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 176,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096630"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 281,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096770"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 296,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096792"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 307,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096809"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 432,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096972"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 448,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.096995"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/optimized_memory_storage.py",
        "line": 449,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.097000"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
        "line": 79,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.107120"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/mcp_server/tools/tool_manager.py",
        "line": 47,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.108956"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/src/api/main.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.114415"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
        "line": 66,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.155430"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 67,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.174599"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
        "line": 75,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.177678"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
        "line": 90,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.179832"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/coordination/vultr_autoscaling.py",
        "line": 222,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.183002"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/coordination/mode_transition_manager.py",
        "line": 332,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.194512"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
        "line": 241,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.199212"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
        "line": 169,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.217176"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
        "line": 474,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.240489"
      },
      {
        "category": "deprecated",
        "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
        "line": 393,
        "issue": "Python 2 style print",
        "suggestion": "Use print()",
        "timestamp": "2025-06-03T21:51:54.242803"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/main.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.269931"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/agents.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.270798"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/admin.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.271967"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/llm.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.273421"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
        "line": 30,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.275330"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.275681"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_admin.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.278073"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/natural_language.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.279933"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/llm_coordination.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.282488"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/automation.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.283689"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/chat.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.284060"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.285033"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/workflows.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.285772"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.286479"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/data_ingestion_enhanced.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.289370"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/audit.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.294258"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/system.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.294585"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/agent/app/routers/resources.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.294950"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/agent/app/services/agent_conductor.py",
        "line": 275,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.308275"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
        "line": 109,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.311599"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
        "line": 117,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.311612"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
        "line": 359,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.317650"
      },
      {
        "category": "validation",
        "file": "/root/cherry_ai-main/tools/llm_test_server/main.py",
        "line": 0,
        "issue": "API endpoint without input validation",
        "suggestion": "Add input validation",
        "timestamp": "2025-06-03T21:51:54.317796"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
        "line": 11,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.319600"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
        "line": 12,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.319606"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
        "line": 61,
        "issue": "File operation without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.320722"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 29,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.327097"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 44,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.327121"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 294,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.327449"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 371,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.327552"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/entity_resolver.py",
        "line": 399,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.327591"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
        "line": 183,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.331529"
      },
      {
        "category": "error_handling",
        "file": "/root/cherry_ai-main/services/pay_ready/memory_manager.py",
        "line": 361,
        "issue": "JSON parsing without error handling",
        "suggestion": "Wrap in try-except block",
        "timestamp": "2025-06-03T21:51:54.331767"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_162259.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.871699"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/persona_consolidation_results_20250603_175958.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.871867"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/fix_checkpoint.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.871985"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/conductor_mcp_verification_report.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.872371"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/audit_report_20250603_080333.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894134"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ARCHITECTURE_ANALYSIS_REPORT.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894332"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/connection_test_results_20250603_160413.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894509"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_162016.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894656"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/integration_test_results_20250603_161140.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894775"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deployment_manifest.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.894955"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.895395"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_180127.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.899809"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/implementation_status_20250603_083832.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.899983"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/integration_test_results_20250603_160855.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.900118"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_180031.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.904586"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.migration_state.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.904749"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deep_cleanup_report.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.904940"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/eigencode_installation_report.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.905047"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_161620.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.905219"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/connection_test_results_20250603_161047.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.905409"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/codebase_fix_report_20250603_082235.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:55.905802"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/implementation_status_20250603_083403.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.119711"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/conductor_startup_report_20250603_074725.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.119948"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/LIVE_DEMO_REPORT.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.120211"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/technical_roadmap.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.121098"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/coordination_demo_1748980561.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.121303"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/figma-variables-spec.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.121483"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/database_schema_validation_20250603_174539.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.121815"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/advanced_architecture.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.122701"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/implementation_status_20250603_103051.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.122873"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/functional_validation_results_20250603_175938.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.127345"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/connection_test_results_20250603_160613.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.127528"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/connection_test_results_20250603_160421.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.127698"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.mcp-clean.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.127953"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/codebase_fix_report_20250603_082848.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.128070"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/design_system_demo_results.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.128334"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/integration_plan.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.129055"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_161826.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.129225"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deployment_state_local_20250603_103455.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.129444"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/search_engine_cleanup_results_20250603_175948.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.129591"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/connection_test_results_20250603_161322.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.129781"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/conductor_landing_page_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.130423"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/pip_forever_fix.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.130558"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_161741.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.130700"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_161929.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.130842"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/design_system_test_results.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.130989"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/database_schema_validation_20250603_174823.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.131350"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config_audit_results_20250603_173651.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.134453"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.refactoring_state.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.134580"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.mcp.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.134857"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/security_audit_report_20250602_171200.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.135432"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_cleanup_deliverables_20250603_182039.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.141056"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/DOMAIN_SEPARATION_ANALYSIS.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.142939"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/database_schema_validation_20250603_174834.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.143292"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/final_test_results_20250603_162137.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.143441"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/integration_test_results_20250603_161324.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.143555"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/codebase_fix_report_20250603_082706.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.143676"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/factory_ai_workflow_checkpoint.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.143969"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure_improvement_state.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.144175"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/verification_results_20250603_155059.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.144383"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/INFRASTRUCTURE_ROBUSTNESS_REPORT.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.144858"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deployment_report_20250602_195004.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.145026"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/security_performance_cleanup_20250603_181812.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.169256"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/PROOF_OF_FUNCTIONALITY.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.169453"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/implementation_status_20250603_160447.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.391897"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/implementation_status_20250603_155736.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.392149"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/cherry_ai_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.392783"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/mcp.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.392979"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.devcontainer/Untitled-1.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.393299"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.devcontainer/devcontainer.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.393594"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.devcontainer/add-docker-feature.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.393763"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/package-lock.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.397622"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/scripts/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.397767"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/audit/config_map.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.406263"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/audit/inventory.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.407610"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/workflow_examples/complete_deployment_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.408858"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/workflow_examples/data_sync_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.409141"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/memory_store/session:interaction_code_1748973399.253447.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.409529"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/package-lock.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.429266"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.429547"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/tsconfig.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.429691"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/components.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.429796"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/tsconfig.node.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.429894"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.vscode/settings.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.430156"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/api_specification.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.430851"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/workflows/deployment_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.431024"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/workflows/data_pipeline_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.431157"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/workflows/code_review_workflow.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.431259"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/monitoring/version-dashboard.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.432373"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/conductor_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.433279"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/monitoring_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.433395"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/automation_schedules.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.433494"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/dashboard/package-lock.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.446112"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/dashboard/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.446252"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/dashboard/tsconfig.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.446368"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.cursor/mcp.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.446779"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/analytics.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.447970"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/architect.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448106"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/implementation.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448221"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/conductor.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448328"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/debug.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448429"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/quality.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448529"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/research.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448633"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/strategy.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448733"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/documentation.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448834"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/modes/code.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.448936"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.roo/config/performance_rules.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.449527"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.452153"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/tsconfig.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.452350"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/dashboard/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.452567"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/dashboard/tsconfig.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:56.452694"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/ui/web/react_app/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.148957"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/react_app/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.153712"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/package-lock.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.166138"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/package.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.166275"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/tsconfig.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.166388"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/paragonrx_rate_limits.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.204541"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/payready_rate_limits.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.204727"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/paragonrx_airbyte.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.204922"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/payready_weaviate.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.205142"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/personal_airbyte.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.205351"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/personal_rate_limits.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.205542"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/payready_airbyte.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.205783"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/personal_weaviate.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.205972"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/domains/paragonrx_weaviate.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.206186"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ml/configs/model_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.209232"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ml/configs/model_registry_schema.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.209474"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ml/configs/experiment_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.209591"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/ml/configs/deployment_config.json",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.209729"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/agent_memory.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.213226"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.213340"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/automation_config_sample.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.213922"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.pre-commit-config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.214178"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.versions.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.217457"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.218299"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/Pulumi.cherry_ai-production.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.218404"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.220055"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/pulumi.vultr.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.220184"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infra/esc.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.220309"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/.factory/config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.220803"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deploy/agents-config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.221410"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/admin-ui/pnpm-lock.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.233381"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/templates/gemini_prompts.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.233628"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/roo_mode_mappings.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.235574"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/litellm_config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.236218"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/agents_new.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.236526"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/mode_definitions.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.237100"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/automation_registry.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.237230"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/agents.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.237395"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/llm_gateway_config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.237617"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.staging.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.241671"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.241810"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.dev.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.241937"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.prod.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.242069"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/Pulumi.vultr.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.242230"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/dashboard/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.242861"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/memory_system/Pulumi.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.243559"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/config/personas.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.251306"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/config/personas/gordon.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.253881"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/config/personas/cherry.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.254006"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/core/conductor/src/config/personas/sophia.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.254147"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/factory_integration/config/context.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.579833"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/monitoring.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.946650"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/mcp_server/config/performance.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.946995"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/memory/cherry_memory.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.990897"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/memory/sophia_memory.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.990999"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/memory/karen_memory.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991112"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/cherry.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991440"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/technical-architect.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991552"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/ai-assistant.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991657"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/karen.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991826"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/sophia.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.991977"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/personas/personas.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.992363"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/config/behavior/behavior_config.yaml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.992596"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/docker-compose.local.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.997491"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/weaviate-docker-compose.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.997642"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/docker-compose.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.997802"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/docker-compose.prod.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:57.997983"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/deploy/docker-compose.vultr.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:58.000255"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/monitoring/prometheus.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:58.001248"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/docker-compose.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:58.004818"
      },
      {
        "category": "security",
        "file": "/root/cherry_ai-main/src/infrastructure/github_actions/advanced_system_ci_cd.yml",
        "line": 0,
        "issue": "Missing CORS configuration",
        "suggestion": "Configure CORS properly",
        "timestamp": "2025-06-03T21:51:58.604186"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-webscraping.txt",
        "line": 0,
        "issue": "Unpinned dependency: -r requirements-consolidated.txt",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.605882"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-minimal.txt",
        "line": 0,
        "issue": "Unpinned dependency: python-jose[cryptography]",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.606167"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-minimal.txt",
        "line": 0,
        "issue": "Unpinned dependency: python-multipart",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.606172"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-app.txt",
        "line": 0,
        "issue": "Unpinned dependency: python-jose[cryptography]",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.606282"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/requirements-app.txt",
        "line": 0,
        "issue": "Unpinned dependency: python-multipart",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.606285"
      },
      {
        "category": "dependencies",
        "file": "/root/cherry_ai-main/core/conductor/requirements.txt",
        "line": 0,
        "issue": "Unpinned dependency: -r ../../requirements/base.txt",
        "suggestion": "Pin to specific version",
        "timestamp": "2025-06-03T21:52:00.607006"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/dashboard/Dockerfile",
        "line": 0,
        "issue": "Copying everything into container",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.901723"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/Dockerfile",
        "line": 0,
        "issue": "Copying everything into container",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.901798"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/src/ui/web/react_app/Dockerfile",
        "line": 0,
        "issue": "Copying everything into container",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.901862"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/react_app/Dockerfile",
        "line": 0,
        "issue": "Copying everything into container",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.901925"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/Dockerfile",
        "line": 0,
        "issue": "Copying everything into container",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.901987"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/docker-compose.local.yml",
        "line": 0,
        "issue": "Using 'latest' tag",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.902052"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/docker-compose.yml",
        "line": 0,
        "issue": "Using 'latest' tag",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.902145"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/docker-compose.prod.yml",
        "line": 0,
        "issue": "Using 'latest' tag",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.902211"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/deploy/docker-compose.vultr.yml",
        "line": 0,
        "issue": "Using 'latest' tag",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.902280"
      },
      {
        "category": "docker",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/docker-compose.yml",
        "line": 0,
        "issue": "Using 'latest' tag",
        "suggestion": "",
        "timestamp": "2025-06-03T21:52:01.902346"
      }
    ],
    "low": [
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_elevenlabs_voice.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.516779"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/find_critical_lint_issues.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.518486"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/key_fix_script.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.519686"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/web_scraping_ai_agents.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.533450"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_unified_systems.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.535134"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/verify_factory_ai_connection.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.536164"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scan_github_workflows.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.538510"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/deploy_via_api.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.542964"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_claude_api.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.543888"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/quick_verify_admin_ui.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.552738"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_cli.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.558980"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/code_analysis.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.565125"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/test_personas_api.py",
        "line": 21,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.566137"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_personas_api.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.566400"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_api_key.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.568619"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_real_agents.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.569186"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_mcp_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.571408"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_mcp_simple.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.572114"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_context_debugger.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.581998"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scan_for_hardcoded_values.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.590472"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/data_source_integrations.py",
        "line": 65,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.593600"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/verify_app_startup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.595721"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/test_mcp_data.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.597791"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_context_reviewer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.600324"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/migration_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.604146"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/analyze_code_wrapper.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.607015"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/phidata_agent_team_init.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.609506"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/setup_mcp_database.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.612889"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 31,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.617567"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/examples/credential_management_example.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.618297"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/examples/data_ingestion_demo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.620265"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/infrastructure/vultr_deployment.py",
        "line": 96,
        "issue": "Missing docstring for create_user_data",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.632951"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/circuit_breaker.py",
        "line": 6,
        "issue": "Missing docstring for CircuitBreaker",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.642909"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/circuit_breaker.py",
        "line": 7,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.642921"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/circuit_breaker.py",
        "line": 14,
        "issue": "Missing docstring for __call__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.642925"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/shared/enhanced_circuit_breaker.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.646225"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/retry_utils.py",
        "line": 6,
        "issue": "Missing docstring for retry",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.647232"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/retry_utils.py",
        "line": 7,
        "issue": "Missing docstring for decorator",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.647245"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/shared/retry_utils.py",
        "line": 9,
        "issue": "Missing docstring for wrapper",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.647257"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/shared/retry_utils.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.647605"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/mode_manager.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.652240"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 226,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.659993"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/coordination/version_management_implementation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.660376"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 20,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.667452"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/persona_config_consolidator.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.678393"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
        "line": 106,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.680640"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/complete_roo_integration_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.681225"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/deployment_readiness_check.py",
        "line": 22,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.682901"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deployment_readiness_check.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.687693"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_cherry_ai_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.696173"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_secrets_manager.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.697875"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/complete_domain_coordination.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.699938"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/database_schema_validator.py",
        "line": 21,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.703124"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/database_schema_validator.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.711352"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/ai_code_assistant.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.713634"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/roo_integration_standalone.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.714038"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/check_dependencies.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.715251"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/mcp_integration_check.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.717758"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_api_keys.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.718823"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/conductor_daemon.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.719250"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/architecture_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.722602"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/validate_domain_infrastructure.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.725903"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/prepare_for_deployment.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.730693"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/reconstruct_remaining_files.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.740210"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 30,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.743005"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 284,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.743029"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 445,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.743044"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 529,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.743055"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/comprehensive_cleanup_conductor.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.750674"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/cherry_aite_system_demo.py",
        "line": 13,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.751858"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/cherry_aite_system_demo.py",
        "line": 159,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.754209"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_aite_system_demo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.754606"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/validate_docs.py",
        "line": 5,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.754881"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/validate_docs.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.755163"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 31,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.756822"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 1058,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.767853"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 1296,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.768194"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.770116"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/update_nginx_for_cherry_ai.py",
        "line": 17,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.772746"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/update_nginx_for_cherry_ai.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.774522"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_weaviate_simple.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.775100"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/infrastructure_validation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.777341"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
        "line": 269,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.778333"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_cherry_ai_deployment.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.781653"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/health_monitor.py",
        "line": 297,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.784655"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/health_monitor.py",
        "line": 302,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.784665"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/initialize_weaviate.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.794665"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.797258"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/refactoring_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.802514"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/implement_infrastructure_optimizations.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.803694"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/check_syntax.py",
        "line": 8,
        "issue": "Missing docstring for check_syntax",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.803992"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/check_syntax.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.804627"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/final_cleanup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.807102"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 389,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.811737"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/next_phase_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.812840"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 19,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.813457"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_deployment_conflicts.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.815245"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/technical_roadmap_generator.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.820276"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/create_first_agent.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.821680"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/functional_validation_conductor.py",
        "line": 28,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.826440"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/functional_validation_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.838928"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_all_syntax_errors.py",
        "line": 11,
        "issue": "Missing docstring for SyntaxFixer",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.839917"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_all_syntax_errors.py",
        "line": 12,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.839930"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_all_syntax_errors.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:52.848381"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deep_cleanup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.850894"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/verify_final_deployment.py",
        "line": 89,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.853138"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_final_deployment.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.854519"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_remaining_issues.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.855537"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/check_pre_commit_status.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.860515"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/complete_conductor_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.862202"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/deploy_admin_ui.py",
        "line": 18,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.862605"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_admin_ui.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.864441"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_enhancements.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.865991"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/ui_integration_spec.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.868871"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/version_monitor.py",
        "line": 425,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.872393"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/performance_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.878954"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/system_validation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.885855"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_enhanced_coordination.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.889840"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/health_check.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.890132"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_status.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.891325"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/bench_weaviate.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.897801"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/update_github_secrets.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.899821"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_roo_mcp_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.901889"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/validate_syntax.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.902673"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_to_cherry_ai.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.905295"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_caching_issue.py",
        "line": 18,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.905788"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_caching_issue.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.907652"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/cleanup_old_deployments.py",
        "line": 204,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.908602"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cleanup_old_deployments.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.911358"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_critical_files.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.913443"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/version_manager.py",
        "line": 357,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.916521"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/eigencode_installer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.921516"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/enhanced_provisioning.py",
        "line": 209,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.923711"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/final_deployment_check.py",
        "line": 32,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.924734"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/final_deployment_check.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.926154"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/maintain_uiux_design_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.938530"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_cursor_ai_database.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.938990"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/start_mcp_servers.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.939663"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 372,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.942958"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/symphony_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.943602"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/roo_conductor_quickstart.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.945107"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/validate_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.947691"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_ai_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.954006"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/config_inventory.py",
        "line": 22,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.954545"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/config_inventory.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.954582"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 155,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:52.965317"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/live_integration_demo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.966094"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/rollback_infrastructure.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.969476"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_setup_wizard.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.979699"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/apply_audit_fixes.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.980116"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/setup_admin_user.py",
        "line": 16,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.980440"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_admin_user.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.981514"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/how_to_use_roo_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.982873"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_broken_imports.py",
        "line": 17,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.984100"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_broken_imports.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.988066"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_deployment_summary.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.989787"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/migrate_to_portkey.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.991323"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/secure_api_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.992251"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
        "line": 15,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.992937"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/auto_start_cherry_ai_roo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:52.994796"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/documentation_consistency_cleaner.py",
        "line": 25,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:52.998354"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/documentation_consistency_cleaner.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.007919"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_coordination_config.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.010189"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/backend_comprehensive_audit.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.015591"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
        "line": 147,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.016869"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
        "line": 151,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.016877"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/agent_health_monitor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.017101"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/quick_start_design_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.021994"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/security_performance_cleaner.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.030431"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/deploy_and_test_enhanced_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.048655"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/ai_system_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.050165"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/persona_config_manager.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.057106"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 25,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.060624"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/testing_validation_cleaner.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.071277"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/configure_airbyte.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.074125"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/config_audit.py",
        "line": 20,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.076607"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/config_audit.py",
        "line": 288,
        "issue": "Missing docstring for check_recursive",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.076756"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/config_audit.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.084036"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/comprehensive_validation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.092642"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/proof_of_functionality.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.093660"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/final_cleanup_deliverables.py",
        "line": 24,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.099220"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/final_cleanup_deliverables.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.107470"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/domain_separation_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.111906"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 385,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.115302"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/eigencode_monitor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.115852"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/integration_plan.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.119362"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_llm_configuration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.121802"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/parallel_mode_executor.py",
        "line": 37,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.122258"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/parallel_mode_executor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.122321"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 26,
        "issue": "Missing docstring for ComprehensiveBackendAuditor",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.124898"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 27,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.124929"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.132404"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/purge_unwanted_infrastructure.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.135637"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_integration_complete.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.137101"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/mobile_app_integration.py",
        "line": 11,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.137502"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/mobile_app_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.140875"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/auto_mode_selector.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.147851"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
        "line": 153,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.149188"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/agent_lifecycle_manager.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.149411"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/ml_infrastructure_prep.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.153657"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_pre_commit_issues.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.157791"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_advanced_caching.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.161816"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/use_enhanced_cli_workflow.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.168239"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/conductor_startup_automation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.172514"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/version_updater.py",
        "line": 580,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.177603"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/pip_forever_fix.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.180478"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_system_status.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.182801"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_infrastructure.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.184777"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_api_connections.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.185320"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/activate_cherry_ai_in_roo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.185996"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/comprehensive_ai_validation.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.193789"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/system_preparedness.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.196383"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 22,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.198232"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 215,
        "issue": "Missing docstring for score_implementation",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.198358"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/consolidate_duplicate_endpoints.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.203391"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 23,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.207724"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/validate_api_consistency.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.214547"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_local_deployment.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.217927"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/cleanup_engine.py",
        "line": 473,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.222791"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/search_engine_cleanup.py",
        "line": 19,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.228496"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/search_engine_cleanup.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.238740"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/smoke_tests.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.241271"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_cherry_ai_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.244966"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 281,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.254521"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_complete_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.255237"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_postgres_connection.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.256048"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_model_syntax.py",
        "line": 21,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.257704"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_model_syntax.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.261875"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/cherry_ai_implementation_status.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.264205"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/infrastructure_robustness_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.270056"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/reconstruct_critical_files.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.274669"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
        "line": 181,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.276608"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
        "line": 225,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.276671"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/mcp_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.277020"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/monitoring_improvements.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.282435"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/python_codebase_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.286881"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/demo_conductor.py",
        "line": 148,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.288870"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/demo_conductor.py",
        "line": 178,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.288913"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/demo_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.289376"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_nl_and_agent.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.290935"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 6,
        "issue": "Missing docstring for _headers",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.291375"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 9,
        "issue": "Missing docstring for create_instance",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.291383"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 20,
        "issue": "Missing docstring for attach_volume",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.291387"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 25,
        "issue": "Missing docstring for main",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.291391"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/vultr_provision.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.292157"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 23,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.294204"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/rapid_production_deploy.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.301251"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/roo_enhanced_launcher.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.302848"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_deployment.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.304436"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/code_inventory.py",
        "line": 34,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.311883"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/code_inventory.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.311935"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_new_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.321788"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_deployment_ready.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.324280"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_roo_integration_simple.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.325486"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_tool_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.326305"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_conductor_demo.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.335512"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/scripts/fix_import_errors.py",
        "line": 21,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.340995"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/fix_import_errors.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.346275"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_design_system.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.350563"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/test_natural_language.py",
        "line": 61,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.351458"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_natural_language.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.351623"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/simple_mcp_server.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.352114"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/setup_ai_services.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.354895"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/test_coordination_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.358931"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/verify_conductor_mcp_connection.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.362734"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/optimize_without_eigencode.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.364130"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/test_example.py",
        "line": 3,
        "issue": "Missing docstring for TestExample",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.369996"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/test_example.py",
        "line": 4,
        "issue": "Missing docstring for test_simple_assertion",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.370008"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/tests/test_enhanced_methods.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.379579"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/test_resources.py",
        "line": 19,
        "issue": "Missing docstring for mock_memory_service",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.385487"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/test_resources.py",
        "line": 26,
        "issue": "Missing docstring for mock_litellm_client_instance",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.385495"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/test_resources.py",
        "line": 38,
        "issue": "Missing docstring for mock_weaviate_adapter_instance",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.385499"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 323,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.407109"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/infra/do_weaviate_migration_stack.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.407593"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.factory/context.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.414362"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/deploy/superagi_config.py",
        "line": 6,
        "issue": "Missing docstring for SuperAGIDeployment",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.414962"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/test_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.422737"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/run_mcp_server.py",
        "line": 106,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.429386"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/monitoring/postgresql_performance_dashboard.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.445413"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/conductor_cli_enhanced.py",
        "line": 598,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.451312"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/tools/mode_system_initializer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.455712"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/tools/mode_switcher.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.458932"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/tools/cherry_ai_cli.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.465721"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
        "line": 42,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.467413"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
        "line": 62,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.467424"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
        "line": 90,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.467433"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
        "line": 107,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.467439"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.roo/integrations/cherry_ai_ai.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.469455"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.roo/hooks/cherry_ai_startup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.469940"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_complete_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.472708"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.roo/scripts/verify_setup.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.474110"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/.roo/scripts/validate_roomodes.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.475224"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/deploy.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.477784"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/shared/memory/unified_memory.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.491662"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/shared/database/apply_unified_enhancements.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.504716"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
        "line": 127,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.535340"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
        "line": 207,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.535450"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/shared/data_ingestion/api_connectors.py",
        "line": 230,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.535483"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/memory/example_usage.py",
        "line": 34,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.550203"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/memory/example_usage.py",
        "line": 178,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.550394"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/memory/example_usage.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.550934"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/core/agents/retriever_agent.py",
        "line": 8,
        "issue": "Missing docstring for query",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.562865"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/persistency/mode_config_persistence.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.607407"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/examples/llm_client.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.638775"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/examples/secret_manager_example.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.640896"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/examples/persona_client.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.641950"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.651790"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/src/services/memory_service.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.714278"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/conductor/src/api/utils/format_structured_output.py",
        "line": 19,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.758049"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/conductor/src/api/utils/format_structured_output.py",
        "line": 50,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.758111"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/conductor/src/api/utils/format_structured_output.py",
        "line": 228,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.758386"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/conductor/src/api/endpoints/resources.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.781200"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/core/business/personas/base.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.817317"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/domain_setup/configure_airbyte_pipelines.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.860623"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/scripts/domain_setup/provision_weaviate_clusters.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.861649"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
        "line": 5,
        "issue": "Missing docstring for DummyAdapter",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.861901"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
        "line": 17,
        "issue": "Missing docstring for test_set_get",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.861908"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_weaviate_session_cache.py",
        "line": 6,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.861914"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
        "line": 9,
        "issue": "Missing docstring for InMemoryAdapter",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.862597"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
        "line": 23,
        "issue": "Missing docstring for create_zip",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.862605"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
        "line": 36,
        "issue": "Missing docstring for test_zip_dedup",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.862609"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/shared/test_zip_processor.py",
        "line": 10,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.862618"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/tests/integration/test_mcp_servers.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.864388"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
        "line": 104,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.868191"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
        "line": 132,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.868235"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
        "line": 166,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.868281"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/tests/benchmarks/memory_benchmark.py",
        "line": 198,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.868324"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/services/test_memory_service.py",
        "line": 9,
        "issue": "Missing docstring for mock_memory_manager",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.869285"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/services/test_memory_service.py",
        "line": 23,
        "issue": "Missing docstring for memory_service",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.869292"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/tests/services/test_memory_service.py",
        "line": 63,
        "issue": "Missing docstring for test_hash_record_model",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.869304"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/packages/agents/contact_enrichment_agent.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.898947"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/packages/agents/property_enrichment_agent.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.899978"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/packages/agents/src/routing.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.929039"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
        "line": 158,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.967282"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_server.py",
        "line": 162,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.967291"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/web_scraping_mcp_server.py",
        "line": 452,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.974074"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/servers/deployment_server.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.988164"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
        "line": 91,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:53.989320"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
        "line": 204,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.991608"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
        "line": 205,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.991614"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/servers/conductor_server.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:53.991920"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/servers/memory_server.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:53.995569"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/tools_server.py",
        "line": 156,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:53.997136"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 18,
        "issue": "Missing docstring for GetSchemaRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005554"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 23,
        "issue": "Missing docstring for AddObjectRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005564"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 29,
        "issue": "Missing docstring for AddObjectResponse",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005570"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 34,
        "issue": "Missing docstring for GetObjectRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005576"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 39,
        "issue": "Missing docstring for GetObjectResponse",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005581"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 45,
        "issue": "Missing docstring for DeleteObjectRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005587"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 49,
        "issue": "Missing docstring for DeleteObjectResponse",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005592"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 53,
        "issue": "Missing docstring for HybridSearchRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005598"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 69,
        "issue": "Missing docstring for SearchResultItem",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005604"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 76,
        "issue": "Missing docstring for HybridSearchResponse",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005609"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 80,
        "issue": "Missing docstring for RawGraphQLRequest",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005614"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 83,
        "issue": "Missing docstring for RawGraphQLResponse",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005619"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 87,
        "issue": "Missing docstring for MCPToolProperty",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005634"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 92,
        "issue": "Missing docstring for MCPToolParameters",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005639"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 97,
        "issue": "Missing docstring for MCPToolDefinition",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005645"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/mcp_server/servers/weaviate_direct_mcp_server.py",
        "line": 361,
        "issue": "Missing docstring for _translate_simple_filters",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.005675"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/servers/enhanced_memory_server.py",
        "line": 322,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.017805"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
        "line": 323,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.070711"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard_enhanced.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.071200"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/monitoring/health_dashboard.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.072122"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
        "line": 399,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.082510"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
        "line": 403,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.082519"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/roo/cherry_ai_integration.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.083046"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
        "line": 209,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.107745"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/mcp_server/storage/async_memory_store.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.108254"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/utils/circuit_breaker.py",
        "line": 24,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.111612"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/utils/circuit_breaker.py",
        "line": 106,
        "issue": "Missing docstring for decorator",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.111640"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/utils/circuit_breaker.py",
        "line": 123,
        "issue": "Missing docstring for sync_wrapper",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.111702"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/utils/circuit_breaker.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.113164"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/api/main.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.114635"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/vector_db/weaviate_adapter.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.115325"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/vector_db/weaviate_adapter.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.116438"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
        "line": 13,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.116747"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/multimedia_generation/image_gen_controller.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.117270"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
        "line": 13,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.117552"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/multimedia_generation/video_gen_controller.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.118050"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.118416"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/multimedia_generation/operator_mode_coordinator.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.119188"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/search_engine/search_router.py",
        "line": 24,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.120214"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/search_router.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.121058"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
        "line": 25,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.122073"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/creative_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.124880"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
        "line": 18,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.125757"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/deep_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.126744"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/normal_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.130287"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
        "line": 17,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.133694"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/super_deep_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.134071"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/uncensored_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.134913"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/search_engine/base_search.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.135168"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/search_engine/base_search.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.135487"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 18,
        "issue": "Missing docstring for LLMClient",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.136596"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 24,
        "issue": "Missing docstring for UnifiedDatabase",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.136602"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 28,
        "issue": "Missing docstring for WeaviateAdapter",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.136606"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 19,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.136690"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 29,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.136696"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/personas/sophia_persona.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.139579"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 18,
        "issue": "Missing docstring for LLMClient",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.140760"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 24,
        "issue": "Missing docstring for UnifiedDatabase",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.140766"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 28,
        "issue": "Missing docstring for WeaviateAdapter",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.140771"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 19,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.140856"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 29,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.140862"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/personas/karen_persona.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.143742"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 18,
        "issue": "Missing docstring for LLMClient",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.144930"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 24,
        "issue": "Missing docstring for UnifiedDatabase",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.144937"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 28,
        "issue": "Missing docstring for WeaviateAdapter",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.144941"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 19,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.145025"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 29,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.145032"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/personas/cherry_persona.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.147953"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/personas/persona_manager.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.149270"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/database/unified_database.py",
        "line": 16,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.150515"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/database/unified_database.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.152217"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
        "line": 15,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.152603"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/file_ingestion/zip_extractor.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.153296"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.153577"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/file_ingestion/video_processor.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.154057"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.154554"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/file_ingestion/document_parser.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.155750"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
        "line": 15,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.156371"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/file_ingestion/ingestion_controller.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.157645"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.157938"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/file_ingestion/audio_transcriber.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.158418"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/llm/client.py",
        "line": 13,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.158691"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/llm/client.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.159161"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/auth/utils.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.161060"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
        "line": 15,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.161411"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/operator_mode/operator_manager.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.162005"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
        "line": 14,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.162298"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/operator_mode/agent_supervisor.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.162815"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
        "line": 15,
        "issue": "Missing docstring for __init__",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.163224"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/src/operator_mode/agent_task_queue.py",
        "line": 0,
        "issue": "Logging imported but not used",
        "suggestion": "Implement proper logging",
        "timestamp": "2025-06-03T21:51:54.164010"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 543,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.176217"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 552,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.176233"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/claude/claude_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.177004"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/eigencode/mock_analyzer.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.177961"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/coordination/conductor_integration_update.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.181057"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/coordination/intelligent_cache.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.190991"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor.py",
        "line": 608,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.200685"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
        "line": 530,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.218498"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
        "line": 531,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.218502"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/coordination/ai_conductor_enhanced.py",
        "line": 535,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.218510"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/agents/cursor_ai_enhanced.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.230375"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 293,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.234526"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 298,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.234534"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 303,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.234543"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 308,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.234551"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/agents/claude_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.235637"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/github_copilot/copilot_integration.py",
        "line": 774,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.242282"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
        "line": 374,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.246736"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
        "line": 394,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.246767"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/cursor_ai/cursor_integration_enhanced.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.247326"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
        "line": 370,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.252071"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/design/dalle_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.253242"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
        "line": 329,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.257676"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/design/recraft_integration.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.258777"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
        "line": 522,
        "issue": "Pretty printing JSON in production",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:54.264877"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ai_components/design/design_conductor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.266234"
      },
      {
        "category": "documentation",
        "file": "/root/cherry_ai-main/agent/tests/test_example.py",
        "line": 2,
        "issue": "Missing docstring for test_example",
        "suggestion": "Add descriptive docstring",
        "timestamp": "2025-06-03T21:51:54.266362"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/agent/app/routers/suggestions.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.285394"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/agent/app/routers/intent.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.286644"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/agent/app/services/natural_language_processor.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.312428"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ml/pipelines/inference_pipeline.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.319972"
      },
      {
        "category": "logging",
        "file": "/root/cherry_ai-main/ml/pipelines/training_pipeline.py",
        "line": 0,
        "issue": "Using print() instead of logging",
        "suggestion": "Use logging module for better control",
        "timestamp": "2025-06-03T21:51:54.321149"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 45,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.778901"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 50,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.778921"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 55,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.778931"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 86,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.778983"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 96,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779001"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 125,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779049"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 128,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779056"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 130,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779061"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 131,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779064"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 160,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779138"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 168,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779154"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 228,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779254"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 229,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779257"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 230,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779260"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 231,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779264"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/scripts/figma_webhook_handler.js",
        "line": 234,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.779270"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 71,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780180"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 125,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780273"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 126,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780277"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 206,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780405"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 211,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780414"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 227,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780442"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/.roo/scripts/portkey-router.js",
        "line": 230,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.780448"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/emscripten_fetch_worker.js",
        "line": 40,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781412"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/emscripten_fetch_worker.js",
        "line": 72,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781473"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/urllib3/contrib/emscripten/emscripten_fetch_worker.js",
        "line": 100,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781518"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 39,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781743"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 150,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781928"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 160,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781946"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 165,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.781956"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 319,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782231"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 457,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782460"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 472,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782487"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 475,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782493"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 489,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782517"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 490,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782520"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 494,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782528"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 505,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782547"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 508,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782554"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 580,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782672"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 581,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782675"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 585,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782683"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 589,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782691"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 590,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782694"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 599,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782710"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 711,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782893"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 714,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782900"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 715,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782903"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/coverage/htmlfiles/coverage_html.js",
        "line": 717,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.782908"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 2,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.800317"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 2,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.801347"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 3,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.801366"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/swagger/swagger-ui-bundle.js",
        "line": 3,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.802786"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/polyfills-42372ed130431b0a.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803331"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/polyfills-42372ed130431b0a.js",
        "line": 3,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803359"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/polyfills-42372ed130431b0a.js",
        "line": 3,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803463"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/899-768e8bb08fd1e694.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803768"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/699-6fbb6ca66d95cf3c.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803871"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/699-6fbb6ca66d95cf3c.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.803895"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/117-1c5bfc45bfc4237d.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804098"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/117-1c5bfc45bfc4237d.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804219"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/117-1c5bfc45bfc4237d.js",
        "line": 2,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804229"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/117-1c5bfc45bfc4237d.js",
        "line": 2,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804298"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/3014691f-b7b79b78e27792f3.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804396"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/framework-b370f160bb96059c.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804630"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/framework-b370f160bb96059c.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.804834"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.807576"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811035"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 4,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811291"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 7,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811302"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 7,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811423"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 11,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811437"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/460-374c9a9a8c3bef22.js",
        "line": 11,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811802"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/main-app-4f7318ae681a6d94.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.811912"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/402-cba8184a1bf36c3c.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.812341"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/402-cba8184a1bf36c3c.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.812911"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/13b76428-ebdf3012af0e4489.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.813046"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/13b76428-ebdf3012af0e4489.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.813186"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/250-ca9d788a8d1c6d58.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.813329"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/250-ca9d788a8d1c6d58.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.813445"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/webpack-75a5453f51d60261.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.813548"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/313-bba577664545e320.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816060"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/fd9d1056-205af899b895cbac.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816325"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/fd9d1056-205af899b895cbac.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816558"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/main-8ee698634884314e.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816724"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/main-8ee698634884314e.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.816881"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/pages/_app-15e2daefa259f0b5.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.817270"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/app/page-4f63cf87d7229abe.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.817971"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/app/page-4f63cf87d7229abe.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819333"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/app/onboarding/page-6e93ff5674929e45.js",
        "line": 1,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819537"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/app/onboarding/page-6e93ff5674929e45.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819550"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/venv/lib/python3.12/site-packages/litellm/proxy/_experimental/out/_next/static/chunks/app/model_hub/page-38df01e06b8ad4aa.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819645"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/apps/web/src/services/agentService.js",
        "line": 43,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819830"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/apps/web/src/services/agentService.js",
        "line": 53,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819851"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/apps/web/src/services/agentService.js",
        "line": 56,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.819857"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/scripts/security-audit.js",
        "line": 25,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.820333"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/scripts/security-audit.js",
        "line": 86,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.820439"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/scripts/security-audit.js",
        "line": 188,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.820606"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/scripts/security-audit.js",
        "line": 234,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.820682"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 1,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829461"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 9,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829495"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 17,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829512"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 25,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829527"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 25,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829536"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 33,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829564"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 34,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829568"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 36,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829574"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 37,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829648"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 38,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829713"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 40,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829718"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 40,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829905"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 48,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829922"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 56,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829938"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 56,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829953"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 58,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.829964"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 58,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.830062"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 68,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.830101"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 483,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.830811"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 487,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.830831"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 487,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831031"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 524,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831121"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 527,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831140"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 527,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831190"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 534,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831210"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 539,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831220"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 539,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831231"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 545,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831306"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 547,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831311"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 547,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831320"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 549,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831336"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 549,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831457"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 550,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831483"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 554,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831511"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 554,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831609"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 563,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831632"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 563,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831813"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 564,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831826"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 570,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831842"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 570,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831875"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 572,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831879"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 574,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.831915"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 574,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832291"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 579,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832339"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 579,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832533"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 580,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832537"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 580,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832654"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 581,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832660"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 582,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832663"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 582,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832674"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 584,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832681"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 584,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832711"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 585,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832755"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 593,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832859"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 596,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832922"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 597,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832966"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 598,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832968"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 598,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832975"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 599,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832979"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 602,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.832994"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 603,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833007"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 604,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833195"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 605,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833204"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 607,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833217"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 608,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833235"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 609,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833272"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 610,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833280"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 612,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833297"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 613,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833311"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 617,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833319"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 620,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833327"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 623,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833334"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 627,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833343"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 630,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833370"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 631,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833379"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 632,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833384"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 633,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833392"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 634,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833398"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 635,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833407"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 636,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833428"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 637,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833436"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 640,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833443"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 647,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833468"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 648,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833566"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 649,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833667"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 650,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833692"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 651,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833700"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 652,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833719"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 652,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833795"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 655,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833802"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 656,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833885"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/dist/assets/index-1748981508195.js",
        "line": 656,
        "issue": "Use const/let instead of var",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.833996"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 41,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837394"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 69,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837446"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 76,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837459"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 78,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837464"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 85,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837477"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 92,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837490"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 109,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837519"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 112,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837526"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 114,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837530"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 119,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837540"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 121,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837545"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 127,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837556"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 134,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837569"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 151,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837598"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 159,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837613"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 166,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837625"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 171,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837635"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 191,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837669"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 192,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837672"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 193,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837675"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 194,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837678"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 195,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837681"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 196,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837684"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 197,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837687"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 198,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837691"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 199,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837694"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 200,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837697"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 201,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837700"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 206,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837710"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 213,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837723"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 239,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837766"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 275,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837826"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 276,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837830"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 277,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837833"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 278,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837836"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 279,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837839"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 280,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837842"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 297,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.837872"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 466,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.838173"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/index.ts",
        "line": 471,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.838184"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 166,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839325"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 171,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839338"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 176,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839348"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 181,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839358"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 186,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839368"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 342,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839623"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/examples/example-migration.ts",
        "line": 344,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.839628"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/logger.ts",
        "line": 155,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.846675"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/logger.ts",
        "line": 157,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.846684"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/logger.ts",
        "line": 159,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.846690"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/logger.ts",
        "line": 181,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.846726"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/utils/cache-manager.ts",
        "line": 162,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.852146"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/utils/cache-manager.ts",
        "line": 172,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.852168"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/utils/cache-manager.ts",
        "line": 224,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.852254"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/infrastructure/pulumi/migration/src/utils/cache-manager.ts",
        "line": 279,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.852344"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/authStore.ts",
        "line": 27,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.858147"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/authStore.ts",
        "line": 31,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.858158"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/authStore.ts",
        "line": 51,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.858193"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/workflowStore.ts",
        "line": 165,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.858564"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/authStore.test.ts",
        "line": 36,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.859517"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/store/authStore.test.ts",
        "line": 56,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.859554"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/test/setup.ts",
        "line": 28,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.860344"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/conductorService.ts",
        "line": 90,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862334"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/conductorService.ts",
        "line": 110,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862372"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/conductorService.ts",
        "line": 137,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862417"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/conductorService.ts",
        "line": 149,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862438"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/conductorService.ts",
        "line": 184,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862495"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 54,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862723"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 79,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862767"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 89,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862785"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 101,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862806"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 175,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862927"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 195,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862961"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 203,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.862975"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 233,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.863025"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/websocketManager.ts",
        "line": 296,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.863151"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/portkey/PortkeyService.ts",
        "line": 56,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.864993"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/portkey/PortkeyService.ts",
        "line": 108,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.865106"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/portkey/PortkeyService.ts",
        "line": 188,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.865236"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/admin-ui/src/services/portkey/PortkeyService.ts",
        "line": 207,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.865269"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/src/ui/web/react_app/src/services/websocket.ts",
        "line": 16,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.866340"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/src/ui/web/react_app/src/services/websocket.ts",
        "line": 28,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.866364"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/react_app/src/services/websocket.ts",
        "line": 16,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867176"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/react_app/src/services/websocket.ts",
        "line": 28,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867200"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/hooks/useOmniSearch.ts",
        "line": 52,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867413"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/hooks/useOmniSearch.ts",
        "line": 153,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867578"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/hooks/useOmniSearch.ts",
        "line": 195,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867647"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/hooks/useOmniSearch.ts",
        "line": 199,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867655"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/ui_projects_backup_20250603_162302/dashboard/hooks/useOmniSearch.ts",
        "line": 202,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.867661"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/dashboard/hooks/useOmniSearch.ts",
        "line": 52,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.869214"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/dashboard/hooks/useOmniSearch.ts",
        "line": 153,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.869382"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/dashboard/hooks/useOmniSearch.ts",
        "line": 195,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.869452"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/dashboard/hooks/useOmniSearch.ts",
        "line": 199,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.869460"
      },
      {
        "category": "javascript",
        "file": "/root/cherry_ai-main/dashboard/hooks/useOmniSearch.ts",
        "line": 202,
        "issue": "Console statements in code",
        "suggestion": "",
        "timestamp": "2025-06-03T21:51:55.869466"
      }
    ],
    "info": [
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/scripts/comprehensive_backend_audit.py",
        "line": 0,
        "issue": "Check if filtered fields have indexes",
        "suggestion": "Add db_index=True to frequently queried fields",
        "timestamp": "2025-06-03T21:51:53.130713"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/personas/test_manager.py",
        "line": 0,
        "issue": "Check if filtered fields have indexes",
        "suggestion": "Add db_index=True to frequently queried fields",
        "timestamp": "2025-06-03T21:51:53.578954"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/conductor/src/memory/layered_memory_manager.py",
        "line": 0,
        "issue": "Check if filtered fields have indexes",
        "suggestion": "Add db_index=True to frequently queried fields",
        "timestamp": "2025-06-03T21:51:53.647163"
      },
      {
        "category": "performance",
        "file": "/root/cherry_ai-main/core/data_ingestion/storage/weaviate_adapter.py",
        "line": 0,
        "issue": "Check if filtered fields have indexes",
        "suggestion": "Add db_index=True to frequently queried fields",
        "timestamp": "2025-06-03T21:51:53.841353"
      }
    ]
  },
  "issue_summary": {
    "critical": 703,
    "high": 203,
    "medium": 865,
    "low": 750,
    "info": 4
  },
  "fixes": {
    "security_fixes": [
      {
        "file": "/root/cherry_ai-main/scripts/deployment_readiness_check.py",
        "line": 160,
        "fix": "Move to environment variable",
        "code": "os.getenv('password')"
      },
      {
        "file": "/root/cherry_ai-main/scripts/comprehensive_production_deploy.py",
        "line": 421,
        "fix": "Move to environment variable",
        "code": "os.getenv('secrets_config')"
      }
    ],
    "performance_fixes": [],
    "code_quality_fixes": [],
    "dependency_updates": []
  }
}