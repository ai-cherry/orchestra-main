[tool.poetry]
name = "mcp-server"
version = "0.1.0"
description = "Model Context Protocol (MCP) Memory System"
authors = ["AI Orchestra Team <info@example.com>"]
readme = "README.md"
packages = [{include = "mcp_server"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
flask = "^2.0.0"
flask-cors = "^3.0.0"
flask-socketio = "^5.0.0"
requests = "^2.25.0"
aiohttp = "^3.7.0"
pydantic = "^1.8.0"
redis = {extras = ["hiredis"], version = "^4.5.0"}
tiktoken = "^0.4.0"
numpy = "^1.24.0"
# Using google-cloud-storage for GCP authentication
google-cloud-storage = "^3.0.0"
# Will use GCP_SECRET_MANAGEMENT_KEY for secret management
pyyaml = "^6.0.0"
# Adding OpenAI for LLM integration
openai = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
mcp-server = "mcp_server.main:main"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true