[tool.poetry]
name = "ai-orchestra"
version = "0.1.0"
description = "AI Orchestra - A comprehensive platform for orchestrating AI models and workflows"
authors = ["AI Orchestra Team <team@ai-orchestra.example.com>"]
readme = "README.md"
packages = [{include = "packages"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = "^0.27.0"
pydantic = "^2.6.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
google-cloud-aiplatform = "^1.38.0"
google-cloud-storage = "^2.13.0"
google-cloud-firestore = "^2.13.1"
google-cloud-secretmanager = "^2.0.0"
httpx = "^0.26.0"
tenacity = "^8.2.3"
structlog = "^23.2.0"
psutil = "^5.9.5"  # For system metrics and performance monitoring

[tool.poetry.group.litellm.dependencies]
litellm = "^0.1.8"
openai = "^1.3.0"
anthropic = "^0.5.0"

[tool.poetry.group.portkey.dependencies]
portkey-ai = "^0.2.5"

[tool.poetry.group.openrouter.dependencies]
openrouter = "^0.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
flake8 = "^6.1.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.poetry.scripts]
start = "uvicorn packages.api.main:app --reload"
start-prod = "uvicorn packages.api.main:app --host 0.0.0.0 --port 8080"
format = "black ."
lint = "flake8 ."
test = "pytest"
