[tool.poetry]
name = "ai-orchestra"
version = "0.1.0"
description = "AI Orchestra - A comprehensive platform for orchestrating AI models and workflows"
authors = ["AI Orchestra Team <team@ai-orchestra.example.com>"]
readme = "README.md"
packages = [{include = "packages"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = "^0.24.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
python-dotenv = "^1.0.0"
google-cloud-aiplatform = "^1.36.4"
google-cloud-storage = "^2.12.0"
google-cloud-firestore = "^2.13.1"
google-cloud-secretmanager = "^2.16.4"
httpx = "^0.25.1"
tenacity = "^8.2.3"
structlog = "^23.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
flake8 = "^6.1.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
