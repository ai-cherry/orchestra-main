[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "orchestra"
version = "0.1.0"
description = "Orchestra AI integration platform"
readme = "README.md"
authors = ["Orchestra Team <team@example.com>"]
license = "Proprietary"

[tool.poetry.dependencies]
python = ">=3.9"  # Updated to resolve google-generativeai compatibility
phidata = ">=2.7.0"  # Main phidata package
# agno dependency removed as it's causing version solving failure
openai = ">=1.0.0"
anthropic = ">=0.5.0"
google-generativeai = ">=0.3.0" # For Gemini Embedder
psycopg = {extras = ["binary"], version = ">=3.1.0"}
sqlalchemy = ">=2.0.0"
pgvector = ">=0.2.0"
duckduckgo-search = ">=5.0.0"
newspaper4k = { version = ">=0.9.3", python = ">=3.9,<4.0" }  # Explicitly set Python version constraint
slack-sdk = ">=3.0.0"
fastapi = {extras = ["standard"], version = ">=0.115.0"}
wikipedia = ">=1.4.0"
lancedb = ">=0.3.0"
tantivy = ">=0.20.0"
pypdf = ">=3.0.0"
yfinance = ">=0.2.0"
exa-py = ">=1.0.0"

[tool.poetry.group.database.dependencies]
lancedb = ">=0.3.0"
tantivy = ">=0.20.0"

[tool.poetry.group.search_tools.dependencies]
duckduckgo-search = ">=5.0.0"
newspaper4k = { version = ">=0.9.3", python = ">=3.9,<4.0" }  # Using consistent configuration with main dependency
wikipedia = ">=1.4.0"
exa-py = ">=1.0.0"

[tool.poetry.group.documents.dependencies]
pypdf = ">=3.0.0"

[tool.poetry.group.finance.dependencies]
yfinance = ">=0.2.0"

[tool.poetry.group.comms.dependencies]
slack-sdk = ">=3.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
black = ">=23.0.0"
mypy = ">=1.0.0"
flake8 = ">=6.0.0"
pytest-cov = ">=4.1.0"
ruff = ">=0.0.262"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | google-cloud-sdk
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "google-cloud-sdk"]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "google-cloud-sdk",
    "build",
    "dist",
]

[tool.mypy]
exclude = ["google-cloud-sdk"]
