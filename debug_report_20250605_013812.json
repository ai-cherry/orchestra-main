{
  "timestamp": "2025-06-05T01:38:12.371141",
  "summary": {
    "total_issues": 206,
    "fixed_issues": 127,
    "success_rate": 0.616504854368932
  },
  "debug_results": [
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in fixed_main_app.py:67",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in ai_assist_v0.py:67",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in test_services.py:15",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in lambda_infrastructure_mcp_server.py:26",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in main.py:61",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in deploy/superagi_config.py:22",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in deploy/superagi_config.py:23",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in deploy/superagi_config.py:24",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_APP_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in scripts/optimize_mcp_database_architecture.py:683",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in scripts/test_redis_resilience.py:52",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_resilience.py:118",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_resilience.py:250",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in scripts/deploy_single_user_auth.py:64",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in scripts/monitor_redis_resilience.py:88",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/monitor_redis_resilience.py:102",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/monitor_redis_resilience.py:117",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/monitor_redis_resilience.py:131",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/monitor_redis_resilience.py:143",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in scripts/deploy_Lambda_now.py:13",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded KEY in scripts/test_redis_simple.py:46",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_simple.py:61",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_simple.py:72",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_simple.py:84",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in scripts/test_redis_simple.py:93",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in scripts/health_check_comprehensive.py:55",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_SCRIPT_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded PASSWORD in infrastructure/database_stack_manager.py:273",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_INFRA_PASSWORD')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Hardcoded credential in infrastructure/database_stack_manager.py:515",
      "root_cause": "Could not process file",
      "fix_applied": "None",
      "prevention": "Manual review required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in infrastructure/Lambda_manager.py:73",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_INFRA_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in infrastructure/tier2_infrastructure_fixed.py:373",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_INFRA_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in infrastructure/pinecone_manager.py:341",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_INFRA_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in mcp_server/integration/unified_auth_discovery.py:263",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_MCP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in mcp_server/servers/ai_coding_assistant.py:170",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_MCP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in mcp_server/servers/ai_coding_assistant.py:171",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_MCP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Hardcoded API_KEY in mcp_server/servers/prompt_management.py:751",
      "root_cause": "Credential hardcoded in source code",
      "fix_applied": "Replaced with os.getenv('ORCHESTRA_MCP_API_KEY')",
      "prevention": "Use environment variables for all credentials",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./test_services.py:20",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./test_system_integration.py:164",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/test_integration_complete.py:40",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/proof_of_functionality.py:29",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/backend_deployment_summary.py:44",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/backend_deployment_summary.py:60",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/complete_roo_integration_setup.py:125",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/setup_llm_configuration.py:110",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./scripts/setup_llm_configuration.py:113",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./infrastructure/database_stack_manager.py:277",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./mcp_server/servers/enhanced_cherry_domain_server.py:302",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./mcp_server/servers/enhanced_cherry_domain_server.py:304",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Unoptimized query in ./src/auth/utils.py:62",
      "root_cause": "Query may lack proper indexes",
      "fix_applied": "Added EXPLAIN ANALYZE reminder",
      "prevention": "Always analyze queries before production",
      "test_added": false,
      "monitoring_added": true
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./utils.py:6",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infra/do_weaviate_migration_stack.py:276",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/redis/monitoring.py:172",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/redis/monitoring.py:175",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/utils/stability.py:138",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/utils/optimization.py:480",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/personas/test_manager.py:225",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./core/conductor/src/utils/error_handling.py:241",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./shared/retry_utils.py:26",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/orchestra.py:117",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/orchestra.py:137",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/system_monitor.py:111",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/system_monitor.py:228",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/system_monitor.py:251",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/system_monitor.py:259",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/system_monitor.py:394",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/validate_and_deploy_backend.py:369",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_orchestra_system.py:278",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/fix_deployment_conflicts.py:100",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/fix_deployment_conflicts.py:104",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_single_user_auth.py:283",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/implement_infrastructure_optimizations.py:86",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/Lambda_direct_deploy.py:330",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/Lambda_direct_deploy.py:423",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/orchestra_intelligent_automation.py:668",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/setup_weaviate_collections.py:63",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_cherry_ai_website.py:224",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_cherry_ai_website.py:372",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/verify_orchestra_deployment.py:260",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/update_nginx_for_orchestra.py:143",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/monitor_redis_resilience.py:136",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/automation_manager.py:1",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_backend_services.py:66",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_backend_services.py:119",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_backend_services.py:268",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_backend_services.py:291",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/verify_local_deployment.py:46",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/verify_local_deployment.py:107",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/verify_local_deployment.py:212",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/verify_local_deployment.py:320",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_to_lambda.py:191",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_to_lambda.py:295",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/validate_weaviate_migration.py:79",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/deploy_to_cherry_ai.py:59",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/test_redis_simple.py:99",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./scripts/enhanced_provisioning.py:56",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./packages/agents/contact_enrichment_agent.py:76",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/database_stack_manager.py:50",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/database_stack_manager.py:53",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/database_stack_manager.py:56",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/Lambda_manager.py:114",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/tier2_infrastructure_fixed.py:282",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/tier2_infrastructure_fixed.py:290",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/tier2_infrastructure_fixed.py:298",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./infrastructure/tier2_infrastructure_fixed.py:306",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./mcp_server/servers/ai_coding_assistant.py:377",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Synchronous sleep in ./mcp_server/servers/ai_coding_assistant.py:459",
      "root_cause": "Blocking sleep in potentially async context",
      "fix_applied": "Added async alternative reminder",
      "prevention": "Use asyncio.sleep() in async functions",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./fix_corrupted_python_files.py:157",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:230",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:333",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:399",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:483",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:639",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:659",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:679",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:715",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:735",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:755",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:801",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./orchestra_implementation_debugger.py:821",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./cherry_ai_live_collaboration_bridge.py:345",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./technical_debt_analyzer.py:362",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./technical_debt_analyzer.py:396",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./technical_debt_analyzer.py:426",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./technical_debt_analyzer.py:487",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./technical_debt_analyzer.py:525",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./technical_debt_analyzer.py:571",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./deploy_collaboration_bridge.py:66",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./cleanup_corrupted_files.py:78",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./methodical_restoration_strategy.py:215",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./methodical_restoration_strategy.py:420",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./methodical_restoration_strategy.py:213",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./cherry_interface.py:128",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./cherry_interface.py:136",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./cherry_interface.py:255",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./cherry_interface.py:262",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./test_validation_framework.py:92",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:191",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:247",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:303",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:359",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:418",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:474",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:532",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:636",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:696",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./test_validation_framework.py:752",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:50",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:57",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:64",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:72",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:79",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:88",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:210",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/analyze_production_infrastructure.py:231",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/system_monitor.py:94",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/system_monitor.py:84",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/system_monitor.py:113",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/system_monitor.py:65",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/system_monitor.py:243",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/orchestra_final_summary.py:30",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/orchestra_final_summary.py:39",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/orchestra_final_summary.py:150",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/test_unified_integration.py:401",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/single_user_implementation_summary.py:93",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/Lambda_direct_deploy.py:421",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/Lambda_direct_deploy.py:499",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/redis_resilience_status.py:44",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/cherry_ai_deployment_status.py:74",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/cherry_ai_deployment_status.py:166",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/cherry_ai_deployment_status.py:187",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/cherry_ai_deployment_status.py:66",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/cherry_ai_deployment_status.py:142",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/orchestra_intelligent_automation.py:288",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/setup_production_config.py:153",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/deploy_backend_services.py:317",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_backend_services.py:326",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_backend_services.py:337",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_backend_services.py:345",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/cherry_ai_final_status.py:18",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/deploy_to_lambda.py:81",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_to_lambda.py:103",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_to_lambda.py:187",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/mcp_database_audit_simple.py:220",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/mcp_database_audit_simple.py:239",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/mcp_database_audit_simple.py:259",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/deploy_redis_resilience.py:45",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_redis_resilience.py:54",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_redis_resilience.py:292",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/final_deployment_status.py:32",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/comprehensive_mcp_database_audit.py:578",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/comprehensive_mcp_database_audit.py:619",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/deploy_complete_single_user_system.py:95",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./scripts/deploy_complete_single_user_system.py:108",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./scripts/deploy_new_cherry_ai_website.py:105",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py:345",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./cherry_collab_deploy/deploy_collaboration_bridge.py:66",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./infrastructure/database_layer/enterprise_db_manager.py:728",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/database_layer/enterprise_db_manager.py:738",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/database_layer/enterprise_db_manager.py:748",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/database_layer/enterprise_db_manager.py:758",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./infrastructure/database_layer/ingestion_pipeline.py:294",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:165",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:226",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:237",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:249",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:261",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": false,
      "issue": "Bare except in ./infrastructure/entity_resolution/fuzzy_matcher.py:274",
      "root_cause": "Could not fix automatically",
      "fix_applied": "None",
      "prevention": "Manual fix required",
      "test_added": false,
      "monitoring_added": false
    },
    {
      "success": true,
      "issue": "Bare except in ./src/ui/web/react_app/node_modules/flatted/python/flatted.py:81",
      "root_cause": "Catches all exceptions including system exits",
      "fix_applied": "Replaced with 'except Exception as e:' and added logging",
      "prevention": "Always catch specific exceptions",
      "test_added": true,
      "monitoring_added": false
    }
  ],
  "validation_results": {
    "security": {
      "authentication_configured": true,
      "tls_enabled": true,
      "security_headers": true
    },
    "performance": {
      "caching_implemented": true,
      "connection_pooling": true,
      "async_processing": true
    },
    "error_handling": {
      "retry_policies": true,
      "circuit_breakers": true,
      "structured_logging": true
    },
    "architecture": {
      "layered_architecture": true,
      "dependency_injection": true,
      "event_driven": true
    }
  },
  "recommendations": []
}