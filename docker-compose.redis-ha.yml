version: '3.8'

services:
  # Redis Master
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    command: >
      redis-server
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
      --tcp-backlog 511
      --tcp-keepalive 300
      --timeout 0
      --protected-mode no
      --bind 0.0.0.0
    ports:
      - "6379:6379"
    volumes:
      - redis-master-data:/data
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Redis Replica 1
  redis-replica-1:
    image: redis:7-alpine
    container_name: redis-replica-1
    command: >
      redis-server
      --replicaof redis-master 6379
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly yes
      --appendfsync everysec
      --protected-mode no
      --bind 0.0.0.0
    ports:
      - "6380:6379"
    volumes:
      - redis-replica-1-data:/data
    networks:
      - redis-net
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Redis Replica 2
  redis-replica-2:
    image: redis:7-alpine
    container_name: redis-replica-2
    command: >
      redis-server
      --replicaof redis-master 6379
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly yes
      --appendfsync everysec
      --protected-mode no
      --bind 0.0.0.0
    ports:
      - "6381:6379"
    volumes:
      - redis-replica-2-data:/data
    networks:
      - redis-net
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Redis Sentinel 1
  redis-sentinel-1:
    image: redis:7-alpine
    container_name: redis-sentinel-1
    command: >
      sh -c 'echo "
      port 26379
      sentinel monitor mymaster redis-master 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel parallel-syncs mymaster 1
      sentinel failover-timeout mymaster 10000
      sentinel deny-scripts-reconfig yes
      " > /etc/redis-sentinel.conf &&
      redis-sentinel /etc/redis-sentinel.conf'
    ports:
      - "26379:26379"
    networks:
      - redis-net
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    restart: unless-stopped

  # Redis Sentinel 2
  redis-sentinel-2:
    image: redis:7-alpine
    container_name: redis-sentinel-2
    command: >
      sh -c 'echo "
      port 26379
      sentinel monitor mymaster redis-master 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel parallel-syncs mymaster 1
      sentinel failover-timeout mymaster 10000
      sentinel deny-scripts-reconfig yes
      " > /etc/redis-sentinel.conf &&
      redis-sentinel /etc/redis-sentinel.conf'
    ports:
      - "26380:26379"
    networks:
      - redis-net
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    restart: unless-stopped

  # Redis Sentinel 3
  redis-sentinel-3:
    image: redis:7-alpine
    container_name: redis-sentinel-3
    command: >
      sh -c 'echo "
      port 26379
      sentinel monitor mymaster redis-master 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel parallel-syncs mymaster 1
      sentinel failover-timeout mymaster 10000
      sentinel deny-scripts-reconfig yes
      " > /etc/redis-sentinel.conf &&
      redis-sentinel /etc/redis-sentinel.conf'
    ports:
      - "26381:26379"
    networks:
      - redis-net
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    restart: unless-stopped

  # Redis Exporter for Prometheus
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    environment:
      REDIS_ADDR: "redis://redis-master:6379"
      REDIS_EXPORTER_CHECK_KEYS: "db0:*"
      REDIS_EXPORTER_CHECK_SINGLE_KEYS: "db0:important_key"
    ports:
      - "9121:9121"
    networks:
      - redis-net
    depends_on:
      - redis-master
    restart: unless-stopped

  # RedisInsight for monitoring
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redis-insight-data:/db
    networks:
      - redis-net
    restart: unless-stopped

volumes:
  redis-master-data:
  redis-replica-1-data:
  redis-replica-2-data:
  redis-insight-data:

networks:
  redis-net:
    driver: bridge