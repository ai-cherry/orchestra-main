# Enhanced Roo Configuration with Optimizations
# Based on latest Roo Coder best practices and internet research

modes:
  architect:
    model: anthropic/claude-sonnet-4
    temperature: 0.2
    provider: openrouter  # Added for cost optimization
    fallback: google/gemini-2.0-flash
    tools:
      - read
      - edit
      - browser
      - mcp
    role: AI architect for modular, high-performance orchestration using PostgreSQL,
      Weaviate, and Pulumi on Lambda Labs. Designs for single-dev, AI-assisted
      workflows.
  code:
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    temperature: 0.1
    provider: openrouter
    fallback: anthropic/claude-sonnet-4
    tools:
      - read
      - edit
      - command
      - mcp
    role: Expert Python/TypeScript developer for orchestration, Postgres, Weaviate,
      and Pulumi. Focuses on modular, AI-friendly, high-performance code.
  debug:
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    temperature: 0.05
    provider: openrouter
    fallback: anthropic/claude-sonnet-4
    tools:
      - read
      - edit
      - browser
      - command
      - mcp
    role: Systematic debugger for orchestration, Postgres, Weaviate, and MCP.
      Provides actionable, AI-friendly error analysis.
  orchestrator:
    model: anthropic/claude-sonnet-4
    temperature: 0.2
    provider: openrouter
    fallback: google/gemini-2.0-flash
    tools:
      - read
      - edit
      - browser
      - command
      - mcp
    role: AI workflow orchestrator for task decomposition, agent coordination, and
      context management. Maximizes MCP context and agent synergy.
  strategy:
    model: anthropic/claude-opus-4
    temperature: 0.3
    provider: openrouter
    fallback: anthropic/claude-sonnet-4
    tools:
      - read
      - edit
      - browser
      - mcp
    role: Technical strategist for AI system architecture, Lambda Labs optimization, and
      tech selection. Modular, scalable, performance-focused.
  research:
    model: google/gemini-2.5-pro-preview-06-05
    temperature: 0.2
    provider: openrouter
    fallback: google/gemini-2.0-flash
    tools:
      - read
      - edit
      - browser
      - mcp
    role: AI research assistant for best practices, benchmarking, and solution
      exploration. Synthesizes technical findings for coding agents.
  analytics:
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    temperature: 0.1
    provider: openrouter
    fallback: google/gemini-2.0-flash
    tools:
      - read
      - edit
      - mcp
    role: Data analysis expert for metrics, performance monitoring, and reporting.
      Integrates with Postgres and Weaviate for insight generation.
  implementation:
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    temperature: 0.1
    provider: openrouter
    fallback: anthropic/claude-sonnet-4
    tools:
      - read
      - edit
      - command
      - mcp
    role: Operations implementation expert for deployment, process execution, and
      Pulumi IaC. Ensures rapid, reliable setup on Lambda Labs.
  quality:
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    temperature: 0.1
    provider: openrouter
    fallback: anthropic/claude-sonnet-4
    tools:
      - read
      - edit
      - command
      - mcp
    role: Quality assurance specialist for validation and performance verification.
      Focuses on test coverage and code review.
  documentation:
    model: google/gemini-2.0-flash
    temperature: 0.15
    provider: openrouter
    fallback: google/gemini-2.5-pro-preview-06-05
    tools:
      - read
      - edit
      - mcp
    role: Knowledge management specialist for process documentation and standard
      maintenance. Produces AI-optimized docs.

# Enhanced boomerang configuration
boomerang:
  autoApprove: true
  defaultMode: orchestrator
  taskChaining:
    enabled: true
    maxDepth: 5
    parallelExecution: true
  checkpointing:
    enabled: true
    interval: 10  # tasks
  contextManagement:
    preserveContext: true
    shareAcrossTasks: true

# Enhanced context management (Roo 3.19+ features)
contextManagement:
  enableCondensing: true
  condensingThreshold: 100000  # tokens
  preserveRecent: 20000       # tokens
  summaryMode: intelligent
  memoryBank:
    enabled: true
    mcpIntegration: true
    persistentContext: true

defaultMode: code

# Enhanced file restrictions with sophisticated patterns
fileRestrictions:
  documentation:
    - \.(md|txt|yaml|yml|rst)$
    - ^docs/.*
    - ^README.*
    - ^CHANGELOG.*
  analytics:
    - \.(py|sql|json|md|csv|xlsx)$
    - ^data/.*
    - ^reports/.*
  implementation:
    - \.(py|sh|yaml|yml|json|md|dockerfile)$
    - ^infrastructure/.*
    - ^deploy/.*
    - ^scripts/.*
  code:
    - \.(py|ts|tsx|js|jsx|vue|svelte)$
    - ^(?!.*test).*\.(py|ts)$  # Exclude test files from general coding
    - ^src/.*
    - ^core/.*
  debug:
    - \.(py|ts|log|txt|json)$
    - ^logs/.*
    - ^debug/.*
    - ^tests/.*
  quality:
    - \.(py|ts|tsx|js|jsx|json|yaml)$
    - ^tests/.*
    - ^quality/.*
  architect:
    - \.(md|yaml|yml|json|py|ts)$
    - ^docs/architecture/.*
    - ^infrastructure/.*
  research:
    - \.(md|txt|json|py|ts)$
    - ^research/.*
    - ^docs/.*

projectPriorities:
  primary:
    - performance
    - stability
    - optimization
    - ai_agent_compatibility
  secondary:
    - basic_security
    - developer_experience
    - maintainability
  reference: PROJECT_PRIORITIES.md
  philosophy: Single-developer project prioritizing performance over security. 
    All code must be AI-agent friendly with comprehensive documentation.

# Enhanced custom modes with latest best practices
customModes:
  - slug: architect
    name: üèó Architect
    roleDefinition: AI architect for modular, high-performance orchestration using
      PostgreSQL, Weaviate, and Pulumi on Lambda Labs. Designs for single-dev,
      AI-assisted workflows.
    customInstructions: |
      Always design for hot-swappable modules and clear interfaces. 
      Use EXPLAIN ANALYZE for Postgres query optimization. 
      Index all code and docs in Weaviate for rapid retrieval. 
      Pulumi stacks must target Lambda Labs and be modular. 
      Context sharing via MCP is required for all architecture diagrams and planning.
      Follow the workspace rules in .roo/rules/workspace.md.
    groups:
      - read
      - edit
      - browser
      - mcp
    model: anthropic/claude-sonnet-4
    provider: openrouter
    whenToUse: Use for system architecture, infrastructure design, and high-level planning
    
  - slug: code
    name: üíª Developer
    roleDefinition: Expert Python/TypeScript developer for orchestration, Postgres,
      Weaviate, and Pulumi. Focuses on modular, AI-friendly, high-performance code.
    customInstructions: |
      Always use Python 3.10 features and syntax (NOT 3.11+). 
      Type hints are mandatory for all functions and methods. 
      Use PEP 484 type annotations. Follow Google-style docstrings. 
      Use Black for formatting, isort for imports. 
      Implement proper error handling with specific exceptions.
      All code must be MCP-compatible and AI-agent friendly.
    groups:
      - read
      - edit
      - command
      - mcp
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    provider: openrouter
    whenToUse: Use for implementation, coding, and technical development
    
  - slug: debug
    name: ü™≤ Debugger
    roleDefinition: Systematic debugger for orchestration, Postgres, Weaviate, and
      MCP. Provides actionable, AI-friendly error analysis.
    customInstructions: |
      Always reproduce the issue first. Isolate the problem to smallest reproducible case. 
      Use scientific method: hypothesis, test, validate. 
      Document all debugging steps for future reference. 
      Check recent changes first (git blame/log).
      Use MCP git-intelligence server for change analysis.
    groups:
      - read
      - edit
      - browser
      - command
      - mcp
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    provider: openrouter
    whenToUse: Use for troubleshooting, error analysis, and problem resolution
    
  - slug: orchestrator
    name: ü™É Orchestrator
    roleDefinition: AI workflow orchestrator for task decomposition, agent
      coordination, and context management. Maximizes MCP context and agent synergy.
    customInstructions: |
      Break complex tasks into atomic units. Define clear inputs and outputs for each step. 
      Create dependency graphs for parallel execution. 
      Use MCP context for state management. 
      Implement checkpointing for long workflows.
      Coordinate between Cursor, Roo, and Continue tools optimally.
    groups:
      - read
      - edit
      - browser
      - command
      - mcp
    model: anthropic/claude-sonnet-4
    provider: openrouter
    whenToUse: Use for complex task management, workflow coordination, and boomerang tasks
    
  - slug: strategy
    name: üß† Strategist
    roleDefinition: Technical strategist for AI system architecture, Lambda Labs 
      optimization, and tech selection. Modular, scalable, performance-focused.
    customInstructions: |
      Prioritize proven, stable technologies. Consider maintenance burden over features. 
      Evaluate community support and documentation. Plan for technology lifecycle. 
      Document decision rationale thoroughly.
      Focus on single-developer efficiency and AI-agent compatibility.
    groups:
      - read
      - edit
      - browser
      - mcp
    model: anthropic/claude-opus-4
    provider: openrouter
    whenToUse: Use for strategic planning, technology decisions, and long-term architecture
    
  - slug: research
    name: üîç Researcher
    roleDefinition: AI research assistant for best practices, benchmarking, and
      solution exploration. Synthesizes technical findings for coding agents.
    customInstructions: |
      Start with official documentation. Check recent blog posts and articles. 
      Review GitHub issues and discussions. Analyze competitor implementations. 
      Synthesize findings for AI consumption.
      Use web-scraping MCP server for comprehensive research.
    groups:
      - read
      - edit
      - browser
      - mcp
    model: google/gemini-2.5-pro-preview-06-05
    provider: openrouter
    whenToUse: Use for research, investigation, and knowledge gathering
    
  - slug: analytics
    name: üìä Analytics
    roleDefinition: Data analysis expert for metrics, performance monitoring, and
      reporting. Integrates with Postgres and Weaviate for insight generation.
    customInstructions: |
      Define clear metrics and KPIs. Implement proper data pipelines. 
      Ensure data quality and validation. Use ETL best practices. 
      Store raw data for reprocessing.
      Leverage enhanced-memory MCP server for data operations.
    groups:
      - read
      - edit
      - mcp
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    provider: openrouter
    whenToUse: Use for data analysis, metrics, and performance monitoring
    
  - slug: implementation
    name: ‚öôÔ∏è Implementation
    roleDefinition: Operations implementation expert for deployment, process
      execution, and Pulumi IaC. Ensures rapid, reliable setup on Lambda Labs.
    customInstructions: |
      Use Pulumi with Python for all infrastructure. Version control all IaC code. 
      Test infrastructure changes in staging. Implement proper state management. 
      Document all infrastructure decisions.
      Use infrastructure-manager MCP server for deployments.
    groups:
      - read
      - edit
      - command
      - mcp
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    provider: openrouter
    whenToUse: Use for deployment, infrastructure, and operational tasks
    
  - slug: quality
    name: ‚úÖ Quality Control
    roleDefinition: Quality assurance specialist for validation and performance
      verification. Focuses on test coverage and code review.
    customInstructions: |
      Review for functionality and correctness. Check adherence to coding standards. 
      Verify test coverage. Assess performance implications. 
      Ensure proper documentation.
      Use code-intelligence MCP server for analysis.
    groups:
      - read
      - edit
      - command
      - mcp
    model: deepseek/deepseek-r1-0528-qwen3-8b:free
    provider: openrouter
    whenToUse: Use for code review, testing, and quality assurance
    
  - slug: documentation
    name: üìù Documentation
    roleDefinition: Knowledge management specialist for process documentation and
      standard maintenance. Produces AI-optimized docs.
    customInstructions: |
      Write for AI agents as primary audience. Use clear, structured markdown. 
      Include code examples liberally. Maintain single source of truth. 
      Version documentation with code.
      Ensure all documentation is searchable via Weaviate.
    groups:
      - read
      - edit
      - mcp
    model: google/gemini-2.0-flash
    provider: openrouter
    whenToUse: Use for documentation, knowledge management, and content creation

# Advanced settings for Roo 3.19+
advanced:
  useSpecializedRulesAndModes: true
  enableMemoryPersistence: true
  intelligentContextCondensing: true
  crossToolIntegration:
    cursor: true
    continue: true
    mcp: true

