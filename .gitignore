<<<<<<< HEAD
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
=======
# Security files - encrypted secrets
.secrets.*.json
*.pem
.env*
.env.local
.env.production
.env.staging

# Temporary SSH keys
/tmp/*key*
*_key
*_key.pub

# Pulumi state files (contain encrypted secrets)
pulumi/Pulumi.*.yaml

# Database files
*.db
*.sqlite
*.sqlite3

# Logs that might contain sensitive data
*.log
logs/
/var/log/

# Backup files that might contain secrets
*.backup
*.bak
*.sql
backups/

# IDE and editor files
.vscode/settings.json
.idea/
*.swp
*.swo

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
>>>>>>> 9910fc360ca9c587991443355fcdf718feffb2cc
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
share/python-wheels/
=======
>>>>>>> 9910fc360ca9c587991443355fcdf718feffb2cc
*.egg-info/
.installed.cfg
*.egg
MANIFEST
<<<<<<< HEAD

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/inspectionProfiles/profiles_settings.xml
#  - .idea/inspectionProfiles/Project_Default.xml
#  - .idea/misc.xml
#  - .idea/modules.xml
#  - .idea/scopes/scope_settings.xml
#  - .idea/vcs.xml
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/gradle.xml
#  - .idea/assetWizardSettings.xml
#  - .idea/dictionaries
#  - .idea/libraries
# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

.idea/
*.iml
*.iws

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Orchestra AI specific
logs/
*.db
.env.local
.env.production
nginx/ssl/*.key
nginx/ssl/*.crt
monitoring/data/
database/data/

# Docker
.dockerignore

# Screenshots and temporary files
screenshots/
temp/
tmp/

=======
venv/
env/
ENV/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.eslintcache

# Docker
.dockerignore
Dockerfile.local

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
kubeconfig
*.kubeconfig

# Certificate files
*.crt
*.key
*.p12
*.pfx
*.cer
*.der

# SSH and GPG keys
id_rsa
id_rsa.pub
id_ed25519
id_ed25519.pub
*.gpg
*.asc

# Process files
*.pid
run/

# Temporary and build files
*.tmp
*.temp
.cache/
.pytest_cache/
coverage/
.coverage
.nyc_output/

# Archive directories
archive/

# AI agent temporary files
*_temp.py
*_draft.py
*_backup.py
temp_*.py
draft_*.py

# One-time scripts and reports
*_one_time.sh
*_temp.sh
TEMP_*.md
DRAFT_*.md
*_BACKUP.md

.vercel
>>>>>>> 9910fc360ca9c587991443355fcdf718feffb2cc
