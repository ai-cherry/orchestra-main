[tool.poetry]
name = "orchestra-system"
version = "0.1.0"
description = "System for AI assistants to maintain real-time awareness of development resources"
authors = ["AI Orchestra Team <team@cherry-ai.me>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/cherry-ai/ai-orchestra"
packages = [{include = "orchestra_system"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5.0"
aiohttp = "^3.8.5"
fastapi = "^0.108.0"
uvicorn = "^0.23.0"
google-cloud-storage = "^2.10.0"
google-cloud-aiplatform = "^1.36.0"
pyyaml = "^6.0.1"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
flake8 = "^6.1.0"
pre-commit = "^3.3.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"