# This workflow validates the Secret Manager configuration for Orchestra.
name: Validate Secret Manager Configuration

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [main, develop]
    paths:
      - 'infra/modules/secret-manager/**'
      - 'infra/orchestra-terraform/secrets.tf'
  pull_request:
    branches: [main, develop]
    paths:
      - 'infra/modules/secret-manager/**'
      - 'infra/orchestra-terraform/secrets.tf'

jobs:
  terraform-validation:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  # Specify your desired Terraform version

      - name: Terraform Init
        working-directory: ${{ github.workspace }}/infra/orchestra-terraform
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: ${{ github.workspace }}/infra/orchestra-terraform
        run: terraform validate
        
      - name: Terraform Init Secret Manager Module
        working-directory: ${{ github.workspace }}/infra/modules/secret-manager
        run: terraform init -backend=false

      - name: Terraform Validate Secret Manager Module
        working-directory: ${{ github.workspace }}/infra/modules/secret-manager
        run: terraform validate

  environment-validation:
    name: Environment Validation
    runs-on: ubuntu-latest
    needs: terraform-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Run Environment Validation
        working-directory: ${{ github.workspace }}/infra/modules/secret-manager/validation
        run: |
          echo "Validating environment separation"
          python3 test_env_config.py

      - name: Upload Environment Validation Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: env-validation-results
          path: ${{ github.workspace }}/infra/modules/secret-manager/validation/*.log
          retention-days: 7
          if-no-files-found: ignore
          
  secret-validation:
    name: Secret Validation
    runs-on: ubuntu-latest
    needs: environment-validation

    strategy:
      matrix:
        environment: [dev, prod]
        service: [orchestra-api]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-cloud-secretmanager

      # Only run this step if GCP credentials are provided
      - name: Authenticate to Google Cloud
        id: auth
        if: ${{ env.SKIP_GCP_AUTH != 'true' }}
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up gcloud CLI
        if: steps.auth.outcome == 'success'
        uses: google-github-actions/setup-gcloud@v1

      - name: Run Secret Validation
        id: run-validation
        if: steps.auth.outcome == 'success'
        run: |
          cd infra/modules/secret-manager/validation
          chmod +x run_validation.sh
          ./run_validation.sh ${{ secrets.GCP_PROJECT_ID }} ${{ matrix.environment }} ${{ matrix.service }} | tee validation-${{ matrix.environment }}.log

      - name: Check Secret Validation Result
        if: steps.auth.outcome == 'success' && steps.run-validation.outcome == 'success'
        run: |
          echo "âœ… Secret Manager validation succeeded for ${{ matrix.environment }} environment!"

      - name: Report Secret Validation Failure
        if: steps.auth.outcome == 'success' && steps.run-validation.outcome != 'success'
        run: |
          echo "::error::Secret Manager validation failed for ${{ matrix.environment }} environment!"
          exit 1

      - name: Skip Secret Validation
        if: steps.auth.outcome != 'success'
        run: |
          echo "::warning::Skipping live Secret Manager validation because GCP authentication failed or was skipped"
          echo "To enable live validation, add GCP_SA_KEY and GCP_PROJECT_ID secrets to your GitHub repository"

      - name: Upload Secret Validation Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: secret-validation-${{ matrix.environment }}
          path: ${{ github.workspace }}/infra/modules/secret-manager/validation/validation-${{ matrix.environment }}.log
          retention-days: 7
          if-no-files-found: ignore