version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8001"
    environment:
      # Database Configuration (Docker service names)
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/cherry_ai
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/cherry_ai
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_DB: cherry_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

      # Redis Configuration (Docker service name)
      REDIS_URL: redis://redis:6379

      # Weaviate Configuration (Docker service name)
      WEAVIATE_URL: http://weaviate:8080
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: "8080"
      WEAVIATE_API_KEY: ${WEAVIATE_API_KEY:-}

      # API Configuration
      API_HOST: 0.0.0.0
      API_PORT: "8001"
      DEBUG: "false"
      ENVIRONMENT: ${cherry_ai_CONTEXT:-development}

      # Single-user auth
      cherry_ai_API_KEY: ${cherry_ai_API_KEY}
      cherry_ai_CONTEXT: ${cherry_ai_CONTEXT:-development}

      # API Keys (use environment variables if set)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      PORTKEY_API_KEY: ${PORTKEY_API_KEY:-}
      VULTR_API_KEY: ${VULTR_API_KEY:-}

      # MCP Server Configuration
      CHERRY_AI_CONDUCTOR_PORT: "8002"
      MCP_MEMORY_PORT: "8003"
      MCP_TOOLS_PORT: "8006"
      MCP_WEAVIATE_DIRECT_PORT: "8001"
      MCP_DEPLOYMENT_PORT: "8005"
    depends_on:
      - postgres
      - redis
      - weaviate
    restart: always
    volumes:
      - ./logs:/app/logs
      - ./mcp_server:/app/mcp_server:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cherry_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - postgres
      - -c
      - shared_buffers=256MB
      - -c
      - effective_cache_size=1GB
      - -c
      - maintenance_work_mem=64MB
      - -c
      - checkpoint_completion_target=0.9
      - -c
      - wal_buffers=16MB
      - -c
      - default_statistics_target=100
      - -c
      - random_page_cost=1.1
      - -c
      - effective_io_concurrency=200

  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save ""
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: semitechnologies/weaviate:latest
    ports:
      - "8080:8080"
    environment:
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready" ]
      interval: 15s
      timeout: 10s
      retries: 8

volumes:
  postgres_data:
  weaviate_data: