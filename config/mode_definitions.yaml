# AI Orchestra Mode Definitions
# This configuration defines all available modes with their optimized model assignments:
# - Gemini 2.5 Pro: architect, orchestrator, and reviewer modes
# - GPT-4.1: code and debug modes
# - Claude 3.7: strategy, ask, and creative modes

modes:
  code:
    name: "üíª Code"
    model: "gpt-4.1"
    description: "Expert Python/FastAPI developer focused on implementing features and refactoring code"
    write_access: true
    file_patterns:
      - ".*\\.py$"
      - ".*\\.js$"
      - ".*\\.ts$"
      - ".*\\.html$"
      - ".*\\.css$"
    capabilities:
      - "file_creation"
      - "file_modification"
      - "code_generation"
    token_limit: 128000
    suggested_transitions:
      - "debug (for testing)"
      - "orchestrator (for review)"

  debug:
    name: "ü™≤ Debug"
    model: "gpt-4.1"
    description: "Expert troubleshooter and debugger for the AI Orchestra project"
    write_access: true
    file_patterns:
      - ".*\\.py$"
      - ".*\\.js$"
      - ".*\\.ts$"
    capabilities:
      - "error_analysis"
      - "file_modification"
      - "logging_enhancement"
    token_limit: 128000
    suggested_transitions:
      - "code (for implementation)"
      - "orchestrator (for review)"

  architect:
    name: "üèó Architect"
    model: "gemini-2.5-pro"
    description: "Senior AI/Cloud architect specializing in multi-agent systems and GCP infrastructure"
    write_access: true
    file_patterns:
      - ".*\\.md$"
      - "infrastructure/.*\\.yaml$"
      - "config/.*\\.yaml$"
      - "docs/.*"
    capabilities:
      - "system_design"
      - "architectural_planning"
      - "documentation_creation"
    token_limit: 1000000
    suggested_transitions:
      - "code (for implementation)"
      - "strategy (for planning)"

  orchestrator:
    name: "ü™É Orchestrator"
    model: "gemini-2.5-pro"
    description: "Meticulous code reviewer and static analysis expert"
    write_access: true
    file_patterns:
      - ".*\\.py$"
      - ".*\\.md$"
      - ".*\\.json$"
    capabilities:
      - "code_review"
      - "static_analysis"
      - "bug_detection"
      - "security_scanning"
    token_limit: 1000000
    suggested_transitions:
      - "code (for implementation)"
      - "debug (for testing)"

  reviewer:
    name: "üïµÔ∏è Reviewer"
    model: "gemini-2.5-pro"
    description: "Meticulous code reviewer and software quality analyst"
    write_access: true
    file_patterns:
      - ".*\\.md$"
      - "docs/.*"
      - "README.*"
    capabilities:
      - "quality_analysis"
      - "documentation_review"
      - "compliance_checking"
    token_limit: 1000000
    suggested_transitions:
      - "creative (for documentation)"
      - "orchestrator (for technical review)"

  strategy:
    name: "üß† Strategy"
    model: "claude-4"
    description: "Senior technical strategist and planner specialized in AI systems architecture"
    write_access: true
    file_patterns:
      - ".*\\.md$"
      - "docs/strategy/.*"
      - "roadmap/.*"
    capabilities:
      - "technical_planning"
      - "roadmapping"
      - "risk_analysis"
      - "dependency_planning"
    token_limit: 200000
    suggested_transitions:
      - "architect (for system design)"
      - "creative (for documentation)"

  ask:
    name: "‚ùì Ask"
    model: "claude-4"
    description: "Research assistant with access to documentation and the internet"
    write_access: false
    capabilities:
      - "information_retrieval"
      - "documentation_search"
      - "concept_explanation"
      - "best_practice_recommendations"
    token_limit: 100000
    suggested_transitions:
      - "creative (for documentation)"
      - "code (for implementation)"

  creative:
    name: "üé® Creative"
    model: "claude-4"
    description: "Technical writer and creative communicator"
    write_access: true # Enhanced to allow documentation creation
    file_patterns:
      - ".*\\.md$"
      - "docs/.*"
      - "README.*"
    capabilities:
      - "technical_writing"
      - "documentation_creation"
      - "diagram_generation"
      - "API_documentation"
      - "user_guide_creation"
    token_limit: 100000
    suggested_transitions:
      - "ask (for research)"
      - "orchestrator (for technical review)"

# Workflow definitions for common development patterns
workflows:
  feature_development:
    name: "Feature Development Workflow"
    description: "Complete workflow for developing new features"
    steps:
      - mode: "strategy"
        task: "Plan feature implementation, identify dependencies and risks"
      - mode: "architect"
        task: "Design system components and integration points"
      - mode: "code"
        task: "Implement the feature based on the architecture"
      - mode: "orchestrator"
        task: "Review the implementation for quality and standards"
      - mode: "debug"
        task: "Test and fix any issues"
      - mode: "creative"
        task: "Update documentation"

  bugfix:
    name: "Bug Fix Workflow"
    description: "Streamlined workflow for fixing bugs"
    steps:
      - mode: "debug"
        task: "Analyze and diagnose the issue"
      - mode: "code"
        task: "Implement the fix"
      - mode: "orchestrator"
        task: "Review the fix for quality and unintended consequences"

  refactoring:
    name: "Code Refactoring Workflow"
    description: "Structured approach to code refactoring"
    steps:
      - mode: "orchestrator"
        task: "Analyze code for refactoring opportunities"
      - mode: "architect"
        task: "Design improved architecture for the refactored code"
      - mode: "code"
        task: "Implement the refactoring"
      - mode: "debug"
        task: "Test and verify refactored code"
      - mode: "creative"
        task: "Update documentation to reflect changes"

  security_audit:
    name: "Security Audit Workflow"
    description: "Comprehensive security review process"
    steps:
      - mode: "orchestrator"
        task: "Perform static analysis and security scanning"
      - mode: "debug"
        task: "Verify vulnerable components and test exploitability"
      - mode: "code"
        task: "Implement security fixes"
      - mode: "reviewer"
        task: "Validate fixes and document security improvements"
