# Cloud Build configuration for deploying to Cloud Run and syncing hybrid IDE environments

steps:
  # 1. Ensure asdf-managed tools are available
  - name: "gcr.io/cloud-builders/git"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if ! command -v asdf &>/dev/null; then
          git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
          . "/root/.asdf/asdf.sh"
        fi
        asdf plugin add python || true
        asdf plugin add poetry || true
        asdf plugin add terraform || true
        asdf plugin add nodejs || true
        asdf install --all

  # 2. Install Python dependencies with Poetry
  - name: "python:3.11"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        pip install poetry==1.8.2
        poetry install --no-root

  # 3. Run pre-commit checks
  - name: "python:3.11"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        pip install pre-commit
        pre-commit run --all-files

  # 4. Build Docker image for Cloud Run
  - name: "gcr.io/cloud-builders/docker"
    args:
      - build
      - "-f"
      - docker/Dockerfile.app
      - "-t"
      - "gcr.io/$PROJECT_ID/orchestra-system:$COMMIT_SHA"
      - .

  # 5. Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - run
      - deploy
      - orchestra-system
      - --image=gcr.io/$PROJECT_ID/orchestra-system:$COMMIT_SHA
      - --region=us-central1
      - --platform=managed
      - --allow-unauthenticated
      - --set-env-vars=GOOGLE_APPLICATION_CREDENTIALS=.gcp/wif.json

  # 6. (Optional) Sync IDE environment or run additional setup scripts
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Syncing hybrid IDE environment..."
        # Add any additional sync or setup steps here

images:
  - "gcr.io/$PROJECT_ID/orchestra-system:$COMMIT_SHA"

timeout: 1800s

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
  env:
    - "PYTHONUNBUFFERED=1"

serviceAccount: "projects/525398941159/serviceAccounts/vertex-agent@cherry-ai.me.iam.gserviceaccount.com"

artifacts:
  objects:
    location: "gs://cherry-ai-me-cloudbuild-artifacts/"
    paths: ["scan-results.json"]
