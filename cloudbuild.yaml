# Cloud Build configuration for deploying to Cloud Run and syncing hybrid IDE environments

steps:
  # 1. Ensure asdf-managed tools are available
  - name: "gcr.io/cloud-builders/git"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if ! command -v asdf &>/dev/null; then
          git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
          . "/root/.asdf/asdf.sh"
        fi
        asdf plugin add python || true
        asdf plugin add poetry || true
        asdf plugin add terraform || true
        asdf plugin add nodejs || true
        asdf install --all

  # 2. Install Python dependencies with Poetry
  - name: "python:3.11"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        pip install poetry==1.8.2
        poetry install --no-root

  # 3. Run pre-commit checks
  - name: "python:3.11"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        pip install pre-commit
        pre-commit run --all-files

  # 4. Build Docker image for Cloud Run
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args: [
      'build',
      '-t', 'us-central1-docker.pkg.dev/cherry-ai-project/orchestra-images/orchestra-main:$COMMIT_SHA',
      '.'
    ]

  # 5. Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args: [
      'push',
      'us-central1-docker.pkg.dev/cherry-ai-project/orchestra-images/orchestra-main:$COMMIT_SHA'
    ]

  # 6. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'orchestra-main-service'
      - '--image=us-central1-docker.pkg.dev/cherry-ai-project/orchestra-images/orchestra-main:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-secrets=OPENAI_API_KEY=projects/cherry-ai-project/secrets/OPENAI_API_KEY:latest,PORTKEY_API_KEY=projects/cherry-ai-project/secrets/PORTKEY_API_KEY:latest,PERPLEXITY_API_KEY=projects/cherry-ai-project/secrets/PERPLEXITY_API_KEY:latest,ANTHROPIC_API_KEY=projects/cherry-ai-project/secrets/ANTHROPIC_API_KEY:latest,GOOGLE_API_KEY=projects/cherry-ai-project/secrets/GOOGLE_API_KEY:latest,VERTEX_API_KEY=projects/cherry-ai-project/secrets/VERTEX_API_KEY:latest,GITHUB_TOKEN=projects/cherry-ai-project/secrets/GITHUB_TOKEN:latest,SLACK_BOT_TOKEN=projects/cherry-ai-project/secrets/SLACK_BOT_TOKEN:latest,REDIS_PASSWORD=projects/cherry-ai-project/secrets/REDIS_PASSWORD:latest,DATABASE_URL=projects/cherry-ai-project/secrets/DATABASE_URL:latest'

images:
  - 'us-central1-docker.pkg.dev/cherry-ai-project/orchestra-images/orchestra-main:$COMMIT_SHA'

timeout: 1800s

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
  env:
    - "PYTHONUNBUFFERED=1"

serviceAccount: "projects/525398941159/serviceAccounts/vertex-agent@cherry-ai.me.iam.gserviceaccount.com"

artifacts:
  objects:
    location: "gs://cherry-ai-me-cloudbuild-artifacts/"
    paths: ["scan-results.json"]
