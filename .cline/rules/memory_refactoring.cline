# Rule to flag imports of the legacy Firestore memory implementation
FLAG {
    pattern: "from packages\\.shared\\.src\\.storage\\.firestore\\.firestore_memory import .*"
    description: "AVOID: Legacy Firestore Memory V1 detected. Prefer using the V2 adapter from 'packages/firestore/v2/adapter.py'."
    severity: WARNING
}

# Rule to flag direct usage of the old FirestoreMemory class
FLAG {
    pattern: "FirestoreMemory\(" # Be careful with patterns, make specific
    file_pattern: "**/*.py" # Apply only to Python files
    exclude_pattern: "**/packages/shared/src/storage/firestore/firestore_memory.py|**/future/firestore_memory_manager.py" # Exclude the definitions themselves
    description: "AVOID: Direct instantiation of legacy FirestoreMemory V1. Use the MemoryManager interface, likely obtained via dependency injection configured for V2."
    severity: WARNING
}

# Rule encouraging use of the V2 Memory Adapter Interface (Hypothetical Interface Name)
FLAG {
    pattern: "def (.*)\(.*\memory: (?!\s*FirestoreMemoryV2Adapter|MemoryManager).*\):" # Regex might need refinement - checks type hint ISN'T V2 or base
    file_pattern: "**/core/**/*.py" # Focus on core logic using memory
    description: "INFO: Consider type-hinting memory dependencies with the base MemoryManager or the specific V2 Adapter interface for clarity and consistency."
    severity: INFO
}
