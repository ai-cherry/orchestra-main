# Optimized Multi-stage build for Orchestra AI Backend
# Based on optimal IaC workflow architecture recommendations

# Build stage - Install dependencies and build artifacts
FROM python:3.11-slim AS builder

# Set build arguments for optimization
ARG BUILDKIT_INLINE_CACHE=1

# Set working directory
WORKDIR /app

# Install build dependencies in a single layer with pinned versions
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc=4:11.2.0-1ubuntu1 \
    g++=4:11.2.0-1ubuntu1 \
    libpq-dev=14.12-0ubuntu0.22.04.1 \
    libffi-dev=3.4.2-4 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for optimal layer caching
COPY requirements.txt .

# Install Python dependencies with optimization flags
RUN pip install --no-cache-dir --user --compile \
    --global-option=build_ext \
    --global-option=-j4 \
    -r requirements.txt

# Copy source code for any build steps
COPY . .

# Production stage - Minimal runtime image
FROM python:3.11-slim AS production

# Set production labels for metadata
LABEL maintainer="Orchestra AI Team"
LABEL version="2.0"
LABEL description="Orchestra AI Backend - Optimized Production Build"

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user with specific UID/GID for security
RUN groupadd -r -g 1001 orchestra && \
    useradd -r -u 1001 -g orchestra -m -d /home/orchestra orchestra

# Set working directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder --chown=orchestra:orchestra /root/.local /home/orchestra/.local

# Copy application code with proper ownership
COPY --chown=orchestra:orchestra . .

# Set optimized environment variables
ENV PATH=/home/orchestra/.local/bin:$PATH \
    PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/tmp && \
    chown -R orchestra:orchestra /app

# Switch to non-root user for security
USER orchestra

# Enhanced health check with better error handling
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Optimized startup command with production settings
CMD ["uvicorn", "production_api:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "4", \
     "--worker-class", "uvicorn.workers.UvicornWorker", \
     "--access-log", \
     "--log-level", "info", \
     "--timeout-keep-alive", "5"]

