{
  "timestamp": "2025-06-05T01:24:23.747888",
  "critical_issues": [
    {
      "type": "hardcoded_value",
      "file": "fixed_main_app.py",
      "line": 67,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "ai_assist_v0.py",
      "line": 67,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_services.py",
      "line": 15,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "lambda_infrastructure_mcp_server.py",
      "line": 26,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "main.py",
      "line": 61,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "deploy/superagi_config.py",
      "line": 22,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "deploy/superagi_config.py",
      "line": 23,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "deploy/superagi_config.py",
      "line": 24,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "line": 683,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_resilience.py",
      "line": 52,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_resilience.py",
      "line": 118,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_resilience.py",
      "line": 250,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_single_user_auth.py",
      "line": 64,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 88,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 102,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 117,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 131,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 143,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_vultr_now.py",
      "line": 13,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_simple.py",
      "line": 46,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_simple.py",
      "line": 61,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_simple.py",
      "line": 72,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_simple.py",
      "line": 84,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_redis_simple.py",
      "line": 93,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/health_check_comprehensive.py",
      "line": 55,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 273,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 515,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/vultr_manager.py",
      "line": 73,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "line": 373,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/pinecone_manager.py",
      "line": 341,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "line": 263,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/ai_coding_assistant.py",
      "line": 170,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/ai_coding_assistant.py",
      "line": 171,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/prompt_management.py",
      "line": 751,
      "severity": "critical",
      "issue": "Found hardcoded credential",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "insufficient_test_coverage",
      "severity": "critical",
      "issue": "Test coverage ratio is 17.3% (found 160 test files for 927 source files)",
      "recommendation": "Implement comprehensive test suite with >80% coverage",
      "effort": "1-2 weeks",
      "impact": "Critical for reliability and refactoring confidence"
    },
    {
      "type": "security_vulnerabilities",
      "severity": "critical",
      "issue": "Found 7 potential security issues",
      "recommendation": "Address security vulnerabilities immediately",
      "effort": "1-2 days",
      "impact": "Critical for application security",
      "details": [
        {
          "file": "technical_debt_analyzer.py",
          "issue": "Uses eval() - security risk"
        },
        {
          "file": "core/security/postgresql_secrets.py",
          "issue": "Potential SQL injection - use parameterized queries"
        },
        {
          "file": "core/conductor/src/agents/examples/agent_usage_example.py",
          "issue": "Uses eval() - security risk"
        },
        {
          "file": "scripts/comprehensive_codebase_audit.py",
          "issue": "Uses eval() - security risk"
        },
        {
          "file": "scripts/fix_critical_backend_issues.py",
          "issue": "Uses eval() - security risk"
        },
        {
          "file": "scripts/comprehensive_backend_audit.py",
          "issue": "Uses eval() - security risk"
        },
        {
          "file": "mcp_server/demo_memory_sync.py",
          "issue": "Uses eval() - security risk"
        }
      ]
    }
  ],
  "high_priority": [
    {
      "type": "high_complexity",
      "file": "fix_corrupted_python_files.py",
      "function": "fix_file",
      "severity": "high",
      "issue": "Cyclomatic complexity is 25 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "analyze_critical_issues.py",
      "function": "analyze_audit_report",
      "severity": "high",
      "issue": "Cyclomatic complexity is 19 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "god_class",
      "file": "technical_debt_analyzer.py",
      "class": "TechnicalDebtAnalyzer",
      "severity": "high",
      "issue": "Class has 21 methods (max recommended: 20)",
      "recommendation": "Apply Single Responsibility Principle - split into focused classes",
      "effort": "1-2 days",
      "impact": "Significantly improves maintainability and testability"
    },
    {
      "type": "high_complexity",
      "file": "fix_formatting_issues.py",
      "function": "fix_long_lines_python",
      "severity": "high",
      "issue": "Cyclomatic complexity is 19 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "fix_formatting_issues.py",
      "function": "process_formatting_issues",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "code_audit_scanner.py",
      "function": "_check_python_style",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "verify_cherry_ai_setup.py",
      "function": "generate_summary_report",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "methodical_restoration_strategy.py",
      "function": "_analyze_structure",
      "severity": "high",
      "issue": "Cyclomatic complexity is 20 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "intelligent_code_restoration.py",
      "function": "analyze_corruption_patterns",
      "severity": "high",
      "issue": "Cyclomatic complexity is 16 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "intelligent_code_restoration.py",
      "function": "_restore_import_order",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "final_cleanup_organizer.py",
      "function": "organize_audit_files",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "diagnose_indentation_errors.py",
      "function": "diagnose_file",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "god_class",
      "file": "cleanup_codebase.py",
      "class": "CodebaseCleanup",
      "severity": "high",
      "issue": "Class has 23 methods (max recommended: 20)",
      "recommendation": "Apply Single Responsibility Principle - split into focused classes",
      "effort": "1-2 days",
      "impact": "Significantly improves maintainability and testability"
    },
    {
      "type": "high_complexity",
      "file": "fix_python_indentation.py",
      "function": "analyze_indentation_pattern",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "core/redis/monitoring.py",
      "function": "check_health",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "core/utils/stability.py",
      "function": "retry_with_backoff",
      "severity": "high",
      "issue": "Cyclomatic complexity is 16 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "core/utils/stability.py",
      "function": "decorator",
      "severity": "high",
      "issue": "Cyclomatic complexity is 16 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "core/conductor/src/tools/registry.py",
      "function": "export_to_markdown",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "core/services/mcp_config_manager.py",
      "function": "_load_all_configs_from_file",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/validate_api_consistency.py",
      "function": "_validate_endpoint_definitions",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/system_monitor.py",
      "function": "run",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/consolidate_duplicate_endpoints.py",
      "function": "_comment_out_endpoint",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/deploy_cherry_ai_final.py",
      "function": "main",
      "severity": "high",
      "issue": "Cyclomatic complexity is 15 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/deploy_single_user_auth.py",
      "function": "update_environment",
      "severity": "high",
      "issue": "Cyclomatic complexity is 16 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/persona_config_consolidator.py",
      "function": "analyze_existing_configurations",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/persona_config_consolidator.py",
      "function": "merge_persona_configs",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/cherry_ai_deployment_status.py",
      "function": "main",
      "severity": "high",
      "issue": "Cyclomatic complexity is 20 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/setup_production_config.py",
      "function": "update_env_file",
      "severity": "high",
      "issue": "Cyclomatic complexity is 17 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/config_audit.py",
      "function": "find_config_files",
      "severity": "high",
      "issue": "Cyclomatic complexity is 24 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/config_audit.py",
      "function": "_check_env_security",
      "severity": "high",
      "issue": "Cyclomatic complexity is 15 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/analyze_critical_issues.py",
      "function": "analyze_critical_issues",
      "severity": "high",
      "issue": "Cyclomatic complexity is 14 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/refactor_naming_conventions.py",
      "function": "_update_mcp_config",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/fix_model_syntax.py",
      "function": "_fix_indentation_errors",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "god_class",
      "file": "scripts/database_schema_validator.py",
      "class": "DatabaseSchemaValidator",
      "severity": "high",
      "issue": "Class has 22 methods (max recommended: 20)",
      "recommendation": "Apply Single Responsibility Principle - split into focused classes",
      "effort": "1-2 days",
      "impact": "Significantly improves maintainability and testability"
    },
    {
      "type": "high_complexity",
      "file": "scripts/database_schema_validator.py",
      "function": "find_database_files",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/database_schema_validator.py",
      "function": "generate_report",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/fix_critical_backend_issues.py",
      "function": "fix_dangerous_functions",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/setup_vultr_deployment.py",
      "function": "setup_vultr_api_key",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/comprehensive_backend_audit.py",
      "function": "analyze_ast",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/test_redis_simple.py",
      "function": "test_redis_connection",
      "severity": "high",
      "issue": "Cyclomatic complexity is 14 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/mcp_database_audit_simple.py",
      "function": "check_code_structure",
      "severity": "high",
      "issue": "Cyclomatic complexity is 19 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "god_class",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "class": "MCPInfrastructureAuditor",
      "severity": "high",
      "issue": "Class has 22 methods (max recommended: 20)",
      "recommendation": "Apply Single Responsibility Principle - split into focused classes",
      "effort": "1-2 days",
      "impact": "Significantly improves maintainability and testability"
    },
    {
      "type": "high_complexity",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_configuration",
      "severity": "high",
      "issue": "Cyclomatic complexity is 14 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_performance",
      "severity": "high",
      "issue": "Cyclomatic complexity is 13 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_deployment",
      "severity": "high",
      "issue": "Cyclomatic complexity is 12 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/check_syntax.py",
      "function": "check_syntax",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "scripts/testing_validation_cleaner.py",
      "function": "_is_test_file_broken",
      "severity": "high",
      "issue": "Cyclomatic complexity is 15 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "infrastructure/entity_resolution/fuzzy_matcher.py",
      "function": "composite_similarity",
      "severity": "high",
      "issue": "Cyclomatic complexity is 15 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "infrastructure/entity_resolution/fuzzy_matcher.py",
      "function": "_resolve_field_conflict",
      "severity": "high",
      "issue": "Cyclomatic complexity is 11 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "high_complexity",
      "file": "mcp_server/servers/memory_server.py",
      "function": "setup_handlers",
      "severity": "high",
      "issue": "Cyclomatic complexity is 26 (max recommended: 10)",
      "recommendation": "Simplify logic, extract methods, use early returns",
      "effort": "4-8 hours",
      "impact": "Significantly improves maintainability and reduces bugs"
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 2 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "cherry_ai_live_collaboration_bridge.py",
        "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py"
      ]
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 2 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "deploy_collaboration_bridge.py",
        "cherry_collab_deploy/deploy_collaboration_bridge.py"
      ]
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 22 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "optional_integrations.py",
        "tools/llm_test_server/__init__.py",
        "core/memory/implementations/__init__.py",
        "core/memory/implementations/storage/__init__.py",
        "core/persistency/__init__.py",
        "core/conductor/src/tools/implementations/__init__.py",
        "core/conductor/src/personas/__init__.py",
        "core/conductor/src/api/__init__.py",
        "core/conductor/src/api/endpoints/__init__.py",
        "core/conductor/src/api/dependencies/__init__.py",
        "tests/__init__.py",
        "tests/mocks/memory_stub.py",
        "tests/api/__init__.py",
        "packages/llm/__init__.py",
        "packages/llm/src/__init__.py",
        "packages/agents/runtime/security/__init__.py",
        "packages/agents/src/__init__.py",
        "mcp_server/tools/__init__.py",
        "mcp_server/managers/__init__.py",
        "mcp_server/workflows/__init__.py",
        "mcp_server/storage/__init__.py",
        "mcp_server/interfaces/__init__.py"
      ]
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 18 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "tools/__init__.py",
        "core/__init__.py",
        "core/database/__init__.py",
        "core/shared/__init__.py",
        ".roo/__init__.py",
        ".roo/scripts/__init__.py",
        "ai_components/__init__.py",
        "ai_components/design/__init__.py",
        "ai_components/github_copilot/__init__.py",
        "ai_components/coordination/__init__.py",
        "ai_components/claude/__init__.py",
        "ai_components/agents/__init__.py",
        "ai_components/eigencode/__init__.py",
        "ai_components/cursor_ai/__init__.py",
        ".factory/__init__.py",
        "mcp_server/utils/__init__.py",
        "mcp_server/monitoring/__init__.py",
        "mcp_server/servers/__init__.py"
      ]
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 27 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "core/agents/__init__.py",
        "core/conductor/__init__.py",
        "core/conductor/src/__init__.py",
        "core/conductor/src/config/__init__.py",
        "tests/mocks/__init__.py",
        "tests/core/__init__.py",
        "tests/core/orchestrator/__init__.py",
        "tests/core/orchestrator/api/__init__.py",
        "tests/packages/__init__.py",
        "tests/packages/agents/phidata/__init__.py",
        "tests/packages/shared/portkey/__init__.py",
        "intelligent_search/__init__.py",
        "intelligent_search/search_api/src/__init__.py",
        "intelligent_search/search_api/src/routes/__init__.py",
        "shared/memory/__init__.py",
        "shared/models/__init__.py",
        "packages/agents/__init__.py",
        "packages/agents/runtime/__init__.py",
        "packages/agents/hobby/__init__.py",
        "packages/agents/builder/__init__.py",
        "packages/agents/src/phidata/__init__.py",
        "packages/shared/__init__.py",
        "packages/shared/src/__init__.py",
        "packages/shared/src/portkey/__init__.py",
        "infrastructure/database_layer/__init__.py",
        "infrastructure/api_integrations/__init__.py",
        "infrastructure/entity_resolution/__init__.py"
      ]
    },
    {
      "type": "duplicate_files",
      "severity": "high",
      "issue": "Found 2 identical files",
      "recommendation": "Remove duplicates or extract to shared module",
      "effort": "1-2 hours",
      "impact": "Reduces maintenance burden",
      "files": [
        "mcp_server/mcp_server_runner.py",
        "mcp_server/main.py"
      ]
    },
    {
      "type": "poor_error_handling",
      "severity": "high",
      "issue": "Found 87 bare except clauses",
      "recommendation": "Use specific exception types and proper error handling",
      "effort": "4-8 hours",
      "impact": "Prevents silent failures and improves debugging"
    }
  ],
  "medium_priority": [
    {
      "type": "long_method",
      "file": "phidata_team_agent_implementation.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 153 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "phidata_team_agent_implementation.py",
      "function": "_init_member_tools",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "fixed_main_app.py",
      "line": 77,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "fixed_main_app.py",
      "line": 246,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "fixed_main_app.py",
      "line": 266,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "fixed_main_app.py",
      "line": 336,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_smart_router.py",
      "line": 135,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_smart_router.py",
      "line": 142,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_smart_router.py",
      "line": 189,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cursor_live_client.py",
      "line": 8,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "migration_orchestrator.py",
      "function": "phase_1_foundation_cleanup",
      "severity": "medium",
      "issue": "Function has 149 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "migration_orchestrator.py",
      "function": "phase_2_core_consolidation",
      "severity": "medium",
      "issue": "Function has 71 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "migration_orchestrator.py",
      "function": "consolidate_requirements",
      "severity": "medium",
      "issue": "Function has 84 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "ai_assist_v0.py",
      "line": 23,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "ai_assist_v0.py",
      "line": 25,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "wisdom_based_restoration_framework.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 88 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "wisdom_based_restoration_framework.py",
      "function": "assess_far_reaching_implications",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "wisdom_based_restoration_framework.py",
      "function": "create_strategic_restoration_plan",
      "severity": "medium",
      "issue": "Function has 81 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "code_audit_processor.py",
      "function": "_create_batch_fix_runner",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "test_cherry_ai_integration.py",
      "function": "generate_test_report",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "cursor_collab_session.py",
      "line": 14,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "fix_corrupted_python_files.py",
      "function": "fix_file",
      "severity": "medium",
      "issue": "Function has 109 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "code_audit_summary.py",
      "function": "generate_summary",
      "severity": "medium",
      "issue": "Function has 106 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "test_services.py",
      "line": 40,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 111,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 112,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 113,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 191,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 244,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 262,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 281,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 300,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 318,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 359,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 382,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "test_system_integration.py",
      "line": 493,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "analyze_critical_issues.py",
      "function": "analyze_audit_report",
      "severity": "medium",
      "issue": "Function has 124 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "cursor_live_client_enhanced.py",
      "line": 22,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "line": 35,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "line": 36,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "line": 45,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "line": 74,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "line": 85,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "technical_debt_analyzer.py",
      "function": "_check_code_smells",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "test_claude_api.py",
      "line": 36,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "deploy_collaboration_bridge.py",
      "function": "deploy_cherry_ai_interface",
      "severity": "medium",
      "issue": "Function has 110 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "fix_formatting_issues.py",
      "function": "fix_long_lines_python",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "fix_formatting_issues.py",
      "function": "process_formatting_issues",
      "severity": "medium",
      "issue": "Function has 74 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "lambda_infrastructure_mcp_server.py",
      "function": "register_tools",
      "severity": "medium",
      "issue": "Function has 106 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "lambda_infrastructure_mcp_server.py",
      "line": 27,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "lambda_infrastructure_mcp_server.py",
      "line": 28,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "lambda_infrastructure_mcp_server.py",
      "line": 222,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "lambda_infrastructure_mcp_server.py",
      "line": 229,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "cleanup_corrupted_files.py",
      "function": "cleanup_files",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "code_audit_scanner.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 51 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "verify_cherry_ai_setup.py",
      "function": "check_devcontainer_configuration",
      "severity": "medium",
      "issue": "Function has 51 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "verify_cherry_ai_setup.py",
      "line": 110,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "methodical_restoration_strategy.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 73 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "methodical_restoration_strategy.py",
      "function": "deliberate_analysis",
      "severity": "medium",
      "issue": "Function has 75 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "methodical_restoration_strategy.py",
      "function": "_analyze_structure",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "methodical_restoration_strategy.py",
      "function": "_check_version_history",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "intelligent_code_restoration.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 71 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "intelligent_code_restoration.py",
      "function": "analyze_corruption_patterns",
      "severity": "medium",
      "issue": "Function has 65 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "manus_live_collaboration_client.py",
      "line": 15,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "main.py",
      "line": 70,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "main.py",
      "line": 263,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "final_cleanup_organizer.py",
      "function": "organize_audit_files",
      "severity": "medium",
      "issue": "Function has 121 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface.py",
      "line": 38,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface.py",
      "line": 39,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface.py",
      "line": 304,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "diagnose_indentation_errors.py",
      "function": "diagnose_file",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "ai_context_coder.py",
      "line": 88,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface_unified.py",
      "line": 38,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface_unified.py",
      "line": 39,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface_unified.py",
      "line": 128,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface_unified.py",
      "line": 135,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_interface_unified.py",
      "line": 417,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "cleanup_codebase.py",
      "function": "generate_cleanup_report",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "cleanup_codebase.py",
      "line": 423,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "fix_python_indentation.py",
      "function": "fix_critical_directories",
      "severity": "medium",
      "issue": "Function has 59 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "ai_assist.py",
      "line": 20,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "main_app.py",
      "line": 132,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infra/__main__.py",
      "line": 10,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "core/redis/resilient_client.py",
      "function": "redis_cache",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_parameter_list",
      "file": "core/redis/resilient_client.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 11 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_method",
      "file": "core/redis/resilient_client.py",
      "function": "decorator",
      "severity": "medium",
      "issue": "Function has 53 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/redis/monitoring.py",
      "function": "check_health",
      "severity": "medium",
      "issue": "Function has 114 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/redis/__init__.py",
      "function": "setup_redis",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/utils/stability.py",
      "function": "retry_with_backoff",
      "severity": "medium",
      "issue": "Function has 97 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_parameter_list",
      "file": "core/utils/stability.py",
      "function": "retry_with_backoff",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_method",
      "file": "core/utils/stability.py",
      "function": "safe_operation",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/utils/stability.py",
      "function": "decorator",
      "severity": "medium",
      "issue": "Function has 84 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/utils/performance.py",
      "function": "cached",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/utils/performance.py",
      "function": "decorator",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "core/conductor/src/tools/registry.py",
      "function": "_load_builtin_tools",
      "severity": "medium",
      "issue": "Function has 302 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "core/services/mcp_config_manager.py",
      "line": 177,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_csv_success",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_jsonl_success",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_json_success",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_unsupported_file_type",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_embedding_error",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_memory_service_store_error",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_weaviate_store_error",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_file_save_error",
      "severity": "medium",
      "issue": "Function has 7 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_parameter_list",
      "file": "tests/test_resources.py",
      "function": "test_upload_no_filename",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "hardcoded_value",
      "file": "intelligent_search/search_api/src/main.py",
      "line": 74,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "agent/app/main.py",
      "line": 413,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_parameter_list",
      "file": "shared/database/__init__.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "hardcoded_value",
      "file": "shared/database/__init__.py",
      "line": 93,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "shared/database/__init__.py",
      "line": 417,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "shared/database/__init__.py",
      "line": 426,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/integrate_redis_resilience.py",
      "function": "update_mcp_server",
      "severity": "medium",
      "issue": "Function has 98 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "function": "create_production_docker_compose",
      "severity": "medium",
      "issue": "Function has 146 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "function": "optimize_database_configs",
      "severity": "medium",
      "issue": "Function has 90 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "function": "implement_performance_optimizations",
      "severity": "medium",
      "issue": "Function has 233 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "function": "create_health_check_scripts",
      "severity": "medium",
      "issue": "Function has 247 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "line": 191,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "line": 751,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_all_syntax_errors.py",
      "function": "fix_cherry_ai_system_status",
      "severity": "medium",
      "issue": "Function has 142 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_all_syntax_errors.py",
      "function": "fix_mobile_app_integration",
      "severity": "medium",
      "issue": "Function has 357 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_all_syntax_errors.py",
      "function": "fix_auto_start_cherry_ai_roo",
      "severity": "medium",
      "issue": "Function has 165 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_all_syntax_errors.py",
      "function": "fix_cherry_ai_ai_integration",
      "severity": "medium",
      "issue": "Function has 187 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/fix_all_syntax_errors.py",
      "line": 95,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/fix_all_syntax_errors.py",
      "line": 312,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/fix_all_syntax_errors.py",
      "line": 359,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/fix_all_syntax_errors.py",
      "line": 631,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_production_infrastructure.py",
      "function": "analyze_dns",
      "severity": "medium",
      "issue": "Function has 55 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_production_infrastructure.py",
      "function": "analyze_server",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_production_infrastructure.py",
      "function": "analyze_deployment",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_production_infrastructure.py",
      "function": "create_migration_plan",
      "severity": "medium",
      "issue": "Function has 167 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_production_infrastructure.py",
      "line": 123,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_production_infrastructure.py",
      "line": 202,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_production_infrastructure.py",
      "line": 227,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_production_infrastructure.py",
      "line": 240,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/validate_api_consistency.py",
      "function": "run_validation",
      "severity": "medium",
      "issue": "Function has 61 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/validate_api_consistency.py",
      "function": "_test_endpoint_accessibility",
      "severity": "medium",
      "issue": "Function has 61 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/validate_api_consistency.py",
      "function": "_calculate_health_score",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_api_consistency.py",
      "line": 345,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_api_consistency.py",
      "line": 349,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/system_monitor.py",
      "line": 92,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/comprehensive_cleanup_orchestrator.py",
      "function": "generate_cleanup_summary_report",
      "severity": "medium",
      "issue": "Function has 84 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/validate_and_deploy_backend.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_and_deploy_backend.py",
      "line": 125,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_and_deploy_backend.py",
      "line": 146,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_and_deploy_backend.py",
      "line": 383,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_parameter_list",
      "file": "scripts/vultr_provision.py",
      "function": "create_instance",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_provision.py",
      "line": 4,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/orchestra_final_summary.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 194 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/orchestra_system_status.py",
      "line": 75,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_unified_integration.py",
      "line": 18,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/test_unified_integration.py",
      "line": 396,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/consolidate_env_vars.py",
      "function": "create_master_template",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/consolidate_env_vars.py",
      "function": "generate_consolidation_report",
      "severity": "medium",
      "issue": "Function has 66 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_cherry_ai_final.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 92 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_final.py",
      "line": 108,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_final.py",
      "line": 109,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_final.py",
      "line": 110,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/single_user_implementation_summary.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 147 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_remaining_files.py",
      "function": "create_document_parser",
      "severity": "medium",
      "issue": "Function has 102 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_remaining_files.py",
      "function": "create_zip_extractor",
      "severity": "medium",
      "issue": "Function has 59 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_remaining_files.py",
      "function": "create_operator_mode_coordinator",
      "severity": "medium",
      "issue": "Function has 67 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_remaining_files.py",
      "function": "create_operator_manager",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_remaining_files.py",
      "function": "create_agent_task_queue",
      "severity": "medium",
      "issue": "Function has 67 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/reconstruct_remaining_files.py",
      "line": 294,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/reconstruct_remaining_files.py",
      "line": 341,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/setup_admin_user.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 76 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_single_user_auth.py",
      "function": "update_environment",
      "severity": "medium",
      "issue": "Function has 67 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_single_user_auth.py",
      "function": "create_nginx_config",
      "severity": "medium",
      "issue": "Function has 64 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_single_user_auth.py",
      "function": "create_test_script",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_single_user_auth.py",
      "line": 315,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/redis_health_monitor.py",
      "function": "test",
      "severity": "medium",
      "issue": "Function has 59 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_naming_edge_cases.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 65 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/mobile_app_integration.py",
      "function": "create_mobile_api",
      "severity": "medium",
      "issue": "Function has 314 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/mobile_app_integration.py",
      "line": 147,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/mobile_app_integration.py",
      "line": 194,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/persona_config_consolidator.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 185 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/persona_config_consolidator.py",
      "function": "_create_persona_class",
      "severity": "medium",
      "issue": "Function has 254 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/persona_config_consolidator.py",
      "function": "_create_persona_manager",
      "severity": "medium",
      "issue": "Function has 76 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/final_cleanup_deliverables.py",
      "function": "generate_cleanup_summary_report",
      "severity": "medium",
      "issue": "Function has 63 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/final_cleanup_deliverables.py",
      "function": "generate_file_structure_report",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/vultr_direct_deploy.py",
      "function": "run",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_parameter_list",
      "file": "scripts/vultr_direct_deploy.py",
      "function": "create_instance",
      "severity": "medium",
      "issue": "Function has 7 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_method",
      "file": "scripts/vultr_direct_deploy.py",
      "function": "configure_instance",
      "severity": "medium",
      "issue": "Function has 61 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 30,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 148,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 149,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 150,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 151,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 152,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 153,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 154,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 155,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 177,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/vultr_direct_deploy.py",
      "line": 203,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/redis_resilience_status.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 105 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "function": "generate_deployment_summary",
      "severity": "medium",
      "issue": "Function has 130 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 12,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 49,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 50,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 51,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 52,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "line": 53,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/cherry_ai_deployment_status.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 177 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 81,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 82,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 83,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 84,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 105,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/cherry_ai_deployment_status.py",
      "line": 106,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/orchestra_intelligent_automation.py",
      "function": "_load_config",
      "severity": "medium",
      "issue": "Function has 71 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/orchestra_intelligent_automation.py",
      "line": 123,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/orchestra_intelligent_automation.py",
      "line": 129,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/orchestra_intelligent_automation.py",
      "line": 134,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/final_deployment_check.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 75 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_check.py",
      "line": 43,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_check.py",
      "line": 47,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_check.py",
      "line": 48,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_broken_imports.py",
      "function": "create_missing_modules",
      "severity": "medium",
      "issue": "Function has 55 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_cherry_ai_website.py",
      "function": "create_nginx_config",
      "severity": "medium",
      "issue": "Function has 77 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 103,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 104,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 105,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 178,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 179,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 180,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_cherry_ai_website.py",
      "line": 272,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/setup_production_config.py",
      "function": "update_env_file",
      "severity": "medium",
      "issue": "Function has 110 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/setup_production_config.py",
      "function": "create_deployment_checklist",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/setup_production_config.py",
      "line": 55,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/setup_production_config.py",
      "line": 56,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_critical_files.py",
      "function": "create_deep_search",
      "severity": "medium",
      "issue": "Function has 83 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_critical_files.py",
      "function": "create_ingestion_controller",
      "severity": "medium",
      "issue": "Function has 106 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/reconstruct_critical_files.py",
      "function": "create_api_main",
      "severity": "medium",
      "issue": "Function has 83 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/reconstruct_critical_files.py",
      "line": 405,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "large_file",
      "file": "scripts/search_engine_cleanup.py",
      "severity": "medium",
      "issue": "File has 1017 lines (recommended max: 1000)",
      "recommendation": "Split into smaller, focused modules",
      "effort": "4-8 hours",
      "impact": "Improves maintainability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/search_engine_cleanup.py",
      "function": "_create_base_search_class",
      "severity": "medium",
      "issue": "Function has 190 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/search_engine_cleanup.py",
      "function": "_create_search_module",
      "severity": "medium",
      "issue": "Function has 149 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/search_engine_cleanup.py",
      "function": "_create_search_router",
      "severity": "medium",
      "issue": "Function has 144 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/search_engine_cleanup.py",
      "function": "_create_search_utils",
      "severity": "medium",
      "issue": "Function has 174 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/search_engine_cleanup.py",
      "function": "create_utility_modules",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/final_naming_cleanup.py",
      "function": "__init__",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_caching_issue.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 157 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/config_audit.py",
      "function": "find_config_files",
      "severity": "medium",
      "issue": "Function has 59 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/config_audit.py",
      "function": "_check_env_security",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/config_audit.py",
      "function": "generate_report",
      "severity": "medium",
      "issue": "Function has 75 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/config_audit.py",
      "line": 209,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/mcp_database_final_status.py",
      "function": "generate_final_report",
      "severity": "medium",
      "issue": "Function has 189 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_critical_issues.py",
      "function": "analyze_critical_issues",
      "severity": "medium",
      "issue": "Function has 63 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/verify_orchestra_deployment.py",
      "function": "setup_database_structure",
      "severity": "medium",
      "issue": "Function has 76 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/verify_orchestra_deployment.py",
      "line": 41,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_model_syntax.py",
      "function": "run_syntax_fixes",
      "severity": "medium",
      "issue": "Function has 61 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/verify_ai_mcp_integration.py",
      "function": "generate_startup_script",
      "severity": "medium",
      "issue": "Function has 65 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/verify_ai_mcp_integration.py",
      "function": "print_report",
      "severity": "medium",
      "issue": "Function has 53 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/verify_ai_mcp_integration.py",
      "line": 85,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_admin_ui.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 154 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "large_file",
      "file": "scripts/comprehensive_production_deploy.py",
      "severity": "medium",
      "issue": "File has 1367 lines (recommended max: 1000)",
      "recommendation": "Split into smaller, focused modules",
      "effort": "4-8 hours",
      "impact": "Improves maintainability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 562,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 572,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 675,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 769,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 801,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 1283,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 1284,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 1285,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 1286,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_production_deploy.py",
      "line": 1287,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/update_nginx_for_orchestra.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 143 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/verify_final_deployment.py",
      "line": 18,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/verify_final_deployment.py",
      "line": 38,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/test_database_consolidation.py",
      "function": "test_postgresql_operations",
      "severity": "medium",
      "issue": "Function has 58 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/test_database_consolidation.py",
      "function": "test_weaviate_operations",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/monitor_redis_resilience.py",
      "line": 231,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_ai_agents.py",
      "line": 18,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/validate_ai_agents.py",
      "line": 32,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_backend_services.py",
      "function": "setup_database",
      "severity": "medium",
      "issue": "Function has 109 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_backend_services.py",
      "line": 328,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_backend_services.py",
      "line": 339,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/cherry_ai_final_status.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 123 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_to_vultr.py",
      "function": "configure_server",
      "severity": "medium",
      "issue": "Function has 53 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_to_vultr.py",
      "line": 356,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_cherry_deployment.py",
      "function": "analyze_current_deployment",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_cherry_deployment.py",
      "function": "create_migration_plan",
      "severity": "medium",
      "issue": "Function has 146 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_cherry_deployment.py",
      "function": "generate_deployment_script",
      "severity": "medium",
      "issue": "Function has 99 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_cherry_deployment.py",
      "line": 41,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_to_cherry_ai.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 162 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/database_schema_validator.py",
      "function": "generate_report",
      "severity": "medium",
      "issue": "Function has 89 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_vultr_now.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 104 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/cleanup_repository.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 63 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/cleanup_repository.py",
      "function": "optimize_gitignore",
      "severity": "medium",
      "issue": "Function has 81 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/orchestra_roo_status.py",
      "function": "show_integration_status",
      "severity": "medium",
      "issue": "Function has 130 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/orchestra_roo_status.py",
      "line": 97,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/auto_start_orchestra_roo.py",
      "line": 108,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/bench_weaviate.py",
      "line": 5,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/fix_critical_backend_issues.py",
      "function": "fix_hardcoded_credentials",
      "severity": "medium",
      "issue": "Function has 51 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/fix_critical_backend_issues.py",
      "line": 333,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/verify_deployment.py",
      "function": "verify_deployment",
      "severity": "medium",
      "issue": "Function has 78 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/verify_deployment.py",
      "line": 16,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/setup_vultr_deployment.py",
      "function": "setup_vultr_api_key",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_parameter_list",
      "file": "scripts/comprehensive_backend_audit.py",
      "function": "add_issue",
      "severity": "medium",
      "issue": "Function has 7 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_method",
      "file": "scripts/comprehensive_backend_audit.py",
      "function": "run_audit",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/test_redis_simple.py",
      "function": "test_redis_connection",
      "severity": "medium",
      "issue": "Function has 131 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/mcp_database_audit_simple.py",
      "function": "check_database_config",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/mcp_database_audit_simple.py",
      "function": "check_code_structure",
      "severity": "medium",
      "issue": "Function has 75 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_configuration",
      "severity": "medium",
      "issue": "Function has 119 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_security",
      "severity": "medium",
      "issue": "Function has 69 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_performance",
      "severity": "medium",
      "issue": "Function has 96 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_compatibility",
      "severity": "medium",
      "issue": "Function has 57 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "audit_deployment",
      "severity": "medium",
      "issue": "Function has 94 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "function": "generate_recommendations",
      "severity": "medium",
      "issue": "Function has 90 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "line": 637,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/health_check_comprehensive.py",
      "line": 123,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/rapid_production_deploy.py",
      "function": "_create_production_requirements",
      "severity": "medium",
      "issue": "Function has 54 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/rapid_production_deploy.py",
      "line": 161,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/rapid_production_deploy.py",
      "line": 163,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/rapid_production_deploy.py",
      "line": 165,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/rapid_production_deploy.py",
      "line": 166,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_redis_resilience.py",
      "function": "display_results",
      "severity": "medium",
      "issue": "Function has 58 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_redis_resilience.py",
      "line": 201,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_redis_resilience.py",
      "line": 281,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/setup_secure_env.py",
      "function": "generate_secure_env",
      "severity": "medium",
      "issue": "Function has 93 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/final_deployment_status.py",
      "function": "generate_deployment_report",
      "severity": "medium",
      "issue": "Function has 83 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/final_deployment_status.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_status.py",
      "line": 17,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_status.py",
      "line": 20,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/final_deployment_status.py",
      "line": 48,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/comprehensive_mcp_database_audit.py",
      "line": 385,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deployment_readiness_check.py",
      "function": "create_nginx_config",
      "severity": "medium",
      "issue": "Function has 64 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/deployment_readiness_check.py",
      "function": "run_all_checks",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 106,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 335,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 400,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 453,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 458,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 470,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 489,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 505,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 560,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 561,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_complete_single_user_system.py",
      "line": 562,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/prepare_for_deployment.py",
      "function": "create_env_file",
      "severity": "medium",
      "issue": "Function has 58 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/prepare_for_deployment.py",
      "function": "create_docker_compose_prod",
      "severity": "medium",
      "issue": "Function has 83 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/prepare_for_deployment.py",
      "function": "create_nginx_config",
      "severity": "medium",
      "issue": "Function has 58 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "scripts/prepare_for_deployment.py",
      "function": "create_deployment_script",
      "severity": "medium",
      "issue": "Function has 51 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/prepare_for_deployment.py",
      "line": 258,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 62 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "line": 252,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "line": 253,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "line": 254,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "line": 255,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/upload_and_deploy.py",
      "line": 11,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/upload_and_deploy.py",
      "line": 12,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "line": 35,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "line": 36,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "line": 45,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "line": 74,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "line": 85,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "cherry_collab_deploy/deploy_collaboration_bridge.py",
      "function": "deploy_cherry_ai_interface",
      "severity": "medium",
      "issue": "Function has 110 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "infrastructure/database_stack_manager.py",
      "function": "deploy_database_stack_remote",
      "severity": "medium",
      "issue": "Function has 297 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "infrastructure/database_stack_manager.py",
      "function": "create_pinecone_integration",
      "severity": "medium",
      "issue": "Function has 80 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 20,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 23,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 295,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_stack_manager.py",
      "line": 508,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/vultr_deployment.py",
      "line": 33,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/vultr_deployment.py",
      "line": 91,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/infrastructure_validator.py",
      "function": "test_backup_system",
      "severity": "medium",
      "issue": "Function has 53 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 17,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 18,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 19,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 20,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 22,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 23,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 24,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 164,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 232,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 237,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 242,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 247,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/infrastructure_validator.py",
      "line": 252,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/vultr_manager.py",
      "function": "main",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/vultr_manager.py",
      "line": 15,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/vultr_manager.py",
      "line": 76,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "function": "deploy_database_server",
      "severity": "medium",
      "issue": "Function has 56 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "function": "deploy_staging_server",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "function": "get_infrastructure_status",
      "severity": "medium",
      "issue": "Function has 55 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "line": 17,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "line": 26,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/github_secrets_manager.py",
      "function": "create_gitignore",
      "severity": "medium",
      "issue": "Function has 98 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 25,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 109,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 112,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 113,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 114,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 115,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 118,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 121,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/github_secrets_manager.py",
      "line": 122,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/database_layer/enterprise_db_manager.py",
      "function": "_load_config",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_layer/enterprise_db_manager.py",
      "line": 92,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_layer/enterprise_db_manager.py",
      "line": 101,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/database_layer/enterprise_db_manager.py",
      "line": 108,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "function": "_load_config",
      "severity": "medium",
      "issue": "Function has 66 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "line": 64,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "line": 70,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "line": 124,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "line": 204,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "line": 439,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_parameter_list",
      "file": "infrastructure/entity_resolution/fuzzy_matcher.py",
      "function": "_resolve_field_conflict",
      "severity": "medium",
      "issue": "Function has 6 parameters (max recommended: 5)",
      "recommendation": "Use parameter objects or builder pattern",
      "effort": "1-2 hours",
      "impact": "Improves function signature clarity"
    },
    {
      "type": "long_method",
      "file": "mcp_server/ai_agent_discovery.py",
      "function": "_load_mcp_servers",
      "severity": "medium",
      "issue": "Function has 73 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/ai_agent_discovery.py",
      "function": "_load_ai_agents",
      "severity": "medium",
      "issue": "Function has 94 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 92,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 132,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 313,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 370,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 397,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 417,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 418,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 419,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 484,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 487,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 496,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 553,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/ai_agent_discovery.py",
      "line": 567,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/roo/orchestra_integration.py",
      "line": 47,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/security/config.py",
      "line": 25,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "function": "_update_smart_router_auth",
      "severity": "medium",
      "issue": "Function has 138 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "function": "_create_unified_startup",
      "severity": "medium",
      "issue": "Function has 64 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "line": 180,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "line": 186,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "line": 200,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/api/main.py",
      "line": 262,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/api/main.py",
      "line": 268,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/api/main.py",
      "line": 275,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/infrastructure_manager.py",
      "line": 32,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/infrastructure_manager.py",
      "line": 118,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/infrastructure_manager.py",
      "line": 119,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/infrastructure_manager.py",
      "line": 120,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/infrastructure_manager.py",
      "line": 127,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "mcp_server/servers/memory_server.py",
      "function": "setup_handlers",
      "severity": "medium",
      "issue": "Function has 317 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_cherry_domain_server.py",
      "line": 37,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_cherry_domain_server.py",
      "line": 45,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_cherry_domain_server.py",
      "line": 51,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "mcp_server/servers/conductor_server.py",
      "function": "setup_handlers",
      "severity": "medium",
      "issue": "Function has 114 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/servers/git_intelligence_server.py",
      "function": "_setup_handlers",
      "severity": "medium",
      "issue": "Function has 124 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_codebase_server.py",
      "line": 22,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_codebase_server.py",
      "line": 113,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "mcp_server/servers/enhanced_codebase_server.py",
      "line": 120,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "long_method",
      "file": "mcp_server/servers/code_intelligence_server.py",
      "function": "_setup_handlers",
      "severity": "medium",
      "issue": "Function has 115 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/analytics/usage_analytics.py",
      "function": "get_usage_metrics",
      "severity": "medium",
      "issue": "Function has 81 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/analytics/usage_analytics.py",
      "function": "detect_workflow_patterns",
      "severity": "medium",
      "issue": "Function has 60 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "mcp_server/analytics/usage_analytics.py",
      "function": "generate_optimization_suggestions",
      "severity": "medium",
      "issue": "Function has 53 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "long_method",
      "file": "services/weaviate_service.py",
      "function": "_create_client",
      "severity": "medium",
      "issue": "Function has 52 lines (max recommended: 50)",
      "recommendation": "Extract smaller functions with single responsibilities",
      "effort": "2-4 hours",
      "impact": "Improves readability and testability"
    },
    {
      "type": "hardcoded_value",
      "file": "src/multimedia_generation/video_gen_controller.py",
      "line": 30,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "src/multimedia_generation/image_gen_controller.py",
      "line": 30,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "src/vector_db/weaviate_adapter.py",
      "line": 23,
      "severity": "medium",
      "issue": "Found hardcoded URL",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "hardcoded_value",
      "file": "src/api/main.py",
      "line": 80,
      "severity": "medium",
      "issue": "Found hardcoded IP",
      "recommendation": "Move to configuration file or environment variable",
      "effort": "30 minutes",
      "impact": "Improves security and configuration management"
    },
    {
      "type": "unpinned_dependencies",
      "file": "requirements-webscraping.txt",
      "severity": "medium",
      "issue": "Found 1 unpinned dependencies",
      "recommendation": "Pin all dependencies to specific versions",
      "effort": "1 hour",
      "impact": "Ensures reproducible builds and prevents breaking changes",
      "details": [
        "-r requirements-consolidated.txt"
      ]
    },
    {
      "type": "unpinned_dependencies",
      "file": "requirements-app.txt",
      "severity": "medium",
      "issue": "Found 2 unpinned dependencies",
      "recommendation": "Pin all dependencies to specific versions",
      "effort": "1 hour",
      "impact": "Ensures reproducible builds and prevents breaking changes",
      "details": [
        "python-jose[cryptography]",
        "python-multipart"
      ]
    },
    {
      "type": "naming_violations",
      "severity": "medium",
      "issue": "Found naming convention violations",
      "recommendation": "Apply PEP 8 naming conventions consistently",
      "effort": "2-4 hours",
      "impact": "Improves code consistency and readability",
      "details": {
        "class_names": 4
      }
    },
    {
      "type": "performance_issues",
      "severity": "medium",
      "issue": "Found 37 potential performance issues",
      "recommendation": "Optimize identified performance bottlenecks",
      "effort": "1-2 days",
      "impact": "Improves application performance",
      "details": [
        {
          "file": "technical_debt_analyzer.py",
          "issue": "Uses time.sleep - consider async alternatives"
        },
        {
          "file": "utils.py",
          "issue": "Uses time.sleep - consider async alternatives"
        },
        {
          "file": "infra/do_weaviate_migration_stack.py",
          "issue": "Uses time.sleep - consider async alternatives"
        },
        {
          "file": "core/redis/monitoring.py",
          "issue": "Uses time.sleep - consider async alternatives"
        },
        {
          "file": "core/utils/stability.py",
          "issue": "Uses time.sleep - consider async alternatives"
        }
      ]
    }
  ],
  "low_priority": [
    {
      "type": "missing_docstring",
      "file": "phidata_team_agent_implementation.py",
      "class": "PhidataAgentWrapper",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "fixed_main_app.py",
      "class": "DatabaseManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "fixed_main_app.py",
      "class": "AIPersona",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "fixed_main_app.py",
      "class": "ConnectionManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "fixed_main_app.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_smart_router.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "cursor_live_client.py",
      "class": "CursorLiveCollaborationClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "cursor_live_client.py",
      "severity": "low",
      "issue": "Found 28 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "migration_orchestrator.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "ai_assist_v0.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "quick_check.py",
      "class": "Colors",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "quick_check.py",
      "severity": "low",
      "issue": "Found 29 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "wisdom_based_restoration_framework.py",
      "severity": "low",
      "issue": "Found 35 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "ai_context_reviewer.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "fix_python_formatting.py",
      "severity": "low",
      "issue": "Found 2 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "code_audit_processor.py",
      "class": "CodeAuditProcessor",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "code_audit_processor.py",
      "severity": "low",
      "issue": "Found 47 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_cherry_ai_integration.py",
      "severity": "low",
      "issue": "Found 55 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "cursor_collab_session.py",
      "class": "CursorCollabSession",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "cursor_collab_session.py",
      "severity": "low",
      "issue": "Found 24 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "fix_corrupted_python_files.py",
      "class": "CorruptedPythonFixer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "fix_corrupted_python_files.py",
      "severity": "low",
      "issue": "Found 15 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_real_agents.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "code_audit_summary.py",
      "severity": "low",
      "issue": "Found 58 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "ai_context_debugger.py",
      "severity": "low",
      "issue": "Found 5 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_ai_assist.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_websocket.py",
      "severity": "low",
      "issue": "Found 7 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_services.py",
      "severity": "low",
      "issue": "Found 5 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_system_integration.py",
      "severity": "low",
      "issue": "Found 47 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_local_collaboration.py",
      "severity": "low",
      "issue": "Found 16 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "manus_local_client.py",
      "class": "ManusCollaborationClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "manus_local_client.py",
      "severity": "low",
      "issue": "Found 26 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "analyze_critical_issues.py",
      "severity": "low",
      "issue": "Found 31 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "cursor_live_client_enhanced.py",
      "class": "EnhancedCursorLiveClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "cursor_live_client_enhanced.py",
      "severity": "low",
      "issue": "Found 35 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "cherry_ai_live_collaboration_bridge.py",
      "class": "CherryAILiveCollaborationBridge",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "technical_debt_analyzer.py",
      "class": "TechnicalDebtAnalyzer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "technical_debt_analyzer.py",
      "severity": "low",
      "issue": "Found 38 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "local_collaboration_bridge.py",
      "class": "LocalCollaborationBridge",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "local_collaboration_bridge.py",
      "severity": "low",
      "issue": "Found 14 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_claude_api.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "deploy_collaboration_bridge.py",
      "severity": "low",
      "issue": "Found 16 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "apply_backend_fixes.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "fix_formatting_issues.py",
      "class": "FormattingFixer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "fix_formatting_issues.py",
      "severity": "low",
      "issue": "Found 19 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_api_key.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "lambda_infrastructure_mcp_server.py",
      "class": "LambdaLabsInfrastructureServer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "cleanup_corrupted_files.py",
      "severity": "low",
      "issue": "Found 21 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "code_audit_scanner.py",
      "class": "CodeAuditScanner",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "code_audit_scanner.py",
      "severity": "low",
      "issue": "Found 27 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "verify_cherry_ai_setup.py",
      "severity": "low",
      "issue": "Found 36 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "methodical_restoration_strategy.py",
      "severity": "low",
      "issue": "Found 27 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "intelligent_code_restoration.py",
      "severity": "low",
      "issue": "Found 20 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "batch_fix_runner.py",
      "severity": "low",
      "issue": "Found 8 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "manus_live_collaboration_client.py",
      "class": "ManusLiveCollaborationClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "main.py",
      "class": "DatabaseManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "main.py",
      "class": "AIPersona",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "main.py",
      "class": "ConnectionManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "final_cleanup_organizer.py",
      "severity": "low",
      "issue": "Found 22 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "cherry_interface.py",
      "severity": "low",
      "issue": "Found 5 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "diagnose_indentation_errors.py",
      "severity": "low",
      "issue": "Found 29 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_mcp_simple.py",
      "severity": "low",
      "issue": "Found 13 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "cherry_interface_unified.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "test_environment.py",
      "severity": "low",
      "issue": "Found 12 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "cleanup_codebase.py",
      "severity": "low",
      "issue": "Found 27 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "fix_python_indentation.py",
      "class": "PythonIndentationFixer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "fix_python_indentation.py",
      "severity": "low",
      "issue": "Found 23 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "ai_assist.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "main_app.py",
      "class": "QueryRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "main_app.py",
      "class": "LLMRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "core/shared/main_utils.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": ".roo/hooks/orchestra_startup.py",
      "severity": "low",
      "issue": "Found 2 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "deploy/superagi_config.py",
      "class": "SuperAGIDeployment",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "tests/test_example.py",
      "class": "TestExample",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "tests/shared/test_weaviate_session_cache.py",
      "class": "DummyAdapter",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "tests/shared/test_zip_processor.py",
      "class": "InMemoryAdapter",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/main.py",
      "class": "QueryRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/main.py",
      "class": "HealthResponse",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerCreateRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerUpdateRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerBulkCreateRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerBulkUpdateRequest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerValidationResponse",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPPerformanceStats",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "MCPServerError",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "Config",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "agent/app/routers/mcp_admin.py",
      "class": "Config",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "shared/retry_utils.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "shared/circuit_breaker.py",
      "class": "CircuitBreaker",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "shared/database/core.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/integrate_redis_resilience.py",
      "severity": "low",
      "issue": "Found 21 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/optimize_mcp_database_architecture.py",
      "severity": "low",
      "issue": "Found 44 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/fix_all_syntax_errors.py",
      "class": "SyntaxFixer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_all_syntax_errors.py",
      "severity": "low",
      "issue": "Found 57 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/analyze_production_infrastructure.py",
      "class": "ProductionInfrastructureAnalyzer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/analyze_production_infrastructure.py",
      "severity": "low",
      "issue": "Found 29 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/validate_api_consistency.py",
      "severity": "low",
      "issue": "Found 19 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/system_monitor.py",
      "class": "SystemMonitor",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/system_monitor.py",
      "severity": "low",
      "issue": "Found 61 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/consolidate_duplicate_endpoints.py",
      "severity": "low",
      "issue": "Found 15 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/comprehensive_cleanup_orchestrator.py",
      "severity": "low",
      "issue": "Found 30 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/validate_and_deploy_backend.py",
      "class": "BackendValidator",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/validate_and_deploy_backend.py",
      "class": "BackendDeployer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/validate_and_deploy_backend.py",
      "severity": "low",
      "issue": "Found 40 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/vultr_provision.py",
      "severity": "low",
      "issue": "Found 2 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestra_final_summary.py",
      "severity": "low",
      "issue": "Found 27 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestra_system_status.py",
      "severity": "low",
      "issue": "Found 11 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/test_redis_resilience.py",
      "severity": "low",
      "issue": "Found 50 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/test_unified_integration.py",
      "class": "UnifiedIntegrationTest",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/test_unified_integration.py",
      "severity": "low",
      "issue": "Found 22 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/consolidate_env_vars.py",
      "severity": "low",
      "issue": "Found 9 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_cherry_ai_final.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/check_venv.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/single_user_implementation_summary.py",
      "severity": "low",
      "issue": "Found 98 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "technical_debt_markers",
      "file": "scripts/reconstruct_remaining_files.py",
      "severity": "low",
      "issue": "Found 11 TODO/FIXME comments",
      "recommendation": "Address technical debt or create tickets",
      "effort": "Variable",
      "impact": "Reduces accumulated technical debt"
    },
    {
      "type": "print_statements",
      "file": "scripts/reconstruct_remaining_files.py",
      "severity": "low",
      "issue": "Found 8 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/setup_admin_user.py",
      "severity": "low",
      "issue": "Found 17 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/deploy_single_user_auth.py",
      "class": "SingleUserAuthDeployment",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_single_user_auth.py",
      "severity": "low",
      "issue": "Found 51 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_naming_edge_cases.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/mobile_app_integration.py",
      "severity": "low",
      "issue": "Found 12 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/persona_config_consolidator.py",
      "severity": "low",
      "issue": "Found 22 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/final_cleanup_deliverables.py",
      "severity": "low",
      "issue": "Found 18 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/vultr_direct_deploy.py",
      "class": "VultrDirectDeployment",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/vultr_direct_deploy.py",
      "severity": "low",
      "issue": "Found 47 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/redis_resilience_status.py",
      "severity": "low",
      "issue": "Found 31 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/cherry_ai_complete_deployment_summary.py",
      "severity": "low",
      "issue": "Found 23 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/cherry_ai_deployment_status.py",
      "severity": "low",
      "issue": "Found 37 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestra_intelligent_automation.py",
      "severity": "low",
      "issue": "Found 11 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/final_deployment_check.py",
      "severity": "low",
      "issue": "Found 40 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_broken_imports.py",
      "severity": "low",
      "issue": "Found 18 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_cherry_ai_website.py",
      "severity": "low",
      "issue": "Found 54 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/setup_production_config.py",
      "severity": "low",
      "issue": "Found 28 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "technical_debt_markers",
      "file": "scripts/reconstruct_critical_files.py",
      "severity": "low",
      "issue": "Found 6 TODO/FIXME comments",
      "recommendation": "Address technical debt or create tickets",
      "effort": "Variable",
      "impact": "Reduces accumulated technical debt"
    },
    {
      "type": "print_statements",
      "file": "scripts/reconstruct_critical_files.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/search_engine_cleanup.py",
      "severity": "low",
      "issue": "Found 17 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/test_mcp_enhancements.py",
      "severity": "low",
      "issue": "Found 51 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/final_naming_cleanup.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_caching_issue.py",
      "severity": "low",
      "issue": "Found 22 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/config_audit.py",
      "severity": "low",
      "issue": "Found 11 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/mcp_database_final_status.py",
      "severity": "low",
      "issue": "Found 72 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/analyze_critical_issues.py",
      "severity": "low",
      "issue": "Found 13 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/verify_orchestra_deployment.py",
      "severity": "low",
      "issue": "Found 52 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/test_deployment_ready.py",
      "severity": "low",
      "issue": "Found 32 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/refactor_naming_conventions.py",
      "severity": "low",
      "issue": "Found 8 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_model_syntax.py",
      "severity": "low",
      "issue": "Found 10 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/verify_ai_mcp_integration.py",
      "class": "MCPServerConfig",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/verify_ai_mcp_integration.py",
      "class": "AIServiceConfig",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/verify_ai_mcp_integration.py",
      "class": "MCPIntegrationVerifier",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/verify_ai_mcp_integration.py",
      "severity": "low",
      "issue": "Found 27 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_admin_ui.py",
      "severity": "low",
      "issue": "Found 23 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/comprehensive_production_deploy.py",
      "severity": "low",
      "issue": "Found 32 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/validate_docs.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/update_nginx_for_orchestra.py",
      "severity": "low",
      "issue": "Found 24 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/verify_final_deployment.py",
      "severity": "low",
      "issue": "Found 33 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/monitor_redis_resilience.py",
      "severity": "low",
      "issue": "Found 61 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/validate_ai_agents.py",
      "severity": "low",
      "issue": "Found 7 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/code_inventory.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/deploy_backend_services.py",
      "class": "BackendDeployer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_backend_services.py",
      "severity": "low",
      "issue": "Found 47 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/cherry_ai_final_status.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/deploy_to_vultr.py",
      "class": "VultrDeployment",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_to_vultr.py",
      "severity": "low",
      "issue": "Found 57 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/analyze_cherry_deployment.py",
      "class": "CherryDeploymentAnalyzer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/analyze_cherry_deployment.py",
      "severity": "low",
      "issue": "Found 26 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_to_cherry_ai.py",
      "severity": "low",
      "issue": "Found 32 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/database_schema_validator.py",
      "severity": "low",
      "issue": "Found 14 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_vultr_now.py",
      "severity": "low",
      "issue": "Found 32 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/cleanup_old_deployments.py",
      "severity": "low",
      "issue": "Found 46 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/cleanup_repository.py",
      "severity": "low",
      "issue": "Found 17 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestra_roo_status.py",
      "severity": "low",
      "issue": "Found 31 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/auto_start_orchestra_roo.py",
      "severity": "low",
      "issue": "Found 24 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/bench_weaviate.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/config_inventory.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/fix_critical_backend_issues.py",
      "class": "BackendIssueFixer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_critical_backend_issues.py",
      "severity": "low",
      "issue": "Found 21 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/verify_deployment.py",
      "severity": "low",
      "issue": "Found 26 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/setup_vultr_deployment.py",
      "severity": "low",
      "issue": "Found 37 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/comprehensive_backend_audit.py",
      "class": "ComprehensiveBackendAuditor",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/comprehensive_backend_audit.py",
      "severity": "low",
      "issue": "Found 18 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/test_redis_simple.py",
      "severity": "low",
      "issue": "Found 51 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/mcp_database_audit_simple.py",
      "severity": "low",
      "issue": "Found 29 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/orchestra_daemon.py",
      "class": "OrchestraDaemon",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/fix_critical_files.py",
      "severity": "low",
      "issue": "Found 13 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/analyze_mcp_infrastructure.py",
      "severity": "low",
      "issue": "Found 37 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/health_check_comprehensive.py",
      "severity": "low",
      "issue": "Found 13 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/rapid_production_deploy.py",
      "severity": "low",
      "issue": "Found 70 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestra_auto_simple.py",
      "severity": "low",
      "issue": "Found 9 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "technical_debt_markers",
      "file": "scripts/documentation_consistency_cleaner.py",
      "severity": "low",
      "issue": "Found 8 TODO/FIXME comments",
      "recommendation": "Address technical debt or create tickets",
      "effort": "Variable",
      "impact": "Reduces accumulated technical debt"
    },
    {
      "type": "print_statements",
      "file": "scripts/documentation_consistency_cleaner.py",
      "severity": "low",
      "issue": "Found 14 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/check_syntax.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/setup_secure_env.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/final_deployment_status.py",
      "severity": "low",
      "issue": "Found 36 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/comprehensive_mcp_database_audit.py",
      "severity": "low",
      "issue": "Found 28 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deployment_readiness_check.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "scripts/deploy_complete_single_user_system.py",
      "class": "CompleteSystemDeployment",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_complete_single_user_system.py",
      "severity": "low",
      "issue": "Found 1 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/prepare_for_deployment.py",
      "severity": "low",
      "issue": "Found 28 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/deploy_new_cherry_ai_website.py",
      "severity": "low",
      "issue": "Found 10 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/activate_orchestra_in_roo.py",
      "severity": "low",
      "issue": "Found 9 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/testing_validation_cleaner.py",
      "severity": "low",
      "issue": "Found 15 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "scripts/orchestrate_system_demo.py",
      "severity": "low",
      "issue": "Found 23 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "cherry_collab_deploy/upload_and_deploy.py",
      "severity": "low",
      "issue": "Found 17 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "cherry_collab_deploy/cherry_ai_live_collaboration_bridge.py",
      "class": "CherryAILiveCollaborationBridge",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "cherry_collab_deploy/deploy_collaboration_bridge.py",
      "severity": "low",
      "issue": "Found 16 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "infrastructure/database_stack_manager.py",
      "class": "DatabaseStackManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/database_stack_manager.py",
      "severity": "low",
      "issue": "Found 51 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "infrastructure/infrastructure_validator.py",
      "class": "InfrastructureValidator",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/infrastructure_validator.py",
      "severity": "low",
      "issue": "Found 52 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "infrastructure/vultr_manager.py",
      "class": "VultrManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/vultr_manager.py",
      "severity": "low",
      "issue": "Found 21 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "class": "Tier2InfrastructureManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/tier2_infrastructure_fixed.py",
      "severity": "low",
      "issue": "Found 33 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/pinecone_manager.py",
      "severity": "low",
      "issue": "Found 11 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "infrastructure/github_secrets_manager.py",
      "class": "GitHubSecretsManager",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/github_secrets_manager.py",
      "severity": "low",
      "issue": "Found 40 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/database_layer/enterprise_db_manager.py",
      "severity": "low",
      "issue": "Found 7 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/database_layer/ingestion_pipeline.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/api_integrations/enterprise_api_manager.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "infrastructure/entity_resolution/fuzzy_matcher.py",
      "severity": "low",
      "issue": "Found 13 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/ai_agent_discovery.py",
      "severity": "low",
      "issue": "Found 37 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/roo/orchestra_integration.py",
      "severity": "low",
      "issue": "Found 2 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/integration/unified_auth_discovery.py",
      "severity": "low",
      "issue": "Found 8 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/monitoring/alerts.py",
      "severity": "low",
      "issue": "Found 2 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/monitoring/performance.py",
      "severity": "low",
      "issue": "Found 3 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/servers/memory_server.py",
      "severity": "low",
      "issue": "Found 4 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/servers/enhanced_cherry_domain_server.py",
      "severity": "low",
      "issue": "Found 9 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "mcp_server/servers/enhanced_codebase_server.py",
      "class": "EnhancedCodebaseServer",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "print_statements",
      "file": "mcp_server/analytics/usage_analytics.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "print_statements",
      "file": "src/core/cache_warmer.py",
      "severity": "low",
      "issue": "Found 6 print statements",
      "recommendation": "Replace with proper logging",
      "effort": "1 hour",
      "impact": "Improves debugging and production monitoring"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/karen_persona.py",
      "class": "LLMClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/karen_persona.py",
      "class": "UnifiedDatabase",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/karen_persona.py",
      "class": "WeaviateAdapter",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/sophia_persona.py",
      "class": "LLMClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/sophia_persona.py",
      "class": "UnifiedDatabase",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/sophia_persona.py",
      "class": "WeaviateAdapter",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/cherry_persona.py",
      "class": "LLMClient",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/cherry_persona.py",
      "class": "UnifiedDatabase",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    },
    {
      "type": "missing_docstring",
      "file": "src/personas/cherry_persona.py",
      "class": "WeaviateAdapter",
      "severity": "low",
      "issue": "Class lacks docstring",
      "recommendation": "Add comprehensive class documentation",
      "effort": "30 minutes",
      "impact": "Improves code understanding and API documentation"
    }
  ],
  "metrics": {
    "total_issues": 792,
    "critical_count": 36,
    "high_count": 57,
    "medium_count": 460,
    "low_count": 239
  },
  "refactoring_opportunities": [],
  "refactoring_roadmap": [
    {
      "phase": 1,
      "name": "Critical Issues Resolution",
      "duration": "1-2 weeks",
      "issues": 36,
      "focus": "Security vulnerabilities, missing tests, broken functionality",
      "impact": "Addresses immediate risks and stability concerns"
    },
    {
      "phase": 2,
      "name": "High Priority Improvements",
      "duration": "2-4 weeks",
      "issues": 57,
      "focus": "Code complexity, duplicate code, poor error handling",
      "impact": "Significantly improves maintainability"
    },
    {
      "phase": 3,
      "name": "Code Quality Enhancement",
      "duration": "4-6 weeks",
      "issues": 460,
      "focus": "Naming conventions, documentation, performance",
      "impact": "Improves developer experience and code consistency"
    },
    {
      "phase": 4,
      "name": "Continuous Improvement",
      "duration": "Ongoing",
      "issues": 239,
      "focus": "Minor improvements, style issues, nice-to-haves",
      "impact": "Polishes codebase over time"
    }
  ]
}