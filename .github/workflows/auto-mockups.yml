name: 🍒 Auto-Generate Mockups

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'admin-interface/**'
      - 'dashboard/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'admin-interface/**'
      - 'dashboard/**'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  generate-mockups:
    name: Generate Interface Mockups
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            admin-interface/package-lock.json
            dashboard/package-lock.json

      - name: 🔧 Install Admin Interface Dependencies
        working-directory: ./admin-interface
        run: |
          npm ci --prefer-offline --no-audit
          npm install puppeteer --save-dev

      - name: 🔧 Install Dashboard Dependencies
        working-directory: ./dashboard
        run: |
          npm ci --prefer-offline --no-audit

      - name: 🏗️ Build Admin Interface
        working-directory: ./admin-interface
        run: |
          npm run build
          echo "Admin interface build completed"

      - name: 🏗️ Build Dashboard
        working-directory: ./dashboard
        run: |
          npm run build
          echo "Dashboard build completed"

      - name: 🎨 Generate Admin Interface Mockups
        working-directory: ./admin-interface
        run: |
          chmod +x ./mockup-automation.sh
          
          # Create timestamped mockup from build
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          if [[ -f "out/index.html" ]]; then
            cp "out/index.html" "built-interface-$TIMESTAMP.html"
            echo "✅ Created: built-interface-$TIMESTAMP.html"
          fi
          
          # List all mockups
          ./mockup-automation.sh list

      - name: 📸 Generate Screenshots
        working-directory: ./admin-interface
        run: |
          # Create screenshots directory
          mkdir -p screenshots
          
          # Generate screenshots with Puppeteer
          cat > screenshot-generator.js << 'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          
          const mockups = [
            'enhanced-production-interface.html',
            'enhanced-admin-interface.html', 
            'ai-tools-dashboard.html',
            'production-admin-interface.html',
            'chat.html',
            'enhanced-index.html',
            'cherry-ai-working.html',
            'working-interface.html'
          ];
          
          async function generateScreenshots() {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            for (const mockup of mockups) {
              if (fs.existsSync(mockup)) {
                try {
                  const page = await browser.newPage();
                  await page.setViewport({ width: 1200, height: 800 });
                  await page.goto(`file://${__dirname}/${mockup}`, { 
                    waitUntil: 'networkidle2',
                    timeout: 10000 
                  });
                  
                  const filename = mockup.replace('.html', '.png');
                  await page.screenshot({ 
                    path: `screenshots/${filename}`,
                    fullPage: true 
                  });
                  
                  console.log(`✅ Generated: screenshots/${filename}`);
                  await page.close();
                } catch (error) {
                  console.error(`❌ Failed to screenshot ${mockup}:`, error.message);
                }
              }
            }
            
            await browser.close();
            console.log('🎉 Screenshot generation completed!');
          }
          
          generateScreenshots().catch(console.error);
          EOF
          
          # Run screenshot generation
          node screenshot-generator.js || echo "Screenshots generation completed with some errors"
          
          # List generated screenshots
          ls -la screenshots/ || echo "No screenshots directory found"

      - name: 📊 Generate Mockup Report
        working-directory: ./admin-interface
        run: |
          echo "# 🍒 Mockup Generation Report" > MOCKUP_REPORT.md
          echo "" >> MOCKUP_REPORT.md
          echo "**Generated:** $(date)" >> MOCKUP_REPORT.md
          echo "**Commit:** ${{ github.sha }}" >> MOCKUP_REPORT.md
          echo "**Branch:** ${{ github.ref_name }}" >> MOCKUP_REPORT.md
          echo "" >> MOCKUP_REPORT.md
          echo "## Available Mockups" >> MOCKUP_REPORT.md
          echo "" >> MOCKUP_REPORT.md
          
          for file in *.html; do
            if [[ -f "$file" && "$file" != "index.html" ]]; then
              size=$(du -h "$file" | cut -f1)
              echo "- **$file** (${size})" >> MOCKUP_REPORT.md
            fi
          done
          
          echo "" >> MOCKUP_REPORT.md
          echo "## Screenshots Generated" >> MOCKUP_REPORT.md
          echo "" >> MOCKUP_REPORT.md
          
          if [[ -d "screenshots" ]]; then
            for screenshot in screenshots/*.png; do
              if [[ -f "$screenshot" ]]; then
                filename=$(basename "$screenshot")
                echo "- $filename" >> MOCKUP_REPORT.md
              fi
            done
          else
            echo "- No screenshots generated" >> MOCKUP_REPORT.md
          fi
          
          echo "" >> MOCKUP_REPORT.md
          echo "## Access URLs" >> MOCKUP_REPORT.md
          echo "" >> MOCKUP_REPORT.md
          echo "- **Mockup Gallery:** [View All Mockups](https://orchestra-main-previews.vercel.app/admin-interface/mockups-index.html)" >> MOCKUP_REPORT.md
          echo "- **GitHub Pages:** [Preview Branch](https://YOUR_USERNAME.github.io/orchestra-main/previews/${{ github.sha }}/admin-interface/)" >> MOCKUP_REPORT.md
          
          cat MOCKUP_REPORT.md

      - name: 📤 Upload Mockup Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cherry-ai-mockups-${{ github.sha }}
          path: |
            admin-interface/*.html
            admin-interface/screenshots/
            admin-interface/MOCKUP_REPORT.md
          retention-days: 30

      - name: 📤 Upload Dashboard Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cherry-ai-dashboard-${{ github.sha }}
          path: |
            dashboard/out/
            dashboard/.next/
          retention-days: 30

      - name: 🚀 Deploy to GitHub Pages (Main Branch)
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          destination_dir: latest
          keep_files: true

      - name: 🚀 Deploy Preview (PR/Develop Branch)
        if: github.ref != 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          destination_dir: previews/${{ github.sha }}
          keep_files: true

      - name: 💬 Comment on PR with Preview Links
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const mockupGalleryUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/previews/${{ github.sha }}/admin-interface/mockups-index.html`;
            const dashboardUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/previews/${{ github.sha }}/dashboard/`;
            
            const body = `## 🍒 Cherry AI Mockup Preview Ready!
            
            Your interface changes have been built and deployed for preview:
            
            ### 📱 Admin Interface
            - **[🎨 Mockup Gallery](${mockupGalleryUrl})** - View all interface variations
            - **[📊 Production Interface](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/previews/${{ github.sha }}/admin-interface/enhanced-production-interface.html)**
            - **[🛠️ Admin Tools](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/previews/${{ github.sha }}/admin-interface/ai-tools-dashboard.html)**
            
            ### 🎯 Dashboard
            - **[💬 Conversational Interface](${dashboardUrl})**
            
            ### 📸 Screenshots
            Screenshots have been generated and are available in the artifacts.
            
            ### 🔄 Auto-Updates
            This preview will update automatically with new commits to this PR.
            
            ---
            *Generated by Cherry AI Mockup Automation • Commit: \`${{ github.sha }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: ✅ Workflow Summary
        run: |
          echo "## 🎉 Mockup Generation Completed Successfully!"
          echo ""
          echo "### 📊 Summary"
          echo "- **Admin Interface Mockups:** Generated and uploaded"
          echo "- **Dashboard Build:** Completed"
          echo "- **Screenshots:** Generated with Puppeteer"
          echo "- **Artifacts:** Uploaded to GitHub"
          echo "- **Preview:** Deployed to GitHub Pages"
          echo ""
          echo "### 🔗 Next Steps"
          echo "1. Review mockups in the uploaded artifacts"
          echo "2. Check the preview deployment links"
          echo "3. Verify all interface variations work correctly"
          echo ""
          echo "### 📱 Quick Access"
          echo "Bookmark this for easy mockup access:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/latest/admin-interface/mockups-index.html" 