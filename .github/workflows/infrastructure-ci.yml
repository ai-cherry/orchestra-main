name: Infrastructure CI/CD
on:
  push:
    branches: [main]
    paths: 
      - 'infrastructure/**'
      - 'deploy_lambda_labs.sh'
      - '.github/workflows/infrastructure-ci.yml'
  pull_request:
    paths:
      - 'infrastructure/**'
      - 'deploy_lambda_labs.sh'

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  LAMBDA_LABS_API_KEY: ${{ secrets.LAMBDA_LABS_API_KEY }}

jobs:
  pulumi-preview:
    name: Pulumi Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        stack: [dev, staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: infrastructure/pulumi
        run: |
          pip install -r requirements.txt

      - name: Configure Pulumi
        uses: pulumi/actions@v4
        with:
          command: preview
          stack-name: orchestra-${{ matrix.stack }}
          work-dir: infrastructure/pulumi
          comment-on-pr: true
          diff: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov security scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: infrastructure/
          framework: terraform,cloudformation,dockerfile
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: checkov-results.sarif

  pulumi-deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: infrastructure/pulumi
        run: |
          pip install -r requirements.txt

      - name: Deploy to development
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: orchestra-dev
          work-dir: infrastructure/pulumi
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Export stack outputs
        uses: pulumi/actions@v4
        with:
          command: stack output --json
          stack-name: orchestra-dev
          work-dir: infrastructure/pulumi
        id: dev_outputs

      - name: Validate deployment
        run: |
          echo "Validating development deployment..."
          # Add health checks for Lambda Labs instances
          python infrastructure/infrastructure_validator.py --stack=dev

  pulumi-deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    needs: [pulumi-deploy-dev]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: infrastructure/pulumi
        run: |
          pip install -r requirements.txt

      - name: Deploy to production
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: orchestra-prod
          work-dir: infrastructure/pulumi
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Export stack outputs
        uses: pulumi/actions@v4
        with:
          command: stack output --json
          stack-name: orchestra-prod
          work-dir: infrastructure/pulumi
        id: prod_outputs

      - name: Validate production deployment
        run: |
          echo "Validating production deployment..."
          python infrastructure/infrastructure_validator.py --stack=prod

      - name: Update DNS records
        run: |
          echo "Updating DNS records with new instance IPs..."
          # Add logic to update DNS records if needed

  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    needs: [pulumi-deploy-prod]
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        working-directory: infrastructure/pulumi
        run: |
          pip install -r requirements.txt

      - name: Rollback to previous version
        uses: pulumi/actions@v4
        with:
          command: cancel
          stack-name: orchestra-prod
          work-dir: infrastructure/pulumi

      - name: Notify rollback
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "ðŸš¨ Production deployment failed and was rolled back!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    needs: [pulumi-deploy-prod]
    steps:
      - name: Notify deployment success
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "âœ… Infrastructure deployment successful!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 