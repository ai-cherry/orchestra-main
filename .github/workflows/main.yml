name: CI/CD - Cloud Build Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Print commit SHA and branch for traceability
      - name: Print commit info
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

      # 3. Authenticate to Google Cloud using Workload Identity Federation
      # NOTE: Replace workload_identity_provider and service_account with your real values!
      - name: Set up Google Cloud authentication (Workload Identity Federation)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/providers/PROVIDER_ID' # <-- Replace with your actual provider resource name
          service_account: 'platform-admin@cherry-ai-project.iam.gserviceaccount.com' # <-- Replace with your CI/CD service account

      # 4. Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: 'cherry-ai-project'

      # 5. (Optional) Run tests and linting before deployment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test dependencies
        run: |
          pip install -r wif_implementation_requirements.txt
      - name: Run tests
        run: |
          pytest --junitxml=test-results.xml
      - name: Run flake8 lint
        run: |
          flake8 .
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml

      # 6. Verify gcloud authentication
      - name: Verify gcloud authentication
        run: |
          gcloud auth list
          gcloud config list project

      # 7. Submit build to Google Cloud Build
      - name: Submit build to Google Cloud Build
        id: cloudbuild
        run: |
          gcloud builds submit \
            --config=cloudbuild.yaml \
            --substitutions=_COMMIT_SHA=${{ github.sha }}

      # 8. Print Cloud Build logs URL
      - name: Print Cloud Build logs URL
        run: |
          echo "View build logs at: https://console.cloud.google.com/cloud-build/builds?project=cherry-ai-project" 