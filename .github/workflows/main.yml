name: Build and Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Print commit SHA and branch for traceability
      - name: Print commit info
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"

      # 3. Authenticate to Google Cloud using Workload Identity Federation
      - name: Set up Google Cloud authentication (Workload Identity Federation)
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/525398941159/locations/global/workloadIdentityPools/github-wif-pool/providers/github-actions'
          service_account: 'cicd-sa@cherry-ai-project.iam.gserviceaccount.com'

      # 4. Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: 'cherry-ai-project'

      # --- Optional test stage (kept lightweight for solo-dev) ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run unit tests & lint (fast-fail)
        run: |
          echo "Running tests..."
          if [ -d tests ]; then 
            echo "Found tests directory, running pytest..."
            pytest -v --tb=short
          else
            echo "No tests directory found, skipping pytest"
          fi
          echo "Tests completed successfully"
      # -----------------------------------------------------------

      # 6. Verify gcloud authentication
      - name: Verify gcloud authentication
        run: |
          gcloud auth list
          gcloud config list project

      # 7. Submit build to Google Cloud Build
      - name: Submit build to Google Cloud Build
        id: cloudbuild
        run: |
          gcloud builds submit --config cloudbuild.yaml \
            --substitutions=COMMIT_SHA=${{ github.sha }} \
            .

      # 8. Print Cloud Build logs URL
      - name: Print Cloud Build logs URL
        run: |
          echo "View build logs at: https://console.cloud.google.com/cloud-build/builds?project=cherry-ai-project" 