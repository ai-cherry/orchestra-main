name: Deploy MCP Server

on:
  push:
    branches:
      - main
    paths:
      - 'mcp_server/**'
      - '.github/workflows/deploy-mcp-server.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: mcp-server

jobs:
  deploy:
    name: Deploy MCP Server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          cd mcp_server
          poetry install --no-interaction --no-root

      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker gcr.io

      - name: Build and push Docker image
        run: |
          IMAGE_NAME="gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}-${{ env.ENVIRONMENT }}"
          docker build -t $IMAGE_NAME -f mcp_server/Dockerfile.optimized .
          docker push $IMAGE_NAME

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}-${{ env.ENVIRONMENT }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}-${{ env.ENVIRONMENT }}
          region: ${{ env.REGION }}
          flags: |
            --allow-unauthenticated
            --memory=1Gi
            --cpu=1
            --concurrency=80
            --timeout=300s
            --set-env-vars=ENV=${{ env.ENVIRONMENT }},PROJECT_ID=${{ env.PROJECT_ID }}

      - name: Show Output
        run: |
          echo "Service URL: ${{ steps.deploy.outputs.url }}"