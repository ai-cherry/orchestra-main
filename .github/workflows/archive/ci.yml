name: ci

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    env:
      VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DSN: ${{ secrets.POSTGRES_DSN }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Verify Secrets Presence
        run: |
          echo "::add-mask::${{ secrets.VULTR_API_KEY }}"
          echo "VULTR_API_KEY present: ${{ secrets.VULTR_API_KEY != '' }}"
          
          echo "::add-mask::${{ secrets.PULUMI_ACCESS_TOKEN }}"
          echo "PULUMI_ACCESS_TOKEN present: ${{ secrets.PULUMI_ACCESS_TOKEN != '' }}"
          
          echo "::add-mask::${{ secrets.POSTGRES_PASSWORD }}"
          echo "POSTGRES_PASSWORD present: ${{ secrets.POSTGRES_PASSWORD != '' }}"
          
          echo "::add-mask::${{ secrets.POSTGRES_DSN }}"
          echo "POSTGRES_DSN present: ${{ secrets.POSTGRES_DSN != '' }}"
          
          echo "::add-mask::${{ secrets.JWT_SECRET }}"
          echo "JWT_SECRET present: ${{ secrets.JWT_SECRET != '' }}"
          
          echo "::add-mask::${{ secrets.WEAVIATE_API_KEY }}"
          echo "WEAVIATE_API_KEY present: ${{ secrets.WEAVIATE_API_KEY != '' }}" # Optional, depending on Weaviate config
          
          echo "::add-mask::${{ secrets.OPENAI_API_KEY }}"
          echo "OPENAI_API_KEY present: ${{ secrets.OPENAI_API_KEY != '' }}"
          
          echo "::add-mask::${{ secrets.ANTHROPIC_API_KEY }}"
          echo "ANTHROPIC_API_KEY present: ${{ secrets.ANTHROPIC_API_KEY != '' }}"
          
          echo "::add-mask::${{ secrets.PORTKEY_API_KEY }}"
          echo "PORTKEY_API_KEY present: ${{ secrets.PORTKEY_API_KEY != '' }}"

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
      
      - name: Install Python dev requirements
        run: pip install -r requirements/dev.txt

      - name: Run pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run tests (pytest)
        run: pytest -q

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install frontend dependencies
        working-directory: admin-ui
        run: npm ci

      - name: Run ESLint
        working-directory: admin-ui
        run: npx eslint . --ext .ts,.tsx

      - name: Build Admin UI
        working-directory: admin-ui
        run: npm run build

      - name: Validate docker-compose
        run: docker compose -f deploy/docker-compose.vultr.yml config --quiet

      - name: Check Weaviate readiness
        run: |
          docker compose -f deploy/docker-compose.vultr.yml up -d weaviate
          sleep 15
          curl -f http://localhost:8080/v1/.well-known/ready
          docker compose -f deploy/docker-compose.vultr.yml down

      - name: Pulumi preview
        uses: pulumi/actions@v4
        with:
          command: preview
          stack-name: vultr-dev
          work-dir: infra
