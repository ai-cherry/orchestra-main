name: Sync to Lambda Server

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      restart_services:
        description: 'Restart services after sync'
        required: false
        default: 'false'
        type: boolean

jobs:
  sync-and-deploy:
    name: Sync Code to Lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Sync to Lambda Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 45.32.69.157
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "🔄 Syncing Cherry AI from GitHub..."
            
            # Activate the virtual environment
            if [ -f /root/cherry_ai-main/venv/bin/activate ]; then
              echo "🚀 Activating virtual environment..."
              source /root/cherry_ai-main/venv/bin/activate
            else
              echo "⚠️ Virtual environment not found at /root/cherry_ai-main/venv/bin/activate. Skipping activation."
              # Optionally, you could attempt to create it here or fail the job
            fi
            
            cd /root/cherry_ai-main
            
            # Pull latest changes
            git pull origin main
            
            # Run validation
            echo "✅ Running validation..."
            make validate || true
            
            # Restart services if requested or if certain files changed
            if [[ "${{ github.event.inputs.restart_services }}" == "true" ]] || \
               git diff --name-only HEAD~1 | grep -E "(requirements|\.py$|\.env|docker-compose)" > /dev/null; then
              echo "🔄 Restarting services..."
              make stop-services
              make start-services
              echo "✅ Services restarted"
            else
              echo "ℹ️ No service restart needed"
            fi
            
            # Show current status
            echo "📊 Current service status:"
            make service-status
            
      - name: Health Check
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 45.32.69.157
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/cherry_ai-main
            echo "🏥 Running health check..."
            make health-check || echo "⚠️ Some services may need attention"
            
  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: sync-and-deploy
    if: always()
    steps:
      - name: Send notification
        run: |
          if [[ "${{ needs.sync-and-deploy.result }}" == "success" ]]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi 