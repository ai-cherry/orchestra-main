name: Deploy Admin Interface

on:
  push:
    branches: [ main ]
    paths: 
      - 'admin-interface/**'
      - '.github/workflows/deploy-admin-interface.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'admin-interface/**'
      - '.github/workflows/deploy-admin-interface.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.4.1
    
    - name: Install dependencies
      run: |
        cd admin-interface
        pnpm install
    
    - name: Run verification script
      run: |
        cd admin-interface
        node scripts/verify-setup.cjs || true
    
    - name: Run linting
      run: |
        cd admin-interface
        pnpm lint || true
    
    - name: Build test
      run: |
        cd admin-interface
        # Create minimal env for build test
        echo "VITE_PORTKEY_API_KEY=test" > .env
        echo "VITE_PORTKEY_CONFIG_ID=test" >> .env
        echo "VITE_BRAVE_API_KEY=test" >> .env
        echo "VITE_PERPLEXITY_API_KEY=test" >> .env
        pnpm build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.4.1
    
    - name: Install dependencies
      run: |
        cd admin-interface
        pnpm install
    
    - name: Create production environment file
      run: |
        cd admin-interface
        cat > .env.production << EOF
        VITE_PORTKEY_API_KEY=${{ secrets.PORTKEY_API_KEY }}
        VITE_PORTKEY_CONFIG_ID=${{ secrets.PORTKEY_CONFIG_ID }}
        VITE_BRAVE_API_KEY=${{ secrets.BRAVE_API_KEY }}
        VITE_PERPLEXITY_API_KEY=${{ secrets.PERPLEXITY_API_KEY }}
        VITE_EXA_API_KEY=${{ secrets.EXA_API_KEY }}
        VITE_TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}
        VITE_APOLLO_API_KEY=${{ secrets.APOLLO_API_KEY }}
        VITE_ELEVEN_LABS_API_KEY=${{ secrets.ELEVEN_LABS_API_KEY }}
        VITE_AIRBYTE_TOKEN=${{ secrets.AIRBYTE_TOKEN }}
        VITE_SLIDESPEAK_API_KEY=${{ secrets.SLIDESPEAK_API_KEY }}
        VITE_NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}
        VITE_NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}
        VITE_APP_ENV=production
        VITE_API_BASE_URL=${{ secrets.PRODUCTION_API_URL }}
        VITE_WEBSOCKET_URL=${{ secrets.PRODUCTION_WS_URL }}
        EOF
    
    - name: Build application
      run: |
        cd admin-interface
        pnpm build
    
    - name: Deploy to production
      run: |
        # Use Vercel CLI or GitHub App for deployment
        # Example:
        # - name: Deploy to Vercel
        #   run: npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        echo "Deploying to production..."
        
        # Example for Vercel:
        # npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
        
        # Example for AWS S3 + CloudFront:
        # aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} --delete
        # aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"
    
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi 