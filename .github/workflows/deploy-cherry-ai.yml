name: Deploy Cherry AI to Vultr

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'core/**'
      - 'agent/**'
      - 'packages/**'
      - 'requirements-minimal.txt'
      - 'Dockerfile.minimal'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -f Dockerfile.minimal -t cherry_ai-api-minimal:latest .
        docker save cherry_ai-api-minimal:latest | gzip > cherry_ai-api-minimal.tar.gz
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/vultr_key
        chmod 600 ~/.ssh/vultr_key
        ssh-keyscan -H 45.32.69.157 >> ~/.ssh/known_hosts
    
    - name: Copy Docker image to server
      run: |
        scp -i ~/.ssh/vultr_key cherry_ai-api-minimal.tar.gz root@45.32.69.157:/tmp/
    
    - name: Deploy to server
      run: |
        ssh -i ~/.ssh/vultr_key root@45.32.69.157 << 'ENDSSH'
        set -e
        
        # Load Docker image
        cd /opt/cherry_ai
        mv /tmp/cherry_ai-api-minimal.tar.gz .
        docker load < cherry_ai-api-minimal.tar.gz
        
        # Stop existing container
        docker stop cherry_ai-api 2>/dev/null || true
        docker rm cherry_ai-api 2>/dev/null || true
        
        # Run new container
        docker run -d \
          --name cherry_ai-api \
          --restart unless-stopped \
          -p 8000:8000 \
          -v /opt/cherry_ai/config:/app/core/conductor/src/config \
          -e ENVIRONMENT=production \
          -e CORS_ORIGINS="*" \
          cherry_ai-api-minimal:latest
        
        # Wait and check
        sleep 5
        docker ps | grep cherry_ai-api
        curl -s http://localhost:8000/api/health | jq .
        ENDSSH
    
    - name: Test deployment
      run: |
        sleep 10
        curl -f http://cherry-ai.me/api/health || exit 1
        echo "Cherry-ai.me is working!"