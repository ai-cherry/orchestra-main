name: Deploy AI Stack with ESC (LEGACY DISABLED)
# The workflow has been superseded by `.github/workflows/deploy.yaml`.
# Keeping the file for historical reference, but it is no longer executed automatically.
# To run it manually, trigger via the Actions tab â†’ "Deploy AI Stack with ESC (LEGACY DISABLED)".

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for manually running the legacy deploy pipeline"
        required: false
        default: "maintenance"

env:
  PULUMI_VERSION: "3.115.0"
  PYTHON_VERSION: "3.10"
  DOCKER_BUILDKIT: 1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write  # Required for OIDC

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Pulumi
        uses: pulumi/actions@v4
        with:
          pulumi-version: ${{ env.PULUMI_VERSION }}

      - name: Login to Pulumi via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::123456789012:role/PulumiAccessRole
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt
          pip install pulumi_digitalocean

      - name: Login to DigitalOcean Container Registry
        run: |
          echo ${{ secrets.DIGITALOCEAN_TOKEN }} | doctl registry login --access-token-stdin

      - name: Build and push Docker image
        run: |
          docker build -t registry.digitalocean.com/ai-stack/superagi:${{ github.sha }} .
          docker push registry.digitalocean.com/ai-stack/superagi:${{ github.sha }}

      - name: Deploy infrastructure
        run: |
          pulumi stack select production
          pulumi config set image_tag ${{ github.sha }}
          pulumi config set digitalocean:token ${{ secrets.DIGITALOCEAN_TOKEN }} --secret
          pulumi up --yes --skip-preview

      - name: Run smoke tests
        run: |
          ./scripts/run_smoke_tests.sh

      - name: Notify Slack
        uses: slackapi/slack-github-action@v2
        if: always()
        with:
          channel-id: 'deployments'
          slack-message: 'Deployment ${{ job.status }} for ${{ github.repository }}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
