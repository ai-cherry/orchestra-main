name: Deploy AI Stack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PULUMI_VERSION: "3.115.0"
  PYTHON_VERSION: "3.10"
  DOCKER_BUILDKIT: 1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Pulumi
        uses: pulumi/actions@v4
        with:
          pulumi-version: ${{ env.PULUMI_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pulumi_digitalocean

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to DigitalOcean Container Registry
        run: |
          echo ${{ secrets.DIGITALOCEAN_TOKEN }} | doctl registry login --access-token-stdin

      - name: Build and push Docker image
        run: |
          docker build -t registry.digitalocean.com/ai-stack/superagi:${{ github.sha }} .
          docker push registry.digitalocean.com/ai-stack/superagi:${{ github.sha }}

      - name: Deploy infrastructure
        run: |
          pulumi stack select production
          pulumi config set image_tag ${{ github.sha }}
          pulumi up --yes --skip-preview

      - name: Run smoke tests
        run: |
          ./scripts/run_smoke_tests.sh

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1
        if: always()
        with:
          channel-id: 'deployments'
          slack-message: 'Deployment ${{ job.status }} for ${{ github.repository }}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
