name: Deploy to GCP

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # Required for Workload Identity Federation
      contents: read     # Allows checking out the repository code
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Set up Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/525398941159/locations/global/workloadIdentityPools/github-wif-pool/providers/github-provider"
          service_account: "orchestra-wif-sa@cherry-ai-project.iam.gserviceaccount.com"
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Deploy to Cloud Run
        run: |
          # Build and deploy to Cloud Run
          gcloud builds submit --config=cloudbuild.yaml \
            --substitutions=_ENV=prod,_REGION=us-central1
          
          # Deploy the service to Cloud Run
          gcloud run deploy orchestra-api \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --service-account=orchestra-service@cherry-ai-project.iam.gserviceaccount.com \
            --quiet
      
      - name: Verify deployment
        run: |
          echo "Deployment complete!"
          SERVICE_URL=$(gcloud run services describe orchestra-api --region us-central1 --format='value(status.url)')
          echo "Service URL: $SERVICE_URL"
          
          # Optional: Add health check or smoke test
          # curl -s "$SERVICE_URL/health" | grep -q "ok" || exit 1