name: Deploy to Cloud Run

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  PROJECT_ID: cherry-ai-project
  REGION: us-central1
  REPO_NAME: orchestra-repo

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: orchestra-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests in container
        run: |
          docker run --rm orchestra-api:test poetry run pytest -xvs tests/

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-test
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Simplified authentication
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # Authenticate with service account key from secrets
      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > service-account.json
          gcloud auth activate-service-account --key-file=service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=service-account.json

      - name: Create .env file
        run: |
          cat > .env << EOF
          # Generated by GitHub Actions - deploy-cloud-run.yml
          GCP_PROJECT_ID=${{ env.PROJECT_ID }}
          GCP_REGION=${{ env.REGION }}
          GCP_ZONE=${{ env.REGION }}-a
          GCP_SERVICE_ACCOUNT=default
          ARTIFACT_REGISTRY_REPO=${{ env.REPO_NAME }}
          CLOUD_RUN_SERVICE_NAME=orchestra-api
          CLOUD_RUN_MIN_INSTANCES=0
          CLOUD_RUN_MAX_INSTANCES=5
          CLOUD_RUN_MEMORY=512Mi
          CLOUD_RUN_CPU=1
          CLOUD_RUN_CONCURRENCY=80
          CLOUD_RUN_TIMEOUT=300s
          CLOUD_RUN_ALLOW_UNAUTHENTICATED=true
          DEPLOYMENT_ENVIRONMENT=staging
          EOF
          
          echo "Created .env file for staging environment"
          
      - name: Run deployment script
        run: |
          # Make the script executable
          chmod +x ./deploy.sh
          
          # Run the deployment script (will use .env file)
          ./deploy.sh

  deploy-production:
    name: Deploy to Production
    needs: build-and-test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Simplified authentication
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # Authenticate with service account key from secrets
      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > service-account.json
          gcloud auth activate-service-account --key-file=service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=service-account.json

      - name: Create .env file
        run: |
          cat > .env << EOF
          # Generated by GitHub Actions - deploy-cloud-run.yml
          GCP_PROJECT_ID=${{ env.PROJECT_ID }}
          GCP_REGION=${{ env.REGION }}
          GCP_ZONE=${{ env.REGION }}-a
          GCP_SERVICE_ACCOUNT=default
          ARTIFACT_REGISTRY_REPO=${{ env.REPO_NAME }}
          CLOUD_RUN_SERVICE_NAME=orchestra-api-prod
          CLOUD_RUN_MIN_INSTANCES=1
          CLOUD_RUN_MAX_INSTANCES=10
          CLOUD_RUN_MEMORY=1Gi
          CLOUD_RUN_CPU=2
          CLOUD_RUN_CONCURRENCY=80
          CLOUD_RUN_TIMEOUT=300s
          CLOUD_RUN_ALLOW_UNAUTHENTICATED=true
          DEPLOYMENT_ENVIRONMENT=production
          EOF
          
          echo "Created .env file for production environment"
          
      - name: Run deployment script
        run: |
          # Make the script executable
          chmod +x ./deploy.sh
          
          # Run the deployment script (will use .env file)
          ./deploy.sh
