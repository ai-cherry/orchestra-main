name: Build and Deploy Workstation Image

on:
  push:
    branches: [main]
    paths:
      - 'docker/workstation/**'
      - '.github/workflows/build-workstation-image.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      version:
        description: 'Version tag for the image'
        required: false
        default: 'latest'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGISTRY_LOCATION: us-central1
  REGISTRY_NAME: orchestra-container-registry
  IMAGE_NAME: orchestra-workstation
  WORKDIR: docker/workstation

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build and Push Container Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "IMAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "IMAGE_VERSION=latest" >> $GITHUB_ENV
          fi
      
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKDIR }}
          push: true
          tags: |
            ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
            ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.ENVIRONMENT }}
            ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            GIT_SHA=${{ github.sha }}
            GIT_REF=${{ github.ref }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
      
      - name: Deploy to workstation config (if needed)
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Updating workstation configs to use new image..."
            CONFIGS=$(gcloud workstations configs list --project="${{ env.PROJECT_ID }}" --format="value(name)" --filter="name~orchestra")
            
            for CONFIG in $CONFIGS; do
              if [[ "$CONFIG" == *"${{ env.ENVIRONMENT }}"* ]]; then
                echo "Updating config: $CONFIG"
                gcloud workstations configs update $CONFIG \
                  --project="${{ env.PROJECT_ID }}" \
                  --container-image="${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}" \
                  --location="${{ env.REGISTRY_LOCATION }}"
              fi
            done
          else
            echo "Skipping workstation config update for non-manual deployments"
          fi
      
      - name: Summary
        run: |
          echo "## Workstation Image Build" >> $GITHUB_STEP_SUMMARY
          echo "Environment: ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "Image: ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "SHA: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY