name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements/dev.txt
      - name: Run Make validate
        run: |
          source venv/bin/activate
          make validate
  python-version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check Python version
        run: |
          PYVER=$(python3 --version | awk '{print $2}')
          MAJOR=$(echo $PYVER | cut -d. -f1)
          MINOR=$(echo $PYVER | cut -d. -f2)
          if [ "$MAJOR" -lt 3 ] || { [ "$MAJOR" -eq 3 ] && [ "$MINOR" -lt 11 ]; }; then
            echo "Python 3.11+ required, found $PYVER" >&2
            exit 1
          fi
          echo "Python version OK: $PYVER"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install black flake8 mypy
      - name: Run black
        run: |
          source venv/bin/activate
          black --check .
      - name: Run flake8
        run: |
          source venv/bin/activate
          flake8 .
      - name: Run mypy
        run: |
          source venv/bin/activate
          mypy .

  admin-ui-lint-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          cd admin-ui
          npm ci
      - name: Lint admin-ui
        run: |
          cd admin-ui
          npm run lint || echo "lint warnings only"
      - name: Build admin-ui
        run: |
          cd admin-ui
          npm run build

  pulumi-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Pulumi
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin
      - name: Pulumi preview (admin-ui)
        run: |
          cd infra/admin_ui_site
          pulumi stack select gcp/dev/admin-ui || pulumi stack init gcp/dev/admin-ui
          pulumi preview --non-interactive
    schedule:
      - cron: '0 4 * * *'
