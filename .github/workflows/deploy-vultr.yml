name: Deploy to Vultr

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Deployment type'
        required: true
        default: 'update'
        type: choice
        options:
        - update
        - full
        - rollback

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH
      env:
        VULTR_SSH_KEY: ${{ secrets.VULTR_SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$VULTR_SSH_KEY" > ~/.ssh/vultr_key
        chmod 600 ~/.ssh/vultr_key
        ssh-keyscan -H ${{ secrets.VULTR_IP_ADDRESS }} >> ~/.ssh/known_hosts

    - name: Test connection
      run: |
        ssh -i ~/.ssh/vultr_key root@${{ secrets.VULTR_IP_ADDRESS }} "echo 'Connected to Vultr server'"

    - name: Deploy updates
      if: github.event.inputs.deploy_type == 'update' || github.event_name == 'push'
      env:
        VULTR_IP: ${{ secrets.VULTR_IP }}
      run: |
        # Update code
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/vultr_key root@$VULTR_IP << 'EOF'
        cd /root/orchestra-main
        git pull origin main
        source venv/bin/activate
        pip install -r requirements/production/requirements.txt

        # Restart services
        systemctl restart orchestra-real

        # Health check
        sleep 5
        curl -s http://localhost/health || exit 1
        EOF

    - name: Full deployment
      if: github.event.inputs.deploy_type == 'full'
      run: |
        # Update the deploy script with actual repo URL
        sed -i "s|https://github.com/yourusername/orchestra-main.git|${{ github.server_url }}/${{ github.repository }}.git|" deploy_to_vultr.sh

        # Run full deployment
        ./deploy_to_vultr.sh

    - name: Rollback
      if: github.event.inputs.deploy_type == 'rollback'
      run: |
        ssh -i ~/.ssh/vultr_key root@${{ secrets.VULTR_IP_ADDRESS }} << 'EOF'
        cd /root/orchestra-main
        git reset --hard HEAD~1
        systemctl restart orchestra-real
        EOF

    - name: Post-deployment check
      if: always()
      run: |
        echo "🔍 Checking deployment status..."
        ssh -i ~/.ssh/vultr_key root@${{ secrets.VULTR_IP_ADDRESS }} << 'EOF'
        echo "=== Service Status ==="
        systemctl is-active orchestra-real docker postgresql nginx

        echo -e "\n=== API Health ==="
        curl -s http://localhost/health | jq . || echo "API not responding"

        echo -e "\n=== Resource Usage ==="
        free -h
        df -h /

        echo -e "\n=== Recent Logs ==="
        journalctl -u orchestra-real --no-pager -n 10
        EOF

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi

    - name: Cleanup
      if: always()
      run: |
        rm -f ~/.ssh/vultr_key
