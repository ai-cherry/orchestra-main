name: Simple CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          set -euo pipefail
          pip install poetry==1.7.1
          poetry config virtualenvs.in-project true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest tests/ -v

      - name: Check code formatting
        run: |
          set -euo pipefail
          poetry run black --check .
          poetry run isort --check-only .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: cherry-ai-project

      - name: Deploy to Cloud Run
        run: |
          set -euo pipefail
          # Build and push Docker image
          gcloud builds submit --tag gcr.io/cherry-ai-project/orchestra-api

          # Deploy to Cloud Run
          gcloud run deploy orchestra-api \
            --image gcr.io/cherry-ai-project/orchestra-api \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated
