{
  "name": "Full-Stack Development Workflow",
  "description": "Comprehensive multi-modal development workflow with specialized model routing",
  "orchestrator": "🪃 Orchestrator", 
  "version": "1.0.0",
  "stages": [
    {
      "id": "design",
      "task": "System architecture and design",
      "mode": "🏗 Architect",
      "model": "claude-sonnet",
      "inputs": ["requirements", "constraints", "existing_architecture"],
      "outputs": ["architecture_diagram", "component_specifications", "api_contracts"],
      "completionCriteria": "Architecture diagram approved and component interfaces defined",
      "estimatedTokens": 2500,
      "dependencies": []
    },
    {
      "id": "backend",
      "task": "Core backend functionality",
      "mode": "💻 Developer - Python 3.10+",
      "model": "deepseek-r1",
      "inputs": ["architecture_diagram", "api_contracts"],
      "outputs": ["api_implementation", "database_models", "tests"],
      "subtasks": [
        "API endpoint implementation",
        "Database schema and models",
        "Authentication and authorization",
        "Unit and integration tests"
      ],
      "completionCriteria": "All tests passing and API endpoints functional",
      "estimatedTokens": 4000,
      "dependencies": ["design"]
    },
    {
      "id": "frontend",
      "task": "UI/UX implementation",
      "mode": "🎨 UI Designer",
      "model": "gpt-4o-2024-11-20",
      "inputs": ["component_specifications", "api_contracts", "design_system"],
      "outputs": ["components", "pages", "storybook_stories", "accessibility_tests"],
      "subtasks": [
        "Component library development",
        "Page layouts and routing",
        "Responsive design implementation",
        "Accessibility compliance",
        "Storybook integration"
      ],
      "validation": "Storybook interaction tests and WCAG compliance verification",
      "completionCriteria": "All components tested and accessibility validated",
      "estimatedTokens": 3500,
      "dependencies": ["design"]
    },
    {
      "id": "integration",
      "task": "System integration and testing",
      "mode": "✅ Quality Control",
      "model": "claude-haiku",
      "inputs": ["api_implementation", "components", "tests"],
      "outputs": ["integration_tests", "e2e_tests", "performance_report"],
      "completionCriteria": "All integration tests passing and performance benchmarks met",
      "estimatedTokens": 2000,
      "dependencies": ["backend", "frontend"]
    },
    {
      "id": "deployment",
      "task": "Infrastructure and deployment",
      "mode": "🏗 Architect",
      "model": "claude-sonnet",
      "inputs": ["complete_application", "performance_requirements"],
      "outputs": ["infrastructure_code", "deployment_pipeline", "monitoring_setup"],
      "completionCriteria": "Application successfully deployed with monitoring active",
      "estimatedTokens": 2000,
      "dependencies": ["integration"]
    }
  ],
  "qualityGates": [
    {
      "stage": "backend",
      "checks": ["test_coverage >= 90%", "security_scan_passed", "performance_benchmarks_met"]
    },
    {
      "stage": "frontend", 
      "checks": ["accessibility_score >= 95%", "lighthouse_score >= 90%", "storybook_stories_complete"]
    },
    {
      "stage": "integration",
      "checks": ["e2e_tests_passed", "load_test_passed", "security_audit_passed"]
    }
  ],
  "contextManagement": {
    "preserveAcrossStages": ["architecture_decisions", "api_contracts", "design_tokens"],
    "snapshotFrequency": "per_stage",
    "maxContextSize": 100000
  },
  "errorHandling": {
    "retryPolicy": {
      "maxRetries": 3,
      "backoffMultiplier": 2
    },
    "fallbackModels": {
      "gpt-4o-2024-11-20": "gpt4-turbo",
      "deepseek-r1": "claude-sonnet",
      "claude-sonnet": "gpt4-turbo"
    }
  }
} 