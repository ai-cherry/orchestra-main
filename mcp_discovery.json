{
  "version": "1.0.0",
  "timestamp": "2025-06-03T23:43:05.551925",
  "auth": {
    "mode": "single_user",
    "header": "X-API-Key",
    "required": true,
    "context_aware": true
  },
  "mcp_servers": {
    "memory": {
      "name": "memory",
      "type": "memory",
      "port": 8003,
      "capabilities": [
        "context_storage",
        "vector_search",
        "memory_management"
      ],
      "description": "Memory and context management with PostgreSQL + Weaviate",
      "priority": 1,
      "health_endpoint": "/health",
      "environment_vars": {
        "POSTGRES_URL": "postgresql://postgres:postgres@postgres:5432/cherry_ai",
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "conductor": {
      "name": "conductor",
      "type": "coordination",
      "port": 8002,
      "capabilities": [
        "workflow_management",
        "task_coordination",
        "agent_coordination"
      ],
      "description": "Agent coordination and workflow management",
      "priority": 1,
      "health_endpoint": "/health",
      "environment_vars": {
        "API_URL": "http://api:8080",
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "tools": {
      "name": "tools",
      "type": "tools",
      "port": 8006,
      "capabilities": [
        "tool_discovery",
        "tool_execution",
        "postgres_query",
        "cache_operations"
      ],
      "description": "Tool registry and execution with PostgreSQL/Redis/Weaviate tools",
      "priority": 2,
      "health_endpoint": "/health",
      "environment_vars": {
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "code-intelligence": {
      "name": "code-intelligence",
      "type": "code",
      "port": 8007,
      "capabilities": [
        "ast_analysis",
        "function_search",
        "complexity_analysis",
        "code_smells"
      ],
      "description": "Advanced code analysis and intelligence",
      "priority": 2,
      "health_endpoint": "/health",
      "environment_vars": {
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "git-intelligence": {
      "name": "git-intelligence",
      "type": "git",
      "port": 8008,
      "capabilities": [
        "git_history",
        "blame_analysis",
        "hotspot_detection",
        "contributor_stats"
      ],
      "description": "Git history and change analysis",
      "priority": 3,
      "health_endpoint": "/health",
      "environment_vars": {
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "weaviate": {
      "name": "weaviate",
      "type": "vector",
      "port": 8001,
      "capabilities": [
        "vector_search",
        "semantic_search",
        "embedding_storage"
      ],
      "description": "Vector database operations",
      "priority": 2,
      "health_endpoint": "/health",
      "environment_vars": {
        "WEAVIATE_URL": "http://weaviate:8080",
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    },
    "deployment": {
      "name": "deployment",
      "type": "deployment",
      "port": 8005,
      "capabilities": [
        "Lambda_deployment",
        "infrastructure_management"
      ],
      "description": "Deployment and infrastructure management",
      "priority": 3,
      "health_endpoint": "/health",
      "environment_vars": {
        "LAMBDA_API_KEY": "${LAMBDA_API_KEY}",
        "cherry_ai_API_KEY": "${cherry_ai_API_KEY}",
        "cherry_ai_CONTEXT": "${cherry_ai_CONTEXT:-development}",
        "AUTH_MODE": "single_user",
        "ALLOW_HEALTH_NO_AUTH": "true"
      },
      "auth_required": true
    }
  },
  "ai_agents": {
    "roo": {
      "name": "roo",
      "type": "roo",
      "mcp_servers": [
        "memory",
        "conductor",
        "tools",
        "code-intelligence",
        "git-intelligence"
      ],
      "routing_rules": {
        "code_analysis": "code-intelligence",
        "git_operations": "git-intelligence",
        "context_retrieval": "memory",
        "tool_execution": "tools",
        "workflow_management": "conductor"
      },
      "cache_settings": {
        "ttl": 3600,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 120
      },
      "auto_configure": true
    },
    "factory-architect": {
      "name": "factory-architect",
      "type": "factory",
      "mcp_servers": [
        "conductor",
        "memory",
        "code-intelligence",
        "deployment"
      ],
      "routing_rules": {
        "system_design": "conductor",
        "architecture_planning": "memory",
        "code_structure": "code-intelligence",
        "deployment_planning": "deployment"
      },
      "cache_settings": {
        "ttl": 7200,
        "strategy": "lfu"
      },
      "rate_limits": {
        "requests_per_minute": 60
      },
      "auto_configure": true
    },
    "factory-code": {
      "name": "factory-code",
      "type": "factory",
      "mcp_servers": [
        "code-intelligence",
        "git-intelligence",
        "tools",
        "memory"
      ],
      "routing_rules": {
        "code_generation": "code-intelligence",
        "refactoring": "code-intelligence",
        "optimization": "tools",
        "code_context": "git-intelligence"
      },
      "cache_settings": {
        "ttl": 1800,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 100
      },
      "auto_configure": true
    },
    "factory-debug": {
      "name": "factory-debug",
      "type": "factory",
      "mcp_servers": [
        "tools",
        "code-intelligence",
        "git-intelligence",
        "memory"
      ],
      "routing_rules": {
        "error_analysis": "code-intelligence",
        "debugging": "tools",
        "performance_profiling": "tools",
        "error_history": "git-intelligence"
      },
      "cache_settings": {
        "ttl": 900,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 80
      },
      "auto_configure": true
    },
    "claude": {
      "name": "claude",
      "type": "claude",
      "mcp_servers": [
        "memory",
        "code-intelligence",
        "git-intelligence",
        "tools"
      ],
      "routing_rules": {
        "general_coding": "code-intelligence",
        "context_understanding": "memory",
        "change_analysis": "git-intelligence",
        "tool_usage": "tools"
      },
      "cache_settings": {
        "ttl": 3600,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 150
      },
      "auto_configure": true
    },
    "cursor": {
      "name": "cursor",
      "type": "cursor",
      "mcp_servers": [
        "code-intelligence",
        "git-intelligence",
        "tools",
        "memory"
      ],
      "routing_rules": {
        "code_completion": "code-intelligence",
        "file_history": "git-intelligence",
        "quick_tools": "tools",
        "project_context": "memory"
      },
      "cache_settings": {
        "ttl": 1800,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 200
      },
      "auto_configure": true
    },
    "openai": {
      "name": "openai",
      "type": "openai",
      "mcp_servers": [
        "tools",
        "memory",
        "code-intelligence"
      ],
      "routing_rules": {
        "general_assistance": "tools",
        "context_retrieval": "memory",
        "code_help": "code-intelligence"
      },
      "cache_settings": {
        "ttl": 3600,
        "strategy": "lru"
      },
      "rate_limits": {
        "requests_per_minute": 100
      },
      "auto_configure": true
    }
  }
}