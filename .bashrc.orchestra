#!/bin/bash
# Orchestra AI Environment Configuration
# Source this file to set up your Orchestra development environment

# Pulumi Cloud authentication (no passphrase ever)
export PULUMI_ACCESS_TOKEN="pul-1b1a580210be93c4d2d1d7b271ca5f7f153d51c1"
export PULUMI_SKIP_UPDATE_CHECK=true # Optional: skips "new version available" messages

# Attempt to log in to Pulumi Cloud if not already. Errors are suppressed.
# This ensures subsequent pulumi commands use the cloud backend.
pulumi login --cloud-url https://api.pulumi.com > /dev/null 2>&1 || true

# Python path
export PYTHONPATH="${PYTHONPATH}:${PWD}"

# Convenience aliases
# Note: Removed PULUMI_CONFIG_PASSPHRASE from aliases as it's no longer needed
alias pulumi-orchestra="pulumi" # Simpler, as login is handled above
alias deploy-orchestra="cd ${PWD}/infra && pulumi up --yes"
alias orchestra-status="cd ${PWD}/infra && pulumi stack output"
alias orchestra-logs="cd ${PWD}/infra && pulumi logs -f"

# Function to run Orchestra commands
# Note: Removed PULUMI_CONFIG_PASSPHRASE as it's no longer needed
orchestra() {
    case "$1" in
        deploy)
            cd "${PWD}/infra" && pulumi up --yes
            ;;
        status)
            cd "${PWD}/infra" && pulumi stack output
            ;;
        destroy)
            cd "${PWD}/infra" && pulumi destroy --yes
            ;;
        test)
            python test_modular_system.py
            ;;
        api)
            cd core && python -m api.main
            ;;
        *)
            echo "Usage: orchestra {deploy|status|destroy|test|api}"
            ;;
    esac
}

echo "Orchestra environment (Pulumi Cloud Mode) loaded! Available commands:"
echo "  orchestra deploy  - Deploy to DigitalOcean"
echo "  orchestra status  - Show deployment status"
echo "  orchestra destroy - Tear down infrastructure"
echo "  orchestra test    - Test the modular system"
echo "  orchestra api     - Start the API locally"
