version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cherry_ai_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres -c shared_buffers=256MB -c max_connections=200 -c effective_cache_size=1GB -c maintenance_work_mem=64MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200 -c work_mem=4MB -c min_wal_size=1GB -c max_wal_size=4GB

  redis:
    image: redis:7-alpine
    container_name: cherry_ai_redis
    restart: unless-stopped
    command:
      - redis-server
      - --maxmemory
      - 512mb
      - --maxmemory-policy
      - allkeys-lru
      - --save
      - "900 1"
      - --save
      - "300 10"
      - --save
      - "60 10000"
      - --appendonly
      - "yes"
      - --appendfsync
      - everysec
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: cherry_ai_weaviate
    restart: unless-stopped
    ports:
      - "${WEAVIATE_PORT:-8080}:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: '${WEAVIATE_API_KEY}'
      AUTHENTICATION_APIKEY_USERS: 'admin'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai,generative-openai'
      CLUSTER_HOSTNAME: 'node1'
      CLUSTER_GOSSIP_BIND_PORT: '7946'
      CLUSTER_DATA_BIND_PORT: '7947'
      STANDALONE_MODE: 'true'
      OPENAI_APIKEY: '${OPENAI_API_KEY}'
      LIMIT_RESOURCES: 'true'
      GOMAXPROCS: '4'
      PERSISTENCE_LSM_ACCESS_STRATEGY: 'mmap'
      TRACK_VECTOR_DIMENSIONS: 'true'
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080/v1/.well-known/ready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 2g
    mem_reservation: 1g

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cherry_ai_api
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WEAVIATE_HOST=weaviate
      - WEAVIATE_PORT=8080
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_POOL_MIN_SIZE=${DATABASE_POOL_MIN_SIZE:-5}
      - DATABASE_POOL_MAX_SIZE=${DATABASE_POOL_MAX_SIZE:-20}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
      - ./config:/app/config
      - ./data:/app/data
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --workers 4

volumes:
  postgres_data:
  redis_data:
  weaviate_data:


networks:
  default:
    name: cherry_ai_network
