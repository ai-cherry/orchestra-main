#!/bin/bash
# Comprehensive AI + MCP System Startup
# Generated by verify_ai_mcp_integration.py

set -e

echo "üöÄ Starting Comprehensive AI + MCP System..."

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# Check if virtual environment is activated
if [[ "$VIRTUAL_ENV" != "" ]]; then
    echo -e "${GREEN}‚úÖ Virtual environment active${NC}"
else
    echo -e "${BLUE}Activating virtual environment...${NC}"
    if [ -d "venv" ]; then
        source venv/bin/activate
    else
        echo -e "${RED}‚ùå Virtual environment not found${NC}"
        exit 1
    fi
fi

# Start MCP servers
echo -e "${BLUE}Starting MCP servers...${NC}"
./start_mcp_system.sh

# Wait for servers to be ready
echo -e "${BLUE}Waiting for MCP servers to be ready...${NC}"
sleep 10

# Verify all servers are running
echo -e "${BLUE}Verifying server health...${NC}"
python scripts/verify_ai_mcp_integration.py --health-check-only

echo -e "${GREEN}üéâ All systems ready for AI coding assistance!${NC}"
echo ""
echo "Available MCP servers:"
echo "  - Memory (context storage): http://localhost:8003"
echo "  - Conductor (orchestration): http://localhost:8002"
echo "  - Tools (tool execution): http://localhost:8006"
echo "  - Code Intelligence: http://localhost:8007"
echo "  - Git Intelligence: http://localhost:8008"
echo ""
echo "AI Services configured:"
echo "  - Claude (via claude_mcp_config.json)"
echo "  - OpenAI (via openai_mcp_config.json)"
echo "  - Cursor (via .cursor/mcp.json)"
echo "  - Roo (via .roo/mcp.json)"
echo "  - Factory AI (via .factory-ai-config)"
echo ""
echo "Ready for enhanced AI coding with full contextualization! ü§ñ‚ú®"
