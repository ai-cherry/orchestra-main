events {
    worker_connections 1024;
}

http {
    upstream api_backend {
        server api:5000;
    }

    upstream admin_frontend {
        server admin:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Main API Server
    server {
        listen 80;
        listen 443 ssl http2;
        server_name api.cherry-ai.com;

        ssl_certificate /etc/nginx/ssl/cherry-ai.com.crt;
        ssl_certificate_key /etc/nginx/ssl/cherry-ai.com.key;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$server_name$request_uri;
        }

        # API Routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # WebSocket endpoint
        location /socket.io/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            proxy_pass http://api_backend;
            access_log off;
        }
    }

    # Admin Interface
    server {
        listen 80;
        listen 443 ssl http2;
        server_name admin.cherry-ai.com;

        ssl_certificate /etc/nginx/ssl/cherry-ai.com.crt;
        ssl_certificate_key /etc/nginx/ssl/cherry-ai.com.key;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$server_name$request_uri;
        }

        # Admin Interface
        location / {
            limit_req zone=admin burst=10 nodelay;
            
            proxy_pass http://admin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Static file caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }

    # Main Website (if needed)
    server {
        listen 80;
        listen 443 ssl http2;
        server_name cherry-ai.com www.cherry-ai.com;

        ssl_certificate /etc/nginx/ssl/cherry-ai.com.crt;
        ssl_certificate_key /etc/nginx/ssl/cherry-ai.com.key;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$server_name$request_uri;
        }

        # Redirect www to non-www
        if ($host = 'www.cherry-ai.com') {
            return 301 https://cherry-ai.com$request_uri;
        }

        # Redirect to admin interface for now
        location / {
            return 301 https://admin.cherry-ai.com$request_uri;
        }
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}

