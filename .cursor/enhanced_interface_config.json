{
  "cursor_ai_enhancements": {
    "smart_command_interface": {
      "enabled": true,
      "auto_suggestions": true,
      "context_awareness": true,
      "command_history": true
    },
    "prompt_enhancement": {
      "templates": {
        "debugging": {
          "prefix": "üêõ Debug:",
          "template": "Analyze the following code issue and provide step-by-step debugging approach:\n\nContext: {context}\nIssue: {issue}\nExpected: {expected}\nActual: {actual}\n\nPlease provide:\n1. t cause analysis\n2. Debugging steps\n3. Potential fixes\n4. Prevention strategies"
        },
        "refactoring": {
          "prefix": "üîß Refactor:",
          "template": "Refactor the following code to improve {focus_area}:\n\nCurrent code:\n{code}\n\nRequirements:\n- Maintain functionality\n- Improve {focus_area}\n- Follow Cherry AI coding standards\n- Add appropriate tests\n\nPlease provide:\n1. Refactored code\n2. Explanation of changes\n3. Performance impact\n4. Test recommendations"
        },
        "infrastructure": {
          "prefix": "üèóÔ∏è Infrastructure:",
          "template": "Infrastructure task: {task}\n\nCurrent setup:\n- Production: 45.32.69.157\n- Database: 45.77.87.106\n- Staging: 207.246.108.201\n\nContext: {context}\n\nPlease provide:\n1. Implementation steps\n2. Risk assessment\n3. Rollback plan\n4. Monitoring requirements"
        },
        "database": {
          "prefix": "üóÑÔ∏è Database:",
          "template": "Database task: {task}\n\nCurrent databases:\n- PostgreSQL (primary)\n- Redis (cache)\n- Weaviate (vector)\n- Pinecone (vector)\n\nContext: {context}\n\nPlease provide:\n1. SQL/query implementation\n2. Performance considerations\n3. Index recommendations\n4. Migration strategy"
        }
      },
      "chain_of_thought": {
        "enabled": true,
        "complexity_levels": {
          "simple": "Think step by step:",
          "detailed": "Let me think through this carefully, step by step:",
          "expert": "Let me analyze this systematically with expert-level reasoning:"
        }
      }
    },
    "model_routing": {
      "task_based_routing": {
        "coding": "claude-3-sonnet",
        "architecture": "claude-3-opus", 
        "debugging": "claude-3-sonnet",
        "documentation": "claude-3-haiku",
        "infrastructure": "claude-3-sonnet"
      },
      "fallback_model": "claude-3-sonnet"
    },
    "workflow_automation": {
      "common_workflows": {
        "feature_development": [
          "get_smart_suggestions: Implementing new feature {feature_name}",
          "search_codebase: {feature_name}",
          "get_file_structure: relevant_directory",
          "analyze_project: development"
        ],
        "bug_fix": [
          "get_smart_suggestions: Fixing bug {bug_description}",
          "search_codebase: {error_pattern}",
          "read_file: {affected_file}",
          "get_command_history: 5"
        ],
        "deployment": [
          "get_smart_suggestions: Deploying to production",
          "analyze_project: infrastructure",
          "get_file_structure: .github/workflows",
          "read_file: deploy_to_production.sh"
        ]
      }
    }
  },
  "keyboard_shortcuts": {
    "smart_suggestions": "Cmd+Shift+S",
    "command_history": "Cmd+Shift+H",
    "template_picker": "Cmd+Shift+T",
    "model_switcher": "Cmd+Shift+M"
  },
  "ui_enhancements": {
    "status_indicators": {
      "active_model": true,
      "usage_limits": true,
      "context_size": true,
      "command_count": true
    },
    "quick_actions": {
      "analyze_current_file": true,
      "search_related_files": true,
      "get_context_suggestions": true,
      "view_command_history": true
    }
  }
}

