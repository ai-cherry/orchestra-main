{
  "mcpServers": {
    "cherry-ai-codebase": {
      "command": "python",
      "args": [
        "/var/www/cherry-ai/mcp_server/servers/enhanced_codebase_server.py"
      ],
      "env": {
        "PYTHONPATH": "/var/www/cherry-ai",
        "PROJECT_ROOT": "/var/www/cherry-ai"
      },
      "description": "Cherry AI Orchestrator codebase analysis and context provider"
    },
    "cherry-ai-infrastructure": {
      "command": "python",
      "args": [
        "/var/www/cherry-ai/mcp_server/servers/infrastructure_manager.py"
      ],
      "env": {
        "PYTHONPATH": "/var/www/cherry-ai",
        "LAMBDA_API_KEY": "${LAMBDA_API_KEY}",
        "PULUMI_ACCESS_TOKEN": "${PULUMI_ACCESS_TOKEN}"
      },
      "description": "Infrastructure management and deployment automation"
    },
    "cherry-ai-database": {
      "command": "python",
      "args": [
        "/var/www/cherry-ai/mcp_server/servers/database_manager.py"
      ],
      "env": {
        "PYTHONPATH": "/var/www/cherry-ai",
        "WEAVIATE_URL": "${WEAVIATE_URL}",
        "WEAVIATE_API_KEY": "${WEAVIATE_API_KEY}",
        "PINECONE_API_KEY": "${PINECONE_API_KEY}",
        "REDIS_USER_API_KEY": "${REDIS_USER_API_KEY}"
      },
      "description": "Database operations and vector store management"
    },
    "cherry-ai-ai-services": {
      "command": "python",
      "args": [
        "/var/www/cherry-ai/mcp_server/servers/ai_services_manager.py"
      ],
      "env": {
        "PYTHONPATH": "/var/www/cherry-ai",
        "OPENAI_API_KEY": "${OPENAI_API_KEY}",
        "ANTHROPIC_API_KEY": "${ANTHROPIC_API_KEY}",
        "GEMINI_API_KEY": "${GEMINI_API_KEY}",
        "OPENROUTER_API_KEY": "${OPENROUTER_API_KEY}",
        "PERPLEXITY_API_KEY": "${PERPLEXITY_API_KEY}"
      },
      "description": "AI services integration and management"
    }
  },
  "globalSettings": {
    "logLevel": "info",
    "timeout": 30000,
    "retryAttempts": 3,
    "enableCaching": true,
    "cacheDirectory": "/tmp/cherry-ai-mcp-cache"
  },
  "cursorIntegration": {
    "enabled": true,
    "contextWindow": 32000,
    "autoComplete": true,
    "codeAnalysis": true,
    "projectAware": true,
    "customPrompts": {
      "codeReview": "Analyze this code in the context of the Cherry AI Orchestrator project. Consider the project structure, dependencies, and coding patterns.",
      "debugging": "Help debug this issue considering the Cherry AI infrastructure setup and deployment environment.",
      "optimization": "Suggest optimizations for this code considering the production environment and performance requirements.",
      "documentation": "Generate documentation for this code following the Cherry AI project documentation standards."
    }
  },
  "aiToolsIntegration": {
    "openaiCodex": {
      "enabled": true,
      "model": "gpt-4",
      "contextProvider": "cherry-ai-codebase",
      "systemPrompt": "You are an expert developer working on the Cherry AI Orchestrator project. You have access to the complete codebase structure, dependencies, and infrastructure setup."
    },
    "anthropicClaude": {
      "enabled": true,
      "model": "claude-3-sonnet-20240229",
      "contextProvider": "cherry-ai-codebase",
      "systemPrompt": "You are a senior software architect helping with the Cherry AI Orchestrator project. Focus on code quality, security, and scalability."
    },
    "googleJules": {
      "enabled": true,
      "model": "gemini-pro",
      "contextProvider": "cherry-ai-codebase",
      "systemPrompt": "You are an AI coding assistant specialized in full-stack development and DevOps for the Cherry AI project."
    }
  },
  "developmentWorkflows": {
    "codeGeneration": {
      "templates": "/var/www/cherry-ai/.ai-tools/templates",
      "patterns": "/var/www/cherry-ai/.ai-tools/patterns",
      "snippets": "/var/www/cherry-ai/.ai-tools/snippets"
    },
    "testing": {
      "autoTest": true,
      "testFrameworks": ["pytest", "jest"],
      "coverageThreshold": 80
    },
    "deployment": {
      "autoValidate": true,
      "stagingFirst": true,
      "rollbackOnFailure": true
    }
  }
}

